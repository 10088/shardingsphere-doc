1,3c1,3
< commit 46de938b87eb3ddf5abb565c42d23c40271b44a8
< Author: Juan Pan(Trista) <panjuan@apache.org>
< Date:   Wed Sep 30 17:25:25 2020 +0800
---
> commit d119770e16429515a128ec0b2f90a9c4550ec29a
> Author: Haoran Meng <menghaoranss@gmail.com>
> Date:   Wed Sep 30 20:45:30 2020 +0800
5c5
<     Update API doc for RDL (#7671)
---
>     Refactor document for ui (#7673)
7,135c7,179
< diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/sharding.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/sharding.cn.md
< index 01ad680969..44d478be4b 100644
< --- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/sharding.cn.md
< +++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/sharding.cn.md
< @@ -8,6 +8,7 @@ weight = 1
<  ```properties
<  spring.shardingsphere.datasource.names= # 省略数据源配置
<  
< +# 标准分片表配置
<  spring.shardingsphere.rules.sharding.tables.<table-name>.actual-data-nodes= # 由数据源名 + 表名组成，以小数点分隔。多个表以逗号分隔，支持inline表达式。缺省表示使用已知数据源与逻辑表名称生成数据节点，用于广播表（即每个库中都需要一个同样的表用于关联查询，多为字典表）或只分库不分表且所有库的表结构完全一致的情况
<  
<  # 分库策略，缺省表示使用默认分库策略，以下的分片策略只能选其一
< @@ -26,6 +27,12 @@ spring.shardingsphere.rules.sharding.tables.<table-name>.database-strategy.hint.
<  # 分表策略，同分库策略
<  spring.shardingsphere.rules.sharding.tables.<table-name>.table-strategy.xxx= # 省略
<  
< +# 自动分片表配置
< +spring.shardingsphere.rules.sharding.auto-tables.<auto-table-name>.actual-data-sources= # 数据源名
< +
< +spring.shardingsphere.rules.sharding.auto-tables.<auto-table-name>.sharding-strategy.standard.sharding-column= # 分片列名称
< +spring.shardingsphere.rules.sharding.auto-tables.<auto-table-name>.sharding-strategy.standard.sharding-algorithm= # 自动分片算法名称
< +
<  # 分布式序列策略配置
<  spring.shardingsphere.rules.sharding.tables.<table-name>.key-generate-strategy.column= # 分布式序列列名称
<  spring.shardingsphere.rules.sharding.tables.<table-name>.key-generate-strategy.key-generator-name= # 分布式序列算法名称
< diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/sharding.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/sharding.en.md
< index 5b553ab499..4416810194 100644
< --- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/sharding.en.md
< +++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/sharding.en.md
< @@ -8,6 +8,7 @@ weight = 1
<  ```properties
<  spring.shardingsphere.datasource.names= # Omit data source configuration
<  
< +# Standard sharding table configuration
<  spring.shardingsphere.rules.sharding.tables.<table-name>.actual-data-nodes= # Describe data source names and actual tables, delimiter as point, multiple data nodes separated with comma, support inline expression. Absent means sharding databases only.
<  
<  # Databases sharding strategy, use default databases sharding strategy if absent. sharding strategy below can choose only one.
< @@ -26,6 +27,12 @@ spring.shardingsphere.rules.sharding.tables.<table-name>.database-strategy.hint.
<  # Tables sharding strategy, same as database sharding strategy
<  spring.shardingsphere.rules.sharding.tables.<table-name>.table-strategy.xxx= # Omitted
<  
< +# Auto sharding table configuraiton
< +spring.shardingsphere.rules.sharding.auto-tables.<auto-table-name>.actual-data-sources= # data source names
< +
< +spring.shardingsphere.rules.sharding.auto-tables.<auto-table-name>.sharding-strategy.standard.sharding-column= # Sharding column name
< +spring.shardingsphere.rules.sharding.auto-tables.<auto-table-name>.sharding-strategy.standard.sharding-algorithm= # Auto sharding algorithm name
< +
<  # Key generator strategy configuration
<  spring.shardingsphere.rules.sharding.tables.<table-name>.key-generate-strategy.column= # Column name of key generator
<  spring.shardingsphere.rules.sharding.tables.<table-name>.key-generate-strategy.key-generator-name= # Key generator name
< diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/sharding.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/sharding.cn.md
< index c06af9adc4..7cc2d3fede 100644
< --- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/sharding.cn.md
< +++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/sharding.cn.md
< @@ -26,8 +26,10 @@ weight = 1
<  | ------------------------- | ----- | --------------- |
<  | logic-table               | 属性  | 逻辑表名称        |
<  | actual-data-nodes         | 属性  | 由数据源名 + 表名组成，以小数点分隔。多个表以逗号分隔，支持inline表达式。缺省表示使用已知数据源与逻辑表名称生成数据节点，用于广播表（即每个库中都需要一个同样的表用于关联查询，多为字典表）或只分库不分表且所有库的表结构完全一致的情况 |
< -| database-strategy-ref     | 属性  | 分库策略名称      |
< -| table-strategy-ref        | 属性  | 分表策略名称      |
< +| actual-data-sources       | 属性  | 自动分片表数据源名 |
< +| database-strategy-ref     | 属性  | 标准分片表分库策略名称      |
< +| table-strategy-ref        | 属性  | 标准分片表分表策略名称      |
< +| sharding-strategy-ref     | 属性  | 自动分片表策略名称      |
<  | key-generate-strategy-ref | 属性  | 分布式序列策略名称 |
<  
<  \<sharding:binding-table-rules />
< diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/sharding.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/sharding.en.md
< index 8cd2042173..7b25e2aa83 100644
< --- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/sharding.en.md
< +++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/sharding.en.md
< @@ -26,8 +26,10 @@ Namespace: [http://shardingsphere.apache.org/schema/shardingsphere/sharding/shar
<  | ------------------------- | --------- | -------------------------- |
<  | logic-table               | Attribute | Logic table name           |
<  | actual-data-nodes         | Attribute | Describe data source names and actual tables, delimiter as point, multiple data nodes separated with comma, support inline expression. Absent means sharding databases only. |
< -| database-strategy-ref     | Attribute | Database strategy name     |
< -| table-strategy-ref        | Attribute | Table strategy name        |
< +| actual-data-sources       | Attribute | Data source names for auto sharding table |
< +| database-strategy-ref     | Attribute | Database strategy name for standard sharding table     |
< +| table-strategy-ref        | Attribute | Table strategy name for standard sharding table        |
< +| sharding-strategy-ref     | Attribute | sharding strategy name for auto sharding table         |
<  | key-generate-strategy-ref | Attribute | Key generate strategy name |
<  
<  \<sharding:binding-table-rules />
< diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/sharding.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/sharding.cn.md
< index bcd5c3365d..6f94cb06bb 100644
< --- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/sharding.cn.md
< +++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/sharding.cn.md
< @@ -27,6 +27,13 @@ rules:
<        keyGenerateStrategy: # 分布式序列策略
<          column: # 自增列名称，缺省表示不使用自增主键生成器
<          keyGeneratorName: # 分布式序列算法名称
< +  autoTables: # 自动分片表规则配置
< +    t_order_auto: # 逻辑表名称
< +      actualDataSources (?): # 数据源名称
< +      shardingStrategy: # 切分策略
< +        standard: # 用于单分片键的标准分片场景
< +          shardingColumn: # 分片列名称
< +          shardingAlgorithmName: # 自动分片算法名称
<    bindingTables (+): # 绑定表规则列表
<      - <logic_table_name_1, logic_table_name_2, ...> 
<    broadcastTables (+): # 广播表规则列表
< diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/sharding.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/sharding.en.md
< index a9dd711d11..8025b12f2f 100644
< --- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/sharding.en.md
< +++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/sharding.en.md
< @@ -10,7 +10,7 @@ dataSources: # Omit data source configuration
<  
<  rules:
<  - !SHARDING
< -  tables: # Sharding rule configuration
< +  tables: # Sharding table configuration
<      <logic-table-name> (+): # Logic table name
<        actualDataNodes (?): # Describe data source names and actual tables, delimiter as point, multiple data nodes separated with comma, support inline expression. Absent means sharding databases only.
<        databaseStrategy (?): # Databases sharding strategy, use default databases sharding strategy if absent. sharding strategy below can choose only one.
< @@ -27,6 +27,13 @@ rules:
<        keyGenerateStrategy: # Key generator strategy
<          column: # Column name of key generator
<          keyGeneratorName: # Key generator name
< +  autoTables: # Auto Sharding table configuration
< +    t_order_auto: # Logic table name
< +      actualDataSources (?): # Data source names
< +      shardingStrategy: # Sharding strategy
< +        standard: # For single sharding column scenario
< +          shardingColumn: # Sharding column name
< +          shardingAlgorithmName: # Auto sharding algorithm name
<    bindingTables (+): # Binding tables
<      - <logic_table_name_1, logic_table_name_2, ...> 
<    broadcastTables (+): # Broadcast tables
---
> diff --git a/docs/document/content/user-manual/shardingsphere-ui/usage/config-center.cn.md b/docs/document/content/user-manual/shardingsphere-ui/usage/config-center.cn.md
> deleted file mode 100644
> index 87390a6aa0..0000000000
> --- a/docs/document/content/user-manual/shardingsphere-ui/usage/config-center.cn.md
> +++ /dev/null
> @@ -1,17 +0,0 @@
> -+++
> -title = "配置中心"
> -weight = 2
> -+++
> - 
> -## 配置中心配置
> -
> -首先需要添加并激活配置中心。可以添加多个配置中心，但只能有一个处于激活状态，后面的规则配置功能是针对当前已激活的配置中心进行操作。
> -目前提供 Zookeeper 的支持，后续会添加第三方配置中心的支持。
> -
> -## 规则配置
> -
> -+ 添加激活配置中心后，可以获取当前配置中心中所有数据源的相关配置，包括数据分片，读写分离、Properties 配置等。
> -
> -+ 可以通过 YAML 格式对相关配置信息进行修改。
> -
> -+ 点击 + 按钮可以添加新的数据源和分片规则。
> diff --git a/docs/document/content/user-manual/shardingsphere-ui/usage/config-center.en.md b/docs/document/content/user-manual/shardingsphere-ui/usage/config-center.en.md
> deleted file mode 100644
> index 8e79e73f2a..0000000000
> --- a/docs/document/content/user-manual/shardingsphere-ui/usage/config-center.en.md
> +++ /dev/null
> @@ -1,17 +0,0 @@
> -+++
> -title = "Config Center"
> -weight = 2
> -+++
> -
> -## Config Center Configuration
> -
> -The config center needs to be added and activated first. Multiple centers can be added, but only one is active, and the following rule config operate on the currently active config center.
> -Zookeeper support is provided now, and the support for other config centers will be added later.
> -
> -## Rule Config
> -
> -+ After added and activated a config center, the configuration of all data sources in the current active config center can be obtained, including data sharding, primary-replica replication, properties, and so on.
> -
> -+ The configuration can be modified by the YAML format.
> -
> -+ Click the + button to add a new data source and sharding rule.
> diff --git a/docs/document/content/user-manual/shardingsphere-ui/usage/registry-center.cn.md b/docs/document/content/user-manual/shardingsphere-ui/usage/registry-center.cn.md
> index 665a3b1fca..70579424eb 100644
> --- a/docs/document/content/user-manual/shardingsphere-ui/usage/registry-center.cn.md
> +++ b/docs/document/content/user-manual/shardingsphere-ui/usage/registry-center.cn.md
> @@ -1,17 +1,15 @@
>  +++
>  title = "注册中心"
> -weight = 3
> +weight = 2
>  +++
>  
>  ## 注册中心配置
>  
>  首先需要添加并激活注册中心。可以添加多个注册中心，但只能有一个处于激活状态，后面的运行状态功能都是针对当前已激活的注册中心进行操作。
> -目前提供 Zookeeper 的支持，后续会添加第三方注册中心的支持。
> +目前提供 Zookeeper 和 etcd 的支持，后续会添加第三方注册中心的支持。
>  
> -## 运行状态
> ++ 点击 + 按钮可以添加新注册中心。
>  
> -+ 添加激活注册中心后，可以查看当前注册中心所有运行实例信息。
> ++ 通过配置扩展配置中心来使用其它配置中心管理配置。
>  
> -+ 可以通过操作按钮对运行实例进行熔断与恢复操作。
> -
> -+ 可以查看所有从库信息，并进行从库禁用与恢复操作。
> ++ 支持编辑、激活和删除注册中心操作。
> \ No newline at end of file
> diff --git a/docs/document/content/user-manual/shardingsphere-ui/usage/registry-center.en.md b/docs/document/content/user-manual/shardingsphere-ui/usage/registry-center.en.md
> index 6bc85ba5f1..9f22526e37 100644
> --- a/docs/document/content/user-manual/shardingsphere-ui/usage/registry-center.en.md
> +++ b/docs/document/content/user-manual/shardingsphere-ui/usage/registry-center.en.md
> @@ -1,17 +1,15 @@
>  +++
>  title = "Registry Center"
> -weight = 3
> +weight = 2
>  +++
>  
>  ## Registry Center Configuration
>  
>  The registry center needs to be added and activated first. Multiple registries can be added, but only one is active, and the following runtime status operate on the currently active registry.
> -Zookeeper support is provided now, and the support for other registries will be added later.
> +Zookeeper and etcd support is provided now, and the support for other registries will be added later.
>  
> -## Runtime Status
> ++ Click the + button to add a new registry center.
>  
> -+ After added and activated a registry center, all running instances of the current registry center will be obtained.
> ++ Use additional config center to manage configuration with other config centers.
>  
> -+ Users can disable or enable the instance by operate button.
> -
> -+ Users can disable or enable the access to replica database.
> ++ Registry center can be edited, activated, and deleted.
> diff --git a/docs/document/content/user-manual/shardingsphere-ui/usage/rule-config.cn.md b/docs/document/content/user-manual/shardingsphere-ui/usage/rule-config.cn.md
> new file mode 100644
> index 0000000000..e780b4fd70
> --- /dev/null
> +++ b/docs/document/content/user-manual/shardingsphere-ui/usage/rule-config.cn.md
> @@ -0,0 +1,12 @@
> ++++
> +title = "规则配置"
> +weight = 3
> ++++
> +
> +## 规则配置
> +
> ++ 添加激活注册中心后，可以获取当前注册中心中所有数据源的相关配置，包括数据分片，读写分离、Properties 配置等。
> +
> ++ 可以通过 YAML 格式对相关配置信息进行修改。
> +
> ++ 点击 + 按钮可以添加新的数据源和分片规则。
> diff --git a/docs/document/content/user-manual/shardingsphere-ui/usage/rule-config.en.md b/docs/document/content/user-manual/shardingsphere-ui/usage/rule-config.en.md
> new file mode 100644
> index 0000000000..a8e977435b
> --- /dev/null
> +++ b/docs/document/content/user-manual/shardingsphere-ui/usage/rule-config.en.md
> @@ -0,0 +1,12 @@
> ++++
> +title = "Rule Config"
> +weight = 3
> ++++
> +
> +## Rule Config
> +
> ++ After added and activated a registry center, the configuration of all data sources in the current active registry center can be obtained, including data sharding, primary-replica replication, properties, and so on.
> +
> ++ The configuration can be modified by the YAML format.
> +
> ++ Click the + button to add a new data source and sharding rule.
> diff --git a/docs/document/content/user-manual/shardingsphere-ui/usage/runtime-status.cn.md b/docs/document/content/user-manual/shardingsphere-ui/usage/runtime-status.cn.md
> new file mode 100644
> index 0000000000..f49634c033
> --- /dev/null
> +++ b/docs/document/content/user-manual/shardingsphere-ui/usage/runtime-status.cn.md
> @@ -0,0 +1,12 @@
> ++++
> +title = "运行状态"
> +weight = 4
> ++++
> +
> +## 运行状态
> +
> ++ 添加激活注册中心后，可以查看当前注册中心所有运行实例信息。
> +
> ++ 可以通过操作按钮对运行实例进行熔断与恢复操作。
> +
> ++ 可以查看所有从库信息，并进行从库禁用与恢复操作。
> diff --git a/docs/document/content/user-manual/shardingsphere-ui/usage/runtime-status.en.md b/docs/document/content/user-manual/shardingsphere-ui/usage/runtime-status.en.md
> new file mode 100644
> index 0000000000..6ec5724683
> --- /dev/null
> +++ b/docs/document/content/user-manual/shardingsphere-ui/usage/runtime-status.en.md
> @@ -0,0 +1,12 @@
> ++++
> +title = "Runtime Status"
> +weight = 4
> ++++
> +
> +## Runtime Status
> +
> ++ After added and activated a registry center, all running instances of the current registry center will be obtained.
> +
> ++ Users can disable or enable the instance by operate button.
> +
> ++ Users can disable or enable the access to replica database.
