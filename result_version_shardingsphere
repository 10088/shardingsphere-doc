1,3c1,3
< commit 6866d748f0e5fb5b27dff251caf98e4773e71cef
< Author: Zhang Yonglun <zhangyonglun@apache.org>
< Date:   Tue Oct 13 15:48:43 2020 +0800
---
> commit 8cecd8c4d55cff0d47237a725fadbd81e58bfcec
> Author: Liang Zhang <terrymanu@163.com>
> Date:   Thu Oct 15 12:48:21 2020 +0800
5,13c5
<     #5301, use MySQL and PostgreSQL for integration test on travis (#7769)
<     
<     * add mysql env to travis
<     
<     * add mysql env to travis
<     
<     * add postgresql env to travis
<     
<     * add ci profile
---
>     Rename RuleSchemaMetaData to LogicSchemaMetaData (#7795)
15,59c7,65
< diff --git a/docs/document/content/features/test-engine/integration-test-engine.cn.md b/docs/document/content/features/test-engine/integration-test-engine.cn.md
< index 764a0e5b44..31664fca38 100644
< --- a/docs/document/content/features/test-engine/integration-test-engine.cn.md
< +++ b/docs/document/content/features/test-engine/integration-test-engine.cn.md
< @@ -13,7 +13,7 @@ Junit 中的 `Parameterized` 会聚合起所有的测试数据，并将测试数
<  ### 配置
<  
<    - 环境类文件
< -    - /shardingsphere-test-suite/src/test/resources/integrate/env.properties
< +    - /shardingsphere-test-suite/src/test/resources/integrate/env-jdbc-local.properties
<      - /shardingsphere-test-suite/src/test/resources/integrate/env/`SQL-TYPE`/dataset.xml
<      - /shardingsphere-test-suite/src/test/resources/integrate/env/`SQL-TYPE`/schema.xml
<    - 测试用例类文件
< @@ -26,7 +26,7 @@ Junit 中的 `Parameterized` 会聚合起所有的测试数据，并将测试数
<  
<  集成测试需要真实的数据库环境，根据相应的配置文件创建测试环境：
<  
< -首先，修改配置文件 `/shardingsphere-test-suite/src/test/resources/integrate/env.properties` ，例子如下：
< +首先，修改配置文件 `/shardingsphere-test-suite/src/test/resources/integrate/env-jdbc-local.properties` ，例子如下：
<  
<  ```properties
<  # 测试主键，并发，column index等的开关
< @@ -90,7 +90,7 @@ oracle.password=jdbc
<  
<  ### 断言配置
<  
< -`env.properties` 与 `dataset.xml ` 确定了什么SQL在什么环境执行，下面是断言数据的配置：
< +`env-jdbc-local.properties` 与 `dataset.xml ` 确定了什么SQL在什么环境执行，下面是断言数据的配置：
<  
<  断言的配置，需要两种文件，第一类文件位于 `/shardingsphere-test-suite/src/test/resources/integrate/cases/SQL-TYPE/SQL-TYPE-integrate-test-cases.xml`
<  这个文件类似于一个索引，定义了要执行的SQL，参数以及期待的数据的文件位置。这里的 test-case 引用的就是`sharding-sql-test`中 SQL 对应的`sql-case-id`，例子如下：
< diff --git a/docs/document/content/features/test-engine/integration-test-engine.en.md b/docs/document/content/features/test-engine/integration-test-engine.en.md
< index 63e79ff690..b1e3438349 100644
< --- a/docs/document/content/features/test-engine/integration-test-engine.en.md
< +++ b/docs/document/content/features/test-engine/integration-test-engine.en.md
< @@ -12,7 +12,7 @@ The `Parameterized` in JUnit will collect all test data, and pass to test method
<  ### Configuration
<   
<    - environment type
< -    - /shardingsphere-test-suite/src/test/resources/integrate/env.properties
< +    - /shardingsphere-test-suite/src/test/resources/integrate/env-jdbc-local.properties
<      - /shardingsphere-test-suite/src/test/resources/integrate/env/`SQL-TYPE`/dataset.xml
<      - /shardingsphere-test-suite/src/test/resources/integrate/env/`SQL-TYPE`/schema.xml
<    - test case type
< @@ -25,7 +25,7 @@ The `Parameterized` in JUnit will collect all test data, and pass to test method
---
> diff --git a/docs/document/content/dev-manual/kernel.cn.md b/docs/document/content/dev-manual/kernel.cn.md
> index 9c74505ffe..bf1218436d 100644
> --- a/docs/document/content/dev-manual/kernel.cn.md
> +++ b/docs/document/content/dev-manual/kernel.cn.md
> @@ -21,22 +21,22 @@ chapter = true
>  | SQLServerDatabaseType  | SQLServer 数据库          |
>  | H2DatabaseType         | H2 数据库                 |
>  
> -## RuleMetaDataLoader
> +## LogicMetaDataLoader
>  
>  | *SPI 名称*             | *详细说明*         |
>  | ---------------------- | ----------------- |
> -| RuleMetaDataLoader     | 用于元数据初始化    |
> +| LogicMetaDataLoader    | 用于元数据初始化    |
>  
>  | *已知实现类*            | *详细说明*         |
>  | ---------------------- | ----------------- |
>  | ShardingMetaDataLoader | 用于分片元数据初始化 |
>  | EncryptMetaDataLoader  | 用于加密元数据初始化 |
>  
> -## RuleMetaDataDecorator
> +## LogicMetaDataDecorator
>  
>  | *SPI 名称*                | *详细说明*        |
>  | ------------------------ | ---------------- |
> -| RuleMetaDataDecorator    | 用于元数据更新     |
> +| LogicMetaDataDecorator   | 用于元数据更新     |
>  
>  | *已知实现类*               | *详细说明*        |
>  | ------------------------- | ---------------- |
> diff --git a/docs/document/content/dev-manual/kernel.en.md b/docs/document/content/dev-manual/kernel.en.md
> index a25b08ad96..6f5857f6a5 100644
> --- a/docs/document/content/dev-manual/kernel.en.md
> +++ b/docs/document/content/dev-manual/kernel.en.md
> @@ -21,22 +21,22 @@ chapter = true
>  | SQLServerDatabaseType  | SQLServer database      |
>  | H2DatabaseType         | H2 database             |
>  
> -## RuleMetaDataLoader
> +## LogicMetaDataLoader
>  
>  | *SPI Name*             | *Description*                           |
>  | ---------------------- | --------------------------------------- |
> -| RuleMetaDataLoader     | Used to initialize meta data            |
> +| LogicMetaDataLoader    | Used to initialize meta data            |
>  
>  | *Implementation Class* | *Description*                           |
>  | ---------------------- | --------------------------------------- |
>  | ShardingMetaDataLoader | Used to initialize sharding meta data   |
>  | EncryptMetaDataLoader  | Used to initialize encryption meta data |
>  
> -## RuleMetaDataDecorator
> +## LogicMetaDataDecorator
>  
>  | *SPI Name*                | *Description*                        |
>  | ------------------------- | ------------------------------------ |
> -| RuleMetaDataDecorator     | Used to update meta data             |
> +| LogicMetaDataDecorator    | Used to update meta data             |
61,67c67,68
<  Integration test depends on existed database environment, developer need to setup the configuration file for corresponding database to test: 
<  
< -Firstly, setup configuration file `/shardingsphere-test-suite/src/test/resources/integrate/env.properties`, for example: 
< +Firstly, setup configuration file `/shardingsphere-test-suite/src/test/resources/integrate/env-jdbc-local.properties`, for example: 
<  
<  ```properties
<  # the switch for PK, concurrent, column index testing and so on
---
>  | *Implementation Class*    | *Description*                        |
>  | ------------------------- | ------------------------------------ |
