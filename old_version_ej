commit ecd82e00d6a2b8d6ed2ff91ccd5a59f8e7739024
Author: Tboy <guo.jiwei@immomo.com>
Date:   Sun Aug 30 12:00:04 2020 +0800

    The property Content-Type of HTTP job only works with x-www-form-urlencode (#1422) (#1425)

diff --git a/docs/content/user-manual/elasticjob-lite/usage/job-api/job-interface.cn.md b/docs/content/user-manual/elasticjob-lite/usage/job-api/job-interface.cn.md
index 23af1f99e..1dd2a0de0 100644
--- a/docs/content/user-manual/elasticjob-lite/usage/job-api/job-interface.cn.md
+++ b/docs/content/user-manual/elasticjob-lite/usage/job-api/job-interface.cn.md
@@ -107,7 +107,7 @@ sharding execution context is {"jobName":"scriptElasticDemoJob","shardingTotalCo
 ## HTTP作业
 
 可通过属性配置`http.url`,`http.method`,`http.data`等配置待请求的http信息。
-如果设置了`http.data`, 分片信息也将以`shardingContext`为key传递到url接口，值为json格式。
+分片信息以Header形式传递，key为`shardingContext`，值为json格式。
 
 ```java
 
@@ -129,7 +129,7 @@ public class HttpJobMain {
 public class HttpJobController {
     
     @RequestMapping(path = "/execute", method = RequestMethod.POST)
-    public void execute(String source, String shardingContext) {
+    public void execute(String source, @RequestHeader String shardingContext) {
         log.info("execute from source : {}, shardingContext : {}", source, shardingContext);
     }
 }
diff --git a/docs/content/user-manual/elasticjob-lite/usage/job-api/job-interface.en.md b/docs/content/user-manual/elasticjob-lite/usage/job-api/job-interface.en.md
index 4fa7217c5..4ef55e6a3 100644
--- a/docs/content/user-manual/elasticjob-lite/usage/job-api/job-interface.en.md
+++ b/docs/content/user-manual/elasticjob-lite/usage/job-api/job-interface.en.md
@@ -107,7 +107,7 @@ sharding execution context is {"jobName":"scriptElasticDemoJob","shardingTotalCo
 ## HTTP job
 
 The http information to be requested can be configured through the properties of `http.url`, `http.method`, `http.data`, etc.
-If `http.data` is set, sharding information will also be passed to the url interface with `shardingContext` as the key, and the value is in json format.
+Sharding information is transmitted in the form of Header, the key is `shardingContext`, and the value is in json format.
 
 ```java
 
@@ -129,7 +129,7 @@ public class HttpJobMain {
 public class HttpJobController {
     
     @RequestMapping(path = "/execute", method = RequestMethod.POST)
-    public void execute(String source, String shardingContext) {
+    public void execute(String source, @RequestHeader String shardingContext) {
         log.info("execute from source : {}, shardingContext : {}", source, shardingContext);
     }
 }
