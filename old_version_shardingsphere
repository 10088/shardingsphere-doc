commit 2b90ecd0db07cd7790b34103d1ca3cf6707aa48f
Author: Mike0601 <40025573+Mike0601@users.noreply.github.com>
Date:   Mon Aug 15 12:07:22 2022 +0800

    Add application scenario of HA (#20181)

diff --git a/docs/document/content/features/ha/_index.cn.md b/docs/document/content/features/ha/_index.cn.md
index 6c8954f3d41..8d09f0adeb4 100644
--- a/docs/document/content/features/ha/_index.cn.md
+++ b/docs/document/content/features/ha/_index.cn.md
@@ -23,6 +23,10 @@ Apache ShardingSphere 需要自动感知多样化的存储节点高可用方案
 
 尽可能的保证 7*24 小时不间断的数据库服务，是 Apache ShardingSphere 高可用模块的主要设计目标。
 
+## 应用场景
+
+在大多数情况下，高可用搭配读写分离功能一起使用。当用户写库或读库关系发生变化时，ShardingSphere 可动态的感知并纠正内部的主从关系，进而保证读流量和写流量的正确路由。同时当从库宕机时，ShardingSphere 也可动态纠正存储节点的状态，保证读流量分发正确。
+
 ## 相关参考
 
 [Java API](/cn/user-manual/shardingsphere-jdbc/java-api/rules/ha)\
diff --git a/docs/document/content/features/ha/_index.en.md b/docs/document/content/features/ha/_index.en.md
index 002c6303a88..a92a3a0a6f6 100644
--- a/docs/document/content/features/ha/_index.en.md
+++ b/docs/document/content/features/ha/_index.en.md
@@ -23,6 +23,10 @@ Apache ShardingSphere needs to detect high availability solution of diversified
 
 The main goal of Apache ShardingSphere high availability module which is ensuring 7 * 24-hour uninterrupted database service as much as possible.
 
+## Application Scenarios
+
+In most cases, high availability is used in conjunction with read/write splitting. When the relationship between users' write database and read database changes, ShardingSphere dynamically senses and corrects the internal primary/secondary relationship, thus ensuring the correct routing of the read and write traffic. At the same time, when the secondary database breaks down, ShardingSphere can also dynamically correct the state of storage nodes to ensure correct distribution of the read traffic.
+
 ## Related References
 
 [Java API](/en/user-manual/shardingsphere-jdbc/java-api/rules/ha)\
