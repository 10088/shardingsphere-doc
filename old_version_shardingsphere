commit 992d0bb07d745be4bdc2d4013e700be9f5c99874
Author: azexcy <101622833+azexcy@users.noreply.github.com>
Date:   Thu Jun 30 19:38:24 2022 +0800

    Upgrade scaling native mode, support auto init and cleanup. (#18709)

diff --git a/docs/document/content/reference/test/scaling-integration-test/_index.cn.md b/docs/document/content/reference/test/scaling-integration-test/_index.cn.md
index db2a58d3514..13c2cd9b92a 100644
--- a/docs/document/content/reference/test/scaling-integration-test/_index.cn.md
+++ b/docs/document/content/reference/test/scaling-integration-test/_index.cn.md
@@ -9,7 +9,7 @@ weight = 4
 
 ## 测试环境
 
-环境准备方式分为 Native 和 Docker，不论哪种环境，本地都需要预先安装 Docker。
+环境准备方式分为 Native 和 Docker
 
 - Native 环境：用于本地调试，可以使用 IDE 的 debug 模式进行调试。
 - Docker 环境：环境由 Maven 运行，适用于云编译环境和测试 ShardingSphere-Proxy 的场景，如：GitHub Action。
@@ -39,25 +39,25 @@ weight = 4
 - /common: 存放 Scaling 过程中用到的 DistSQL。
 - /{SQL-TYPE}: 存放数据库级别的配置文件。
 - /scenario: 存放测试的场景的配置文件，主要是 SQL，不同数据库可能写法不一样。
+- it-env.properties：存放对应的配置信息。
 
 ### 运行测试引擎
 
 所有的属性值都可以通过 Maven 命令行 `-D` 的方式动态注入。
 
 `${image-name}` 表示合法 Docker image 名称，比如：mysql:5.7， 多个的话用逗号隔开。
-`-Dit.env.postgresql.version=${image-name}` 表示需要测试的 PostgreSQL 版本。
-`-Dit.env.mysql.version=${image-name}` 表示需要测试的 MySQL 版本。
+`-Dscaling.it.docker.postgresql.version=${image-name}` 表示需要测试的 PostgreSQL 版本。
+`-Dscaling.it.docker.mysql.version=${image-name}` 表示需要测试的 MySQL 版本。
 
 #### Native 环境启动
 
-Native 环境要求本地自行启动 ShardingSphere-Proxy（以及其自身依赖的 Cluster，比如 Zookeeper），同时要求 ShardingSphere-Proxy 的端口是 3307，数据库会根据用户的配置自行启动，但是对应的端口都是数据库的默认端口（MySQL=3306, PostgreSQL=5432）。
-
-因此 Native 模式下不支持运行多个 Case，每次跑完需要自行清理 Zookeeper 中的信息，以及重启 ShardingSphere-Proxy。
+Native 环境要求本地自行启动 ShardingSphere-Proxy（以及其自身依赖的 Cluster，比如 Zookeeper）和数据库，同时要求 ShardingSphere-Proxy 的端口是 3307，修改 it-env.properties 文件中的属性 `scaling.it.env.type=native`
+数据库的端口可以在 it-env.properties 中配置，如果是默认端口可以不配置。
 
 启动方式如下：找到需要测试的 Case，比如 MySQLGeneralScalingIT，在启动之前配置对应的 VM Option，新增如下配置。
 
 ```
--Dit.cluster.env.type=native -Dit.env.mysql.version=${image-name}
+-Dscaling.it.env.type=native -Dscaling.it.docker.mysql.version=${image-name}
 ```
 
 在 IDE 下使用 Junit 的方式启动即可。
@@ -81,13 +81,13 @@ Native 环境要求本地自行启动 ShardingSphere-Proxy（以及其自身依
 和 Native 一样，只需要改一个参数。
 
 ```
--Dit.cluster.env.type=docker
+-Dscaling.it.env.type=docker
 ```
 
 可以和 Native 一样使用 IDE 的方式运行用例，或者使用 Maven 的方式运行用例。
 
 ```bash
-./mvnw -nsu -B install -f shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-scaling/pom.xml -Dit.cluster.env.type=DOCKER -Dit.env.mysql.version=${image-name}
+./mvnw -nsu -B install -f shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-scaling/pom.xml -Dscaling.it.env.type=DOCKER -Dscaling.it.docker.mysql.version=${image-name}
 ```
 
 #### 注意事项
diff --git a/docs/document/content/reference/test/scaling-integration-test/_index.en.md b/docs/document/content/reference/test/scaling-integration-test/_index.en.md
index c596d309cc8..e4885ee94bd 100644
--- a/docs/document/content/reference/test/scaling-integration-test/_index.en.md
+++ b/docs/document/content/reference/test/scaling-integration-test/_index.en.md
@@ -9,7 +9,7 @@ Verify the correctness of Scaling's own functionality and dependent modules.
 
 ## Environment
 
-There are two types of environment preparation: Native and Docker, either of which requires Docker to be pre-installed locally.
+There are two types of environment preparation: Native and Docker
 
 - Native Environment: For local debugging, you can use the IDE's debug mode for debugging
 - Docker Environment: Environment run by Maven for cloud compiled environments and testing ShardingSphere-Proxy scenarios, e.g. GitHub Action
@@ -38,25 +38,25 @@ Catalog：`resources/env/`
 - /common: The Dist SQL used in the Scaling process.
 - /{SQL-TYPE}: database-level configuration files.
 - /scenario: The configuration file for the test scenario, mainly SQL, may be written differently for different databases.
+- it-env.properties: Stores the corresponding configuration information.
 
 ### Run Test Cases
 
 All property values can be dynamically injected by means of the Maven command line `-D`.
 
 `${image-name}` Indicates a legal docker image name, e.g., mysql:5.7, separated by commas if multiple.
-`-Dit.env.postgresql.version=${image-name}` Indicates the version of PostgreSQL that needs to be tested.
-`-Dit.env.mysql.version=${image-name}` Indicates the version of MySQL that needs to be tested.
+`-Dscaling.it.docker.postgresql.version=${image-name}` Indicates the version of PostgreSQL that needs to be tested.
+`-Dscaling.it.docker.mysql.version=${image-name}` Indicates the version of MySQL that needs to be tested.
 
 #### Native Environment Startup
 
-Native environments require that ShardingSphere-Proxy (and its own dependent Cluster, such as Zookeeper) be started locally, and that ShardingSphere-Proxy be started on port 3307, while the database will be started according to the user's configuration, but the corresponding ports are the default ports for the database (MySQL=3306, PostgreSQL=5432).
-
-Therefore, Native mode does not support running multiple cases, and you need to clean up the information in Zookeeper and restart ShardingSphere-Proxy after each run.
+Native environments require that ShardingSphere-Proxy (and its own dependent Cluster, such as Zookeeper) and the database be started locally, and that ShardingSphere-Proxy's port be 3307, modify the properties in the it-env.properties file ` scaling.it.env.type=native`
+The database port can be configured in it-env.properties, or not if it is the default port.
 
 The startup method is as follows: Find the Case you need to test, such as MySQLGeneralScalingIT, and configure the corresponding VM Option before startup, add the following configuration.
 
 ```
--Dit.cluster.env.type=native -Dit.env.mysql.version=${image-name}
+-Dscaling.it.env.type=native -Dscaling.it.docker.mysql.version=${image-name}
 ```
 
 Just start it under the IDE using the Junit.
@@ -80,13 +80,13 @@ You can change it yourself in ShardingSphereProxyDockerContainer.
 As with Native, only one parameter needs to be changed.
 
 ```
--Dit.cluster.env.type=docker
+-Dscaling.it.env.type=docker
 ```
 
 You can run the use case using the same IDE as Native, or you can run it using maven.
 
 ```shell
-./mvnw -nsu -B install -f shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-scaling/pom.xml -Dit.cluster.env.type=DOCKER -Dit.env.mysql.version=${image-name}
+./mvnw -nsu -B install -f shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-scaling/pom.xml -Dscaling.it.env.type=DOCKER -Dscaling.it.docker.mysql.version=${image-name}
 ```
 
 #### Attentions
