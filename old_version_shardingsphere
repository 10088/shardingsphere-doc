commit 9f4ee7c31754f37d91423001809bdff55ad716ea
Author: tuichenchuxin <86938616+tuichenchuxin@users.noreply.github.com>
Date:   Tue Sep 28 17:16:01 2021 +0800

    modify doc of sql parse (#12790)
    
    * modify doc of sql parse
    
    * modify doc of sql parse
    
    * modify doc of sql parse

diff --git a/docs/document/content/features/sharding/principle/parse.cn.md b/docs/document/content/features/sharding/principle/parse.cn.md
index 547d2133c3..b32cc8c3fa 100644
--- a/docs/document/content/features/sharding/principle/parse.cn.md
+++ b/docs/document/content/features/sharding/principle/parse.cn.md
@@ -83,25 +83,25 @@ ShardingSphere 的 SQL 解析器经历了 3 代产品的更新迭代。
 
 ```
 /**
- * databaseType type:String 可能值 MySQL,Oracle，PostgreSQL，SQL92，SQLServer
+ * databaseType type:String 可能值 MySQL, Oracle，PostgreSQL，SQL92，SQLServer, openGauss 
  * sql type:String 解析的 SQL
  * useCache type:boolean 是否使用缓存
- * @return parse tree
+ * @return parse context
  */
-ParseTree tree = new SQLParserEngine(databaseType).parse(sql, useCache); 
+ParseContext parseContext = new SQLParserEngine(databaseType).parse(sql, useCache); 
 ```
 
 - 获取SQLStatement
 
 ```
 /**
- * databaseType type:String 可能指 MySQL，Oracle，PostgreSQL，SQL92，SQLServer
+ * databaseType type:String 可能指 MySQL，Oracle，PostgreSQL，SQL92，SQLServer, openGauss
  * useCache type:boolean 是否使用缓存
  * @return SQLStatement
  */
-ParseTree tree = new SQLParserEngine(databaseType).parse(sql, useCache); 
+ParseContext parseContext = new SQLParserEngine(databaseType).parse(sql, useCache); 
 SQLVisitorEngine sqlVisitorEngine = new SQLVisitorEngine(databaseType, "STATEMENT");
-SQLStatement sqlStatement = sqlVisitorEngine.visit(tree);
+SQLStatement sqlStatement = sqlVisitorEngine.visit(parseContext);
 
 ```
 
@@ -113,9 +113,9 @@ SQLStatement sqlStatement = sqlVisitorEngine.visit(tree);
  * useCache type:boolean 是否使用缓存
  * @return String
  */
-ParseTree tree = new SQLParserEngine(databaseType).parse(sql, useCache);
+ParseContext parseContext = new SQLParserEngine(databaseType).parse(sql, useCache);
 SQLVisitorEngine sqlVisitorEngine = new SQLVisitorEngine(databaseType, "FORMAT", new Properties());
-String formatedSql = sqlVisitorEngine.visit(tree);
+String formatedSql = sqlVisitorEngine.visit(parseContext);
 ```
 
 例子：
diff --git a/docs/document/content/features/sharding/principle/parse.en.md b/docs/document/content/features/sharding/principle/parse.en.md
index 44e2f227e0..0528e80e47 100644
--- a/docs/document/content/features/sharding/principle/parse.en.md
+++ b/docs/document/content/features/sharding/principle/parse.en.md
@@ -75,25 +75,25 @@ demo:
 
 ```
 /**
- * databaseType type:String values: MySQL,Oracle,PostgreSQL,SQL92,SQLServer
+ * databaseType type:String values: MySQL, Oracle, PostgreSQL, SQL92, SQLServer, openGauss 
  * sql type:String SQL to be parsed
  * useCache type:boolean whether use cache
- * @return parse tree
+ * @return parse context
  */
-ParseTree tree = new SQLParserEngine(databaseType).parse(sql, useCache)
+ParseContext parseContext = new SQLParserEngine(databaseType).parse(sql, useCache)
 ```
 
 - GET SQLStatement
 
 ```
 /**
- * databaseType type:String values: MySQL,Oracle，PostgreSQL，SQL92，SQLServer
+ * databaseType type:String values: MySQL, Oracle, PostgreSQL, SQL92, SQLServer, openGauss 
  * useCache type:boolean whether use cache
  * @return SQLStatement
  */
-ParseTree tree = new SQLParserEngine(databaseType).parse(sql, useCache); 
+ParseContext parseContext = new SQLParserEngine(databaseType).parse(sql, useCache); 
 SQLVisitorEngine sqlVisitorEngine = new SQLVisitorEngine(databaseType, "STATEMENT");
-SQLStatement sqlStatement = sqlVisitorEngine.visit(tree);
+SQLStatement sqlStatement = sqlVisitorEngine.visit(parseContext);
 ```
 
 - SQL Format
@@ -104,9 +104,9 @@ SQLStatement sqlStatement = sqlVisitorEngine.visit(tree);
  * useCache type:boolean whether use cache
  * @return String 
  */
-ParseTree tree = new SQLParserEngine(databaseType).parse(sql, useCache);
+ParseContext parseContext = new SQLParserEngine(databaseType).parse(sql, useCache);
 SQLVisitorEngine sqlVisitorEngine = new SQLVisitorEngine(databaseType, "FORMAT", new Properties());
-String formatedSql = sqlVisitorEngine.visit(tree);
+String formatedSql = sqlVisitorEngine.visit(parseContext);
 ```
 
 example：
