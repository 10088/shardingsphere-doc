commit bc1e84e43e1dab2d0987e14cb23aa2dd9bff7293
Author: Swastika Gupta <64654203+Swastyy@users.noreply.github.com>
Date:   Mon Jul 18 11:41:27 2022 +0530

    Update readwrite-splitting.en.md (#19301)

diff --git a/docs/document/content/dev-manual/readwrite-splitting.en.md b/docs/document/content/dev-manual/readwrite-splitting.en.md
index 4fd70123b75..3aeaf205525 100644
--- a/docs/document/content/dev-manual/readwrite-splitting.en.md
+++ b/docs/document/content/dev-manual/readwrite-splitting.en.md
@@ -5,27 +5,27 @@ weight = 8
 chapter = true
 +++
 
-## SPI Interface
+## ReadQueryLoadBalanceAlgorithm
 
-### ReadQueryLoadBalanceAlgorithm
+### Fully-qualified class name
 
-| *SPI Name*                                 | *Description*              |
-| ----------------------------------------- | ----------------------- |
-| ReadQueryLoadBalanceAlgorithm             | the read database load balancer algorithm           |
+[`org.apache.shardingsphere.readwritesplitting.spi.ReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-api/src/main/java/org/apache/shardingsphere/readwritesplitting/spi/ReadQueryLoadBalanceAlgorithm.java)
 
-## Sample
+### Definition
 
-### ReadQueryLoadBalanceAlgorithm
+Read query load balance algorithm's definition
 
-| *known implementation class*                        | *Description*                                                                                                                                                                                                        |
-|-----------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
-| RoundRobinReadQueryLoadBalanceAlgorithm             | the read database load balancer algorithm based on polling                                                                                                                                                           |
-| RandomReadQueryLoadBalanceAlgorithm                 | the read database load balancer algorithm based on random                                                                                                                                                            |
-| WeightReadQueryLoadBalanceAlgorithm                 | the read database load balancer algorithm based on weight                                                                                                                                                            |
-| TransactionRandomReadQueryLoadBalanceAlgorithm      | Whether in a transaction or not, read requests are routed to multiple replicas using a random strategy                                                                                                               |
-| TransactionRoundRobinReadQueryLoadBalanceAlgorithm  | Whether in a transaction or not, read requests are routed to multiple replicas using a round-robin strategy                                                                                                          |
-| TransactionWeightReadQueryLoadBalanceAlgorithm      | Whether in a transaction or not, read requests are routed to multiple replicas using a weight strategy                                                                                                               |
-| FixedReplicaRandomReadQueryLoadBalanceAlgorithm     | Open transaction, and the read request is routed to a fixed replica using a random strategy; if the transaction is not opened, each read traffic is routed to a different replica using the specified algorithm      |
-| FixedReplicaRoundRobinReadQueryLoadBalanceAlgorithm | Open transaction, and the read request is routed to a fixed replica using a round-robin strategy; if the transaction is not opened, each read traffic is routed to a different replica using the specified algorithm |
-| FixedReplicaWeightReadQueryLoadBalanceAlgorithm     | Open transaction, and the read request is routed to a fixed replica using a weight strategy; if the transaction is not opened, each read traffic is routed to a different replica using the specified algorithm      |
-| FixedPrimaryReadQueryLoadBalanceAlgorithm           | All read traffic is routed to the primary                                                                                                                                                                            |
+### Implementation classes
+
+| *Configuration Type* | *Description*                             | *Fully-qualified class name* |
+| -------------------- | ----------------------------------------- | ---------------------------- |
+| ROUND_ROBIN             | the read database load balancer algorithm based on polling                                                                                                                                                           | [`org.apache.shardingsphere.readwritesplitting.algorithm.loadbalance.RoundRobinReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/main/java/org/apache/shardingsphere/readwritesplitting/algorithm/loadbalance/RoundRobinReadQueryLoadBalanceAlgorithm.java) |
+| RANDOM                 | the read database load balancer algorithm based on random                                                                                                                                                            | [`org.apache.shardingsphere.readwritesplitting.algorithm.loadbalance.RandomReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/main/java/org/apache/shardingsphere/readwritesplitting/algorithm/loadbalance/RandomReadQueryLoadBalanceAlgorithm.java) |
+| WEIGHT                 | the read database load balancer algorithm based on weight                                                                                                                                                            | [`org.apache.shardingsphere.readwritesplitting.algorithm.loadbalance.WeightReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/main/java/org/apache/shardingsphere/readwritesplitting/algorithm/loadbalance/WeightReadQueryLoadBalanceAlgorithm.java) |
+| TRANSACTION_RANDOM      | Whether in a transaction or not, read requests are routed to multiple replicas using a random strategy                                  | [`org.apache.shardingsphere.readwritesplitting.algorithm.loadbalance.TransactionRandomReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/main/java/org/apache/shardingsphere/readwritesplitting/algorithm/loadbalance/TransactionRandomReadQueryLoadBalanceAlgorithm.java) |
+| TRANSACTION_ROUND_ROBIN  | Whether in a transaction or not, read requests are routed to multiple replicas using a round-robin strategy                                           | [`org.apache.shardingsphere.readwritesplitting.algorithm.loadbalance.TransactionRoundRobinReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/main/java/org/apache/shardingsphere/readwritesplitting/algorithm/loadbalance/TransactionRoundRobinReadQueryLoadBalanceAlgorithm.java) |
+| TRANSACTION_WEIGHT      | Whether in a transaction or not, read requests are routed to multiple replicas using a weight strategy                                                                                                               | [`org.apache.shardingsphere.readwritesplitting.algorithm.loadbalance.TransactionWeightReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/main/java/org/apache/shardingsphere/readwritesplitting/algorithm/loadbalance/TransactionWeightReadQueryLoadBalanceAlgorithm.java) |
+| FIXED_REPLICA_RANDOM | Open transaction, and the read request is routed to a fixed replica using a random strategy; if the transaction is not opened, each read traffic is routed to a different replica using the specified algorithm      | [`org.apache.shardingsphere.readwritesplitting.algorithm.loadbalance.FixedReplicaRandomReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/main/java/org/apache/shardingsphere/readwritesplitting/algorithm/loadbalance/FixedReplicaRandomReadQueryLoadBalanceAlgorithm.java) |
+| FIXED_REPLICA_ROUND_ROBIN | Open transaction, and the read request is routed to a fixed replica using a round-robin strategy; if the transaction is not opened, each read traffic is routed to a different replica using the specified algorithm | [`org.apache.shardingsphere.readwritesplitting.algorithm.loadbalance.FixedReplicaRoundRobinReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/main/java/org/apache/shardingsphere/readwritesplitting/algorithm/loadbalance/FixedReplicaRoundRobinReadQueryLoadBalanceAlgorithm.java) |
+| FIXED_REPLICA_WEIGHT | Open transaction, and the read request is routed to a fixed replica using a weight strategy; if the transaction is not opened, each read traffic is routed to a different replica using the specified algorithm      | [`org.apache.shardingsphere.readwritesplitting.algorithm.loadbalance.FixedReplicaWeightReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/main/java/org/apache/shardingsphere/readwritesplitting/algorithm/loadbalance/FixedReplicaWeightReadQueryLoadBalanceAlgorithm.java) |
+| FIXED_PRIMARY | All read traffic is routed to the primary                    | [`org.apache.shardingsphere.readwritesplitting.algorithm.loadbalance.FixedPrimaryReadQueryLoadBalanceAlgorithm`](https://github.com/apache/shardingsphere/blob/master/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/main/java/org/apache/shardingsphere/readwritesplitting/algorithm/loadbalance/FixedPrimaryReadQueryLoadBalanceAlgorithm.java) |
