commit 82e9c49b33413e379b6db56bcde72f5e3215a5bc
Author: Ling Hengqian <linghengqian@outlook.com>
Date:   Mon Oct 10 11:15:55 2022 +0800

    Instructions for adding optional plugins to ShardingSphere Proxy documentation (#21430)

diff --git a/docs/document/content/user-manual/shardingsphere-proxy/optional-plugins/_index.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/optional-plugins/_index.cn.md
new file mode 100644
index 00000000000..0ed771f1bf4
--- /dev/null
+++ b/docs/document/content/user-manual/shardingsphere-proxy/optional-plugins/_index.cn.md
@@ -0,0 +1,68 @@
++++
+title = "可选插件"
+weight = 5
++++
+
+ShardingSphere 默认情况下仅包含核心 SPI 的实现，在 Git Source 存在一部分包含第三方依赖的 SPI
+实现的插件未包含在内。可在 https://central.sonatype.dev/ 进行检索。
+
+所有插件对应的 SPI 和 SPI 的已有实现类均可在 https://shardingsphere.apache.org/document/current/cn/dev-manual/ 检索。
+
+下以 `groupId:artifactId` 的表现形式列出所有的内置插件。
+
+- `org.apache.shardingsphere:shardingsphere-db-protocol-core`，数据库协议核心
+- `org.apache.shardingsphere:shardingsphere-mysql-protocol`，数据库协议的 MySQL 实现
+- `org.apache.shardingsphere:shardingsphere-postgresql-protocol`，数据库协议的 PostgresSQL 实现
+- `org.apache.shardingsphere:shardingsphere-opengauss-protocol`，数据库协议的 OpenGauss 实现
+- `org.apache.shardingsphere:shardingsphere-proxy-frontend-core`，用于 ShardingSphere-Proxy 解析与适配访问数据库的协议
+- `org.apache.shardingsphere:shardingsphere-proxy-frontend-mysql`，用于 ShardingSphere-Proxy 解析与适配访问数据库的协议的 MySQL 实现
+- `org.apache.shardingsphere:shardingsphere-proxy-frontend-reactive-mysql`，用于 ShardingSphere-Proxy 解析与适配访问数据库的协议的 MySQL 的 `vertx-sql-client` 实现
+- `org.apache.shardingsphere:shardingsphere-proxy-frontend-postgresql`，用于 ShardingSphere-Proxy 解析与适配访问数据库的协议的 PostgresSQL 实现
+- `org.apache.shardingsphere:shardingsphere-proxy-frontend-opengauss`，用于 ShardingSphere-Proxy 解析与适配访问数据库的协议的 openGauss 实现
+- `org.apache.shardingsphere:shardingsphere-proxy-backend`，ShardingSphere Proxy 的后端
+- `org.apache.shardingsphere:shardingsphere-cluster-mode-repository-zookeeper-curator`，集群模式配置信息持久化定义的 zookeeper 实现 
+- `org.apache.shardingsphere:shardingsphere-cluster-mode-repository-etcd`，集群模式配置信息持久化定义的 etcd 实现
+- `org.apache.shardingsphere:shardingsphere-jdbc-core`
+
+对于核心的 `org.apache.shardingsphere:shardingsphere-jdbc-core`，其内置如下插件。
+
+- `org.apache.shardingsphere:shardingsphere-transaction-core`，XA 分布式事务管理器核心
+- `org.apache.shardingsphere:shardingsphere-sql-parser-sql92`，SQL 解析的 SQL 92 方言实现
+- `org.apache.shardingsphere:shardingsphere-sql-parser-mysql`，SQL 解析的 MySQL 方言实现
+- `org.apache.shardingsphere:shardingsphere-sql-parser-postgresql`，SQL 解析的 PostgresSQL 方言实现
+- `org.apache.shardingsphere:shardingsphere-sql-parser-oracle`，SQL 解析的 Oracle 方言解析实现
+- `org.apache.shardingsphere:shardingsphere-sql-parser-sqlserver`，SQL 解析的 SQL Server 方言实现
+- `org.apache.shardingsphere:shardingsphere-sql-parser-opengauss`，SQL 解析的 OpenGauss 方言实现
+- `org.apache.shardingsphere:shardingsphere-mysql-dialect-exception`， 数据库网关的 MySQL 实现
+- `org.apache.shardingsphere:shardingsphere-postgresql-dialect-exception`，数据库网关的 PostgresSQL 实现
+- `org.apache.shardingsphere:shardingsphere-authority-core`，用户权限加载逻辑核心
+- `org.apache.shardingsphere:shardingsphere-single-table-core`，单表（所有的分片数据源中仅唯一存在的表）核心
+- `org.apache.shardingsphere:shardingsphere-traffic-core`，流量治理核心
+- `org.apache.shardingsphere:shardingsphere-infra-context`，Context 的内核运行与元数据刷新机制
+- `org.apache.shardingsphere:shardingsphere-standalone-mode-core`，单机模式配置信息持久化定义核心
+- `org.apache.shardingsphere:shardingsphere-standalone-mode-repository-jdbc-h2`，单机模式配置信息持久化定义的 H2 实现
+- `org.apache.shardingsphere:shardingsphere-cluster-mode-core`，集群模式配置信息持久化定义核心
+- `org.apache.shardingsphere:shardingsphere-sharding-core`，数据分片核心
+- `org.apache.shardingsphere:shardingsphere-sharding-cache`
+  ，参考未关闭的 https://github.com/apache/shardingsphere/issues/21223
+- `org.apache.shardingsphere:shardingsphere-readwrite-splitting-core`，读写分离核心
+- `org.apache.shardingsphere:shardingsphere-db-discovery-core`，高可用核心
+- `org.apache.shardingsphere:shardingsphere-encrypt-core`，数据加密核心
+- `org.apache.shardingsphere:shardingsphere-shadow-core`，影子库核心
+- `org.apache.shardingsphere:shardingsphere-sql-federation-core`，联邦查询执行器核心
+- `org.apache.shardingsphere:shardingsphere-sql-federation-executor-advanced`，联邦查询执行器的 `advanced` 实现
+- `org.apache.shardingsphere:shardingsphere-sql-federation-executor-original`，联邦查询执行器的 `original` 实现
+- `org.apache.shardingsphere:shardingsphere-parser-core`，SQL 解析核心
+
+如果 ShardingSphere Proxy 需要使用可选插件，需要在 Maven Central 下载包含其 SPI 实现的 JAR 和其依赖的 JAR。
+
+下以 `groupId:artifactId` 的表现形式列出所有的可选插件。
+
+- 集群模式配置信息持久化定义
+  - `org.apache.shardingsphere:shardingsphere-cluster-mode-repository-nacos`，基于 Nacos 的持久化
+  - `org.apache.shardingsphere:shardingsphere-cluster-mode-repository-consul`，基于 Consul 的持久化
+- XA 分布式事务管理器
+  - `org.apache.shardingsphere:shardingsphere-transaction-xa-narayana`，基于 Narayana 的 XA 分布式事务管理器
+  - `org.apache.shardingsphere:shardingsphere-transaction-xa-bitronix`，基于 Bitronix 的 XA 分布式事务管理器
+- SQL 翻译
+  - `org.apache.shardingsphere:shardingsphere-sql-translator-jooq-provider`，使用 JooQ 的 SQL 翻译器
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/optional-plugins/_index.en.md b/docs/document/content/user-manual/shardingsphere-proxy/optional-plugins/_index.en.md
new file mode 100644
index 00000000000..213ca072415
--- /dev/null
+++ b/docs/document/content/user-manual/shardingsphere-proxy/optional-plugins/_index.en.md
@@ -0,0 +1,81 @@
++++
+title = "Optional Plugins"
+weight = 5
++++
+
+ShardingSphere only includes the implementation of the core SPI by default, and there is a part of the SPI that contains
+third-party dependencies in Git Source
+Implemented plugins are not included. Retrievable at https://central.sonatype.dev/.
+
+SPI and existing implementation classes of SPI corresponding to all plugins can be retrieved
+at https://shardingsphere.apache.org/document/current/cn/dev-manual/.
+
+All built-in plugins are listed below in the form of `groupId:artifactId`.
+
+- `org.apache.shardingsphere:shardingsphere-db-protocol-core`, database protocol core
+- `org.apache.shardingsphere:shardingsphere-mysql-protocol`, the MySQL implementation of the database protocol
+- `org.apache.shardingsphere:shardingsphere-postgresql-protocol`, the PostgresSQL implementation of the database protocol
+- `org.apache.shardingsphere:shardingsphere-opengauss-protocol`, the OpenGauss implementation of the database protocol
+- `org.apache.shardingsphere:shardingsphere-proxy-frontend-core`, used by ShardingSphere-Proxy to parse and adapt the protocol for accessing the database
+- `org.apache.shardingsphere:shardingsphere-proxy-frontend-mysql`, a MySQL implementation for ShardingSphere-Proxy to parse and adapt the protocol for accessing the database
+- `org.apache.shardingsphere:shardingsphere-proxy-frontend-reactive-mysql`, the `vertx-sql-client` implementation of MySQL for ShardingSphere-Proxy to parse and adapt the protocol for accessing the database
+- `org.apache.shardingsphere:shardingsphere-proxy-frontend-postgresql`, a PostgresSQL implementation for ShardingSphere-Proxy to parse and adapt the protocol for accessing the database
+- `org.apache.shardingsphere:shardingsphere-proxy-frontend-opengauss`, an openGauss implementation for ShardingSphere-Proxy to parse and adapt the protocol for accessing the database
+- `org.apache.shardingsphere:shardingsphere-proxy-backend`, the backend for ShardingSphere Proxy
+- `org.apache.shardingsphere:shardingsphere-cluster-mode-repository-zookeeper-curator`, the zookeeper implementation of the persistent definition of cluster mode configuration information
+- `org.apache.shardingsphere:shardingsphere-cluster-mode-repository-etcd`, etcd implementation of persistent definition of cluster mode configuration information
+- `org.apache.shardingsphere:shardingsphere-jdbc-core`
+
+For the core `org.apache.shardingsphere:shardingsphere-jdbc-core`, the following plugins are built-in.
+
+- `org.apache.shardingsphere:shardingsphere-transaction-core`, XA Distributed Transaction Manager Core
+- `org.apache.shardingsphere:shardingsphere-sql-parser-sql92`, the SQL 92 dialect implementation of SQL parsing
+- `org.apache.shardingsphere:shardingsphere-sql-parser-mysql`, MySQL dialect implementation of SQL parsing
+- `org.apache.shardingsphere:shardingsphere-sql-parser-postgresql`, PostgresSQL dialect implementation of SQL parsing
+- `org.apache.shardingsphere:shardingsphere-sql-parser-oracle`, Oracle dialect parsing implementation for SQL parsing
+- `org.apache.shardingsphere:shardingsphere-sql-parser-sqlserver`, the SQL Server dialect implementation of SQL parsing
+- `org.apache.shardingsphere:shardingsphere-sql-parser-opengauss`, the OpenGauss dialect implementation of SQL parsing
+- `org.apache.shardingsphere:shardingsphere-mysql-dialect-exception`, MySQL implementation of database gateway
+- `org.apache.shardingsphere:shardingsphere-postgresql-dialect-exception`, PostgresSQL implementation of database
+  gateway
+- `org.apache.shardingsphere:shardingsphere-authority-core`, the user authority to load the logical core
+- `org.apache.shardingsphere:shardingsphere-single-table-core`, single-table (only the only table that exists in all
+  sharded data sources) core
+- `org.apache.shardingsphere:shardingsphere-traffic-core`, traffic governance core
+- `org.apache.shardingsphere:shardingsphere-infra-context`, the kernel operation and metadata refresh mechanism of
+  Context
+- `org.apache.shardingsphere:shardingsphere-standalone-mode-core`, the persistence definition core of single-machine
+  mode configuration information
+- `org.apache.shardingsphere:shardingsphere-standalone-mode-repository-jdbc-h2`, H2 implementation of persistent
+  definition of configuration information in stand-alone mode
+- `org.apache.shardingsphere:shardingsphere-cluster-mode-core`, the persistent definition core of cluster mode
+  configuration information
+- `org.apache.shardingsphere:shardingsphere-sharding-core`, data sharding core
+- `org.apache.shardingsphere:shardingsphere-sharding-cache`, refer
+  to https://github.com/apache/shardingsphere/issues/21223
+- `org.apache.shardingsphere:shardingsphere-readwrite-splitting-core`, read-write splitting core
+- `org.apache.shardingsphere:shardingsphere-db-discovery-core`, high availability core
+- `org.apache.shardingsphere:shardingsphere-encrypt-core`, data encryption core
+- `org.apache.shardingsphere:shardingsphere-shadow-core`, shadow library core
+- `org.apache.shardingsphere:shardingsphere-sql-federation-core`, federation query executor core
+- `org.apache.shardingsphere:shardingsphere-sql-federation-executor-advanced`, the `advanced` implementation of
+  federated query executor
+- `org.apache.shardingsphere:shardingsphere-sql-federation-executor-original`, the `original` implementation of
+  federated query executor
+- `org.apache.shardingsphere:shardingsphere-parser-core`, SQL parsing core
+
+If ShardingSphere Proxy needs to use optional plugins, you need to download the JAR containing its SPI implementation
+and its dependent JARs from Maven Central.
+
+All optional plugins are listed below in the form of `groupId:artifactId`.
+
+- Cluster mode configuration information persistence definition
+    - `org.apache.shardingsphere:shardingsphere-cluster-mode-repository-nacos`, Nacos based persistence
+    - `org.apache.shardingsphere:shardingsphere-cluster-mode-repository-consul`, Consul based persistence
+- XA transaction manager provider definition
+    - `org.apache.shardingsphere:shardingsphere-transaction-xa-narayana`, XA distributed transaction manager based on
+      Narayana
+    - `org.apache.shardingsphere:shardingsphere-transaction-xa-bitronix`, XA distributed transaction manager based on
+      Bitronix
+- SQL translator
+    - `org.apache.shardingsphere:shardingsphere-sql-translator-jooq-provider`, JooQ SQL translator
