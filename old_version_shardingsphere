commit cda2c416d7377bb3bea2f38cac5ea40a132bcf1d
Author: Liang Zhang <zhangliang@apache.org>
Date:   Thu Aug 25 18:35:18 2022 +0800

    Update intro document (#20519)

diff --git a/docs/document/content/overview/_index.cn.md b/docs/document/content/overview/_index.cn.md
index 91d8942514f..38be2a303b6 100644
--- a/docs/document/content/overview/_index.cn.md
+++ b/docs/document/content/overview/_index.cn.md
@@ -5,6 +5,6 @@ weight = 1
 chapter = true
 +++
 
-本章介绍了什么是 Apache ShardingSphere，及其设计哲学和部署形态。
+本章介绍 Apache ShardingSphere的定义，设计哲学和部署形态。
 
 更多常见问题，请参考 [FAQ](https://github.com/apache/shardingsphere/wiki/FAQ)。
diff --git a/docs/document/content/overview/intro.cn.md b/docs/document/content/overview/intro.cn.md
index 141ffe5087f..8a607fd2bd0 100644
--- a/docs/document/content/overview/intro.cn.md
+++ b/docs/document/content/overview/intro.cn.md
@@ -7,9 +7,13 @@ chapter = true
 
 ## 介绍
 
-Apache ShardingSphere 是一款开源的分布式数据库生态项目，由 JDBC 和 Proxy 两款产品组成。 其核心采用微内核+可插拔架构，通过插件开放扩展功能。它提供多源异构数据库增强平台，进而围绕其上层构建生态。
+Apache ShardingSphere 是一款开源的分布式数据库生态项目，由 JDBC 和 Proxy 两款产品组成。
+其核心采用微内核+可插拔架构，通过插件开放扩展功能。
+它提供多源异构数据库增强平台，进而围绕其上层构建生态。
 
-Apache ShardingSphere 设计哲学为 Database Plus，旨在构建异构数据库上层的标准和生态。它关注如何充分合理地利用数据库的计算和存储能力，而并非实现一个全新的数据库。它站在数据库的上层视角，关注它们之间的协作多于数据库自身。
+Apache ShardingSphere 设计哲学为 Database Plus，旨在构建异构数据库上层的标准和生态。
+它关注如何充分合理地利用数据库的计算和存储能力，而并非实现一个全新的数据库。
+它站在数据库的上层视角，关注它们之间的协作多于数据库自身。
 
 ### ShardingSphere-JDBC
 
@@ -27,22 +31,22 @@ ShardingSphere-Proxy 定位为透明化的数据库代理端，通过实现数
 
 ## 产品功能
 
-|特性|定义|
-|---------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|
-|数据分片  |数据分片是一种数据库分布式技术，ShardingSphere 可将一个大的数据库（或表）以某种维度切分成多个小的数据库（或表），构建出可有效的应对海量数据存储及更密集请求的分布式数据库解决方案。|
-|分布式事务|ShardingSphere 对外提供本地事务接口，通过 LOCAL，XA，BASE 三种模式提供了分布式事务的能力。                                                                                |
-|读写分离  |在读请求明显多于写请求的业务场景中，通过 ShardingSphere 读写分离技术可大幅度提升系统吞吐能力，即主库负责处理事务性的增删改请求，从库只负责处理查询请求。                        |
-|高可用    |ShardingSphere 自身提供计算节点，并通过数据库作为存储节点。 它采用的高可用方案是利用数据库自身的高可用方案做存储节点高可用，并自动识别其变化。                                  |
-|数据迁移  |ShardingSphere 为用户提供了基于数据全场景迁移能力，可应对业务数据量激增的场景。                                                                                           |
-|联邦查询  |ShardingSphere 联邦查询适合于跨越数据库之间的关联查询和子查询。                                                                                                         |
-|数据加密  |ShardingSphere 根据业界对加密的需求及业务改造痛点，提供了一套完整、安全、透明化、低改造成本的数据加密整合解决方案。                                                            |
-|影子库    |在全链路压测场景中，ShardingSphere 影子库用于存储压测数据，为复杂的全链路压测工作提供数据隔离支持，获得的测试结果能够准确地反应系统真实容量和性能水平。                         |
+| 特性       | 定义 |
+| --------- | ---- |
+| 数据分片   | 数据分片是一种数据库分布式技术，ShardingSphere 可将一个大的数据库（或表）以某种维度切分成多个小的数据库（或表），构建出可有效的应对海量数据存储及更密集请求的分布式数据库解决方案。 |
+| 分布式事务 | ShardingSphere 对外提供本地事务接口，通过 LOCAL，XA，BASE 三种模式提供了分布式事务的能力。 |
+| 读写分离   | 在读请求明显多于写请求的业务场景中，通过 ShardingSphere 读写分离技术可大幅度提升系统吞吐能力，即主库负责处理事务性的增删改请求，从库只负责处理查询请求。 |
+| 高可用     | ShardingSphere 自身提供计算节点，并通过数据库作为存储节点。它采用的高可用方案是利用数据库自身的高可用方案做存储节点高可用，并自动识别其变化。 |
+| 数据迁移   | ShardingSphere 为用户提供了基于数据全场景迁移能力，可应对业务数据量激增的场景。 |
+| 联邦查询   | ShardingSphere 联邦查询适合于跨越数据库之间的关联查询和子查询。 |
+| 数据加密   | ShardingSphere 根据业界对加密的需求及业务改造痛点，提供了一套完整、安全、透明化、低改造成本的数据加密整合解决方案。 |
+| 影子库     | 在全链路压测场景中，ShardingSphere 影子库用于存储压测数据，为复杂的全链路压测工作提供数据隔离支持，获得的测试结果能够准确地反应系统真实容量和性能水平。 |
 
 ## 产品优势
 
 * 极致性能
 
-驱动程序端历经多年打磨，效率接近原生 JDBC，性能极致。
+驱动程序端历经长年打磨，效率接近原生 JDBC，性能极致。
 
 * 生态兼容
 
@@ -70,7 +74,7 @@ ShardingSphere-Proxy 定位为透明化的数据库代理端，通过实现数
 
 ## 线路规划
 
-![Roadmap](https://shardingsphere.apache.org/document/current/img/roadmap_v2_cn.png)
+![Roadmap](https://shardingsphere.apache.org/document/current/img/roadmap_cn.png)
 
 ## 如何参与
 
diff --git a/docs/document/content/overview/intro.en.md b/docs/document/content/overview/intro.en.md
index 38a30629617..40f85d84e61 100644
--- a/docs/document/content/overview/intro.en.md
+++ b/docs/document/content/overview/intro.en.md
@@ -8,12 +8,12 @@ chapter = true
 ## Introduction
 
 Apache ShardingSphere is an open source ecosystem that allows you to transform any database into a distributed database system. 
-
-The project includes a JDBC and a Proxy, and its core adopts a micro-kernel and pluggable architecture. Thanks to its plugin-oriented architecture, features can be flexibly expanded at will. 
+The project includes a JDBC and a Proxy, and its core adopts a micro-kernel and pluggable architecture.
+Thanks to its plugin-oriented architecture, features can be flexibly expanded at will. 
 
 The project is committed to providing a multi-source heterogeneous, enhanced database platform and further building an ecosystem around the upper layer of the platform.
-
-Database Plus, the design philosophy of Apache ShardingSphere, aims at building the standard and ecosystem on the upper layer of the heterogeneous database. It focuses on how to make full and reasonable use of the computing and storage capabilities of existing databases rather than creating a brand new database. It attaches greater importance to the collaboration between multiple databases instead of the database itself.
+Database Plus, the design philosophy of Apache ShardingSphere, aims at building the standard and ecosystem on the upper layer of the heterogeneous database.
+It focuses on how to make full and reasonable use of the computing and storage capabilities of existing databases rather than creating a brand new database. It attaches greater importance to the collaboration between multiple databases instead of the database itself.
 
 ### ShardingSphere-JDBC
 
@@ -31,16 +31,16 @@ ShardingSphere-Proxy is a transparent database proxy, providing a database serve
 
 ## Product Features
 
-|Feature                |Definition                                                                                                                                                                                                                                                                                                                     |
-|-----------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
-|Data Sharding          |Data sharding is a distributed database technology. ShardingSphere can split a large database (or table) into multiple small databases (or tables), and create a distributed database solution that can effectively cope with massive data storage and intensive requests.                                                     |
-|Distributed Transaction|ShardingSphere provides local transaction interfaces and supports distributed transactions through LOCAL, XA, and BASE modes.                                                                                                                                                                                                  |
-|Read/write Splitting   |In a scenario where the read requests greatly outnumber write requests, ShardingSphere's read/write splitting feature can significantly improve the system throughput. The primary database deals with transactional addition, deletion, and modification requests while the secondary database only deals with query requests.|
-|High Availability (HA) |ShardingSphere itself provides compute nodes and serves as the storage node through databases. It leverages the database's HA solutions to achieve high availability of the storage node, and automatically identifies the changes.                                                                                            |
-|Data Migration         |ShardingSphere provides full-scenario data migration capability for users, which can cope with the surge of business data volume.                                                                                                                                                                                              |
-|Federated Query        |ShardingSphere federated query applies to associated queries and sub-queries across databases.                                                                                                                                                                                                                                 |
-|Data Encryption        |Considering the industry's needs for encryption and the pain points of business transformation, ShardingSphere provides a set of integrated data encryption solutions that are complete, secure, transparent, and with low transformation cost.                                                                                |
-|Shadow DB              |In the full-link stress testing scenario, ShardingSphere shadow DB is used for storing stress testing data and providing data isolation support for complex testing work. The obtained testing result can accurately reflect the system's true capacity and performance.                                                       |
+| Feature                 | Definition |
+| ----------------------- | ---------- |
+| Data Sharding           | Data sharding is a distributed database technology. ShardingSphere can split a large database (or table) into multiple small databases (or tables), and create a distributed database solution that can effectively cope with massive data storage and intensive requests. |
+| Distributed Transaction | ShardingSphere provides local transaction interfaces and supports distributed transactions through LOCAL, XA, and BASE modes. |
+| Read/write Splitting    | In a scenario where the read requests greatly outnumber write requests, ShardingSphere's read/write splitting feature can significantly improve the system throughput. The primary database deals with transactional addition, deletion, and modification requests while the secondary database only deals with query requests. |
+| High Availability       | ShardingSphere itself provides compute nodes and serves as the storage node through databases. It leverages the database's HA solutions to achieve high availability of the storage node, and automatically identifies the changes. |
+| Data Migration          | ShardingSphere provides full-scenario data migration capability for users, which can cope with the surge of business data volume. |
+| Federated Query         | ShardingSphere federated query applies to associated queries and sub-queries across databases. |
+| Data Encryption         | Considering the industry's needs for encryption and the pain points of business transformation, ShardingSphere provides a set of integrated data encryption solutions that are complete, secure, transparent, and with low transformation cost. |
+| Shadow Database         | In the full-link stress testing scenario, ShardingSphere shadow DB is used for storing stress testing data and providing data isolation support for complex testing work. The obtained testing result can accurately reflect the system's true capacity and performance. |
 
 ## Advantages
 
@@ -74,7 +74,7 @@ It can provide users with flexibility thanks to custom systems based on multi-le
 
 ## Roadmap
 
-![Roadmap](https://shardingsphere.apache.org/document/current/img/roadmap_v2.png)
+![Roadmap](https://shardingsphere.apache.org/document/current/img/roadmap_en.png)
 
 ## How to Contribute
 
diff --git a/docs/document/static/img/roadmap_v2_cn.png b/docs/document/static/img/roadmap_cn.png
similarity index 100%
rename from docs/document/static/img/roadmap_v2_cn.png
rename to docs/document/static/img/roadmap_cn.png
diff --git a/docs/document/static/img/roadmap_v2.png b/docs/document/static/img/roadmap_en.png
similarity index 100%
rename from docs/document/static/img/roadmap_v2.png
rename to docs/document/static/img/roadmap_en.png
