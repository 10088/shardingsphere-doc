commit dea03ebb45995d2d91564f59022b9330d3dfb028
Author: 小马哥 <machencoding@163.com>
Date:   Thu Aug 18 21:29:32 2022 +0800

    Fix document reference link not working (#20276)

diff --git a/docs/blog/content/material/2022_07_26_DistSQL_Applications_Building_a_Dynamic_Distributed_Database.en.md b/docs/blog/content/material/2022_07_26_DistSQL_Applications_Building_a_Dynamic_Distributed_Database.en.md
index f2f1678d27b..d249608de45 100644
--- a/docs/blog/content/material/2022_07_26_DistSQL_Applications_Building_a_Dynamic_Distributed_Database.en.md
+++ b/docs/blog/content/material/2022_07_26_DistSQL_Applications_Building_a_Dynamic_Distributed_Database.en.md
@@ -493,7 +493,7 @@ If you have any questions or suggestions about [Apache ShardingSphere](https://s
 4. [Concept INLINE Expression
 ](https://shardingsphere.apache.org/document/current/en/features/sharding/concept/inline-expression/)
 5. [Built-in Sharding Algorithm
-](https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/)
+](https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/sharding/)
 6. [User Manual: DistSQL
 ](https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-proxy/distsql/syntax/)
 
diff --git a/docs/blog/content/material/Oct_12_4_Updates_and_FAQ_Your_1_Minute_Quick_Start_Guide_to_ShardingSphere.cn.md b/docs/blog/content/material/Oct_12_4_Updates_and_FAQ_Your_1_Minute_Quick_Start_Guide_to_ShardingSphere.cn.md
index 1c15445a565..fb68ca03eab 100644
--- a/docs/blog/content/material/Oct_12_4_Updates_and_FAQ_Your_1_Minute_Quick_Start_Guide_to_ShardingSphere.cn.md
+++ b/docs/blog/content/material/Oct_12_4_Updates_and_FAQ_Your_1_Minute_Quick_Start_Guide_to_ShardingSphere.cn.md
@@ -314,7 +314,7 @@ examples/shardingsphere-jdbc-example/extension-example/custom-sharding-algortihm
 * 注意 shardingAlgorithms 配置项，当 type 为 CLASS_BASED 时，可以通过 props 指定自定义算法的类别和全路径，这样就可以完成自定义算法的配置。
 
 详细配置说明请阅读配置手册：
-https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/
+https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/sharding/
 
 4.启动运行
 
diff --git a/docs/blog/content/material/Oct_12_6_AutoTable_Your_Butler-Like_Sharding_Configuration_Tool.cn.md b/docs/blog/content/material/Oct_12_6_AutoTable_Your_Butler-Like_Sharding_Configuration_Tool.cn.md
index 4e55ea98139..15f48851d05 100644
--- a/docs/blog/content/material/Oct_12_6_AutoTable_Your_Butler-Like_Sharding_Configuration_Tool.cn.md
+++ b/docs/blog/content/material/Oct_12_6_AutoTable_Your_Butler-Like_Sharding_Configuration_Tool.cn.md
@@ -141,7 +141,7 @@ AutoTable 支持全部的自动分片算法，包括：
 * AUTO_INTERVAL：自动时间段分片算法
 
 关于以上算法的更多详细信息，请阅读 **Apache ShardingSphere 官方文档-自动分片算法：**
-https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/
+https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/sharding/
 
 除内置算法外，用户也可以通过 SPI 扩展的方式加载自定义的分片算法，满足更加定制化的分片需求。
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.cn.md
index a3ae7d5b432..7a4888fd9a7 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.cn.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.cn.md
@@ -55,12 +55,12 @@ algorithmName ::=
       、`COMPLEX`。使用 `COMPLEX` 时需要用 `SHARDING_COLUMNS` 指定多个分片键。
 - 当使用自动分片时：
     - `RESOURCES` 只能使用已经添加到当前逻辑库的资源，可通过枚举或 INLINE 表达式指定需要的资源；
-    - 只能使用自动分片算法，可参考[自动分片算法](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/#自动分片算法)。
-- `algorithmType` 为分片算法类型，分片算法类型请参考[分片算法](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/)；
+    - 只能使用自动分片算法，可参考[自动分片算法](/cn/user-manual/common-config/builtin-algorithm/sharding/#自动分片算法)。
+- `algorithmType` 为分片算法类型，分片算法类型请参考[分片算法](/cn/user-manual/common-config/builtin-algorithm/sharding/)；
 - 自动生成的算法命名规则为  `tableName` _ `strategyType` _ `algorithmType`；
 - 自动生成的主键策略命名规则为 `tableName` _ `strategyType`；
 - `KEY_GENERATE_STRATEGY`
-  用于指定主键生成策略，为可选项，关于主键生成策略可参考[分布式主键](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/keygen/)。
+  用于指定主键生成策略，为可选项，关于主键生成策略可参考[分布式主键](/cn/user-manual/common-config/builtin-algorithm/keygen/)。
 
 ### 示例
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.en.md
index bed423c32bf..6a409a7d530 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.en.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.en.md
@@ -62,14 +62,14 @@ algorithmName ::=
     - `RESOURCES` can only use resources that have been added to the current database, and the required resources can be
       specified by enumeration or INLINE expression;
     - Only auto sharding algorithm can be used, please refer
-      to [Auto Sharding Algorithm](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/#auto-sharding-algorithm).
+      to [Auto Sharding Algorithm](/en/user-manual/common-config/builtin-algorithm/sharding/#auto-sharding-algorithm).
 - `algorithmType` is the sharding algorithm type, please refer
   to [Sharding Algorithm](en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding);
 - The auto-generated algorithm naming rule is `tableName` _ `strategyType` _ `shardingAlgorithmType`;
 - The auto-generated primary key strategy naming rule is `tableName` _ `strategyType`;
 - `KEY_GENERATE_STRATEGY` is used to specify the primary key generation strategy, which is optional. For the primary key
   generation strategy, please refer
-  to [Distributed Primary Key](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/keygen/).
+  to [Distributed Primary Key](/en/user-manual/common-config/builtin-algorithm/keygen/).
 
 ### Example
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.cn.md
index 933120352b2..faa9713e64f 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.cn.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.cn.md
@@ -35,7 +35,7 @@ algorithmType ::=
 ### 补充说明
 
 - 当使用复合分片算法时，需要通过 `SHARDING_COLUMNS` 指定多个分片键；
-- `algorithmType` 为分片算法类型，详细的分片算法类型信息请参考[分片算法](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/)。
+- `algorithmType` 为分片算法类型，详细的分片算法类型信息请参考[分片算法](/cn/user-manual/common-config/builtin-algorithm/sharding/)。
 
 ### 示例
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.en.md
index 6917e5c4e0a..9a4b4c1b358 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.en.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.en.md
@@ -36,7 +36,7 @@ algorithmType ::=
 
 - When using the complex sharding algorithm, multiple sharding columns need to be specified using `SHARDING_COLUMNS`;
 - `algorithmType` is the sharding algorithm type. For detailed sharding algorithm type information, please refer
-  to [Sharding Algorithm](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/).
+  to [Sharding Algorithm](/en/user-manual/common-config/builtin-algorithm/sharding/).
 
 ### Example
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-algorithm.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-algorithm.cn.md
index 95f4db5c2cd..f5d62923bb4 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-algorithm.cn.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-algorithm.cn.md
@@ -28,7 +28,7 @@ algorithmType ::=
 
 ### 补充说明
 
-- `algorithmType` 为分片算法类型，详细的分片算法类型信息请参考[分片算法](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/)。
+- `algorithmType` 为分片算法类型，详细的分片算法类型信息请参考[分片算法](/cn/user-manual/common-config/builtin-algorithm/sharding/)。
 
 ### 示例
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-algorithm.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-algorithm.en.md
index 29a2caa2abb..caf1809b8b9 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-algorithm.en.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-algorithm.en.md
@@ -28,7 +28,7 @@ algorithmType ::=
 
 ### Supplement
 
-- `algorithmType` is the sharding algorithm type. For detailed sharding algorithm type information, please refer to [Sharding Algorithm](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/).
+- `algorithmType` is the sharding algorithm type. For detailed sharding algorithm type information, please refer to [Sharding Algorithm](/en/user-manual/common-config/builtin-algorithm/sharding/).
 
 ### Example
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.cn.md
index 3b37cc6e8d0..f2cf857b1d0 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.cn.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.cn.md
@@ -55,12 +55,12 @@ algorithmName ::=
       、`COMPLEX`。使用 `COMPLEX` 时需要用 `SHARDING_COLUMNS` 指定多个分片键。
 - 当使用自动分片时：
     - `RESOURCES` 只能使用已经添加到当前逻辑库的资源，可通过枚举或 INLINE 表达式指定需要的资源；
-    - 只能使用自动分片算法，可参考[自动分片算法](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/#自动分片算法)。
-- `algorithmType` 为分片算法类型，分片算法类型请参考[分片算法](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/)；
+    - 只能使用自动分片算法，可参考[自动分片算法](/cn/user-manual/common-config/builtin-algorithm/sharding/#自动分片算法)。
+- `algorithmType` 为分片算法类型，分片算法类型请参考[分片算法](/cn/user-manual/common-config/builtin-algorithm/sharding/)；
 - 自动生成的算法命名规则为  `tableName` _ `strategyType` _ `algorithmType`；
 - 自动生成的主键策略命名规则为 `tableName` _ `strategyType；
 - `KEY_GENERATE_STRATEGY`
-  用于指定主键生成策略，为可选项，关于主键生成策略可参考[分布式主键](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/keygen/)。
+  用于指定主键生成策略，为可选项，关于主键生成策略可参考[分布式主键](/cn/user-manual/common-config/builtin-algorithm/keygen/)。
 
 ### 示例
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.en.md
index db8dbbed400..f8943a05a48 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.en.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.en.md
@@ -62,14 +62,14 @@ algorithmName ::=
     - `RESOURCES` can only use resources that have been added to the current database, and the required resources can be
       specified by enumeration or INLINE expression;
     - Only auto sharding algorithm can be used, please refer
-      to [Auto Sharding Algorithm](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/#auto-sharding-algorithm).
+      to [Auto Sharding Algorithm](/en/user-manual/common-config/builtin-algorithm/sharding/#auto-sharding-algorithm).
 - `algorithmType` is the sharding algorithm type, please refer
   to [Sharding Algorithm](en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding);
 - The auto-generated algorithm naming rule is `tableName` _ `strategyType` _ `shardingAlgorithmType`;
 - The auto-generated primary key strategy naming rule is `tableName` _ `strategyType`;
 - `KEY_GENERATE_STRATEGY` is used to specify the primary key generation strategy, which is optional. For the primary key
   generation strategy, please refer
-  to [Distributed Primary Key](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/keygen/).
+  to [Distributed Primary Key](/en/user-manual/common-config/builtin-algorithm/keygen/).
 
 ### Example
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.cn.md
index 1a9efd8aecc..6b0744b689d 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.cn.md
@@ -9,7 +9,7 @@ chapter = true
 ```java
 ShardingRuleConfiguration ruleConfiguration = new ShardingRuleConfiguration();
 // algorithmName 由用户指定，需要和分片策略中的分片算法一致
-// type 和 props，请参考分片内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/
+// type 和 props，请参考分片内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/sharding/
 ruleConfiguration.getShardingAlgorithms().put("algorithmName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
 
@@ -17,7 +17,7 @@ ruleConfiguration.getShardingAlgorithms().put("algorithmName", new AlgorithmConf
 
 ```java
 // encryptorName 由用户指定，需要和加密规则中的 encryptorName 属性一致
-// type 和 props，请参考加密内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/encrypt/
+// type 和 props，请参考加密内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/encrypt/
 Map<String, AlgorithmConfiguration> algorithmConfigs = new LinkedHashMap<>(1, 1);
 algorithmConfigs.put("encryptorName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
@@ -26,7 +26,7 @@ algorithmConfigs.put("encryptorName", new AlgorithmConfiguration("xxx", new Prop
 
 ```java
 // loadBalancerName 由用户指定，需要和读写分离规则中的 loadBalancerName 属性一致
-// type 和 props，请参考读写分离负载均衡内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance/      
+// type 和 props，请参考读写分离负载均衡内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/load-balance/      
 Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>(1, 1);
 algorithmConfigs.put("loadBalancerName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
@@ -35,7 +35,7 @@ algorithmConfigs.put("loadBalancerName", new AlgorithmConfiguration("xxx", new P
 
 ```java
 // shadowAlgorithmName 由用户指定，需要和影子库规则中的 shadowAlgorithmNames 属性一致
-// type 和 props，请参考影子库内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/shadow/      
+// type 和 props，请参考影子库内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/shadow/      
 Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>(1, 1);
 algorithmConfigs.put("shadowAlgorithmName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.en.md
index aafa25546da..04e889b1fc9 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.en.md
@@ -9,7 +9,7 @@ chapter = true
 ```java
 ShardingRuleConfiguration ruleConfiguration = new ShardingRuleConfiguration();
 // algorithmName is specified by users and should be consistent with the sharding algorithm in the sharding strategy.
-// type and props, please refer to the built-in sharding algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/
+// type and props, please refer to the built-in sharding algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/sharding/
 ruleConfiguration.getShardingAlgorithms().put("algorithmName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
 
@@ -17,7 +17,7 @@ ruleConfiguration.getShardingAlgorithms().put("algorithmName", new AlgorithmConf
 
 ```java
 // encryptorName is specified by users, and its property should be consistent with that of encryptorName in encryption rules.
-// type and props, please refer to the built-in encryption algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/encrypt/
+// type and props, please refer to the built-in encryption algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/encrypt/
 Map<String, AlgorithmConfiguration> algorithmConfigs = new LinkedHashMap<>(1, 1);
 algorithmConfigs.put("encryptorName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
@@ -26,7 +26,7 @@ algorithmConfigs.put("encryptorName", new AlgorithmConfiguration("xxx", new Prop
 
 ```java
 // loadBalancerName is specified by users, and its property has to be consistent with that of loadBalancerName in read/write splitting rules.
-// type and props, please refer to the built-in read/write splitting algorithm load balancer: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance/      
+// type and props, please refer to the built-in read/write splitting algorithm load balancer: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/load-balance/      
 Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>(1, 1);
 algorithmConfigs.put("loadBalancerName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
@@ -35,7 +35,7 @@ algorithmConfigs.put("loadBalancerName", new AlgorithmConfiguration("xxx", new P
 
 ```java
 // shadowAlgorithmName is specified by users, and its property has to be consistent with that of shadowAlgorithmNames in shadow DB rules.
-// type and props, please refer to the built-in shadow DB algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/shadow/      
+// type and props, please refer to the built-in shadow DB algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/shadow/      
 Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>(1, 1);
 algorithmConfigs.put("shadowAlgorithmName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/mode.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/mode.cn.md
index 9aacd2234d0..a7cd615808b 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/mode.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/mode.cn.md
@@ -96,4 +96,4 @@ private ModeConfiguration createModeConfiguration() {
 ## 相关参考
 
 - [ZooKeeper 注册中心安装与使用](https://zookeeper.apache.org/doc/r3.7.1/zookeeperStarted.html)
-- 持久化仓库类型的详情，请参见[内置持久化仓库类型列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/metadata-repository/)。
+- 持久化仓库类型的详情，请参见[内置持久化仓库类型列表](/cn/user-manual/common-config/builtin-algorithm/metadata-repository/)。
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/mode.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/mode.en.md
index 613464f0b1d..f3f4b6e658d 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/mode.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/mode.en.md
@@ -96,4 +96,4 @@ private ModeConfiguration createModeConfiguration() {
 ## Related References
 
 - [Installation and Usage of ZooKeeper Registry Center](https://zookeeper.apache.org/doc/r3.7.1/zookeeperStarted.html)
-- Please refer to [Builtin Persist Repository List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/metadata-repository/) for more details about type of repository.
+- Please refer to [Builtin Persist Repository List](/en/user-manual/common-config/builtin-algorithm/metadata-repository/) for more details about type of repository.
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/encrypt.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/encrypt.cn.md
index 1ca3b492d22..c64da2475b4 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/encrypt.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/encrypt.cn.md
@@ -61,7 +61,7 @@ weight = 5
 | type       | String     | 加解密算法类型     |
 | properties | Properties | 加解密算法属性配置 |
 
-算法类型的详情，请参见[内置加密算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/encrypt)。
+算法类型的详情，请参见[内置加密算法列表](/cn/user-manual/common-config/builtin-algorithm/encrypt)。
 
 ## 操作步骤
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/encrypt.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/encrypt.en.md
index a9779b8129a..fea5520c638 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/encrypt.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/encrypt.en.md
@@ -61,7 +61,7 @@ Attributes:
 | type       | String     | Encrypt algorithm type       |
 | properties | Properties | Encrypt algorithm properties |
 
-Please refer to [Built-in Encrypt Algorithm List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/encrypt) for more details about type of algorithm.
+Please refer to [Built-in Encrypt Algorithm List](/en/user-manual/common-config/builtin-algorithm/encrypt) for more details about type of algorithm.
 
 ## Procedure
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.cn.md
index 9ae47571066..a9631327025 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.cn.md
@@ -51,7 +51,7 @@ Java API 形式配置的读写分离可以方便的适用于各种场景，不
 | autoAwareDataSourceName         | String    | 数据库发现的逻辑数据源名称      | -       |
 | writeDataSourceQueryEnabled (?) | String    | 读库全部下线，主库是否承担读流量 | true    |
 
-算法类型的详情，请参见[内置负载均衡算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance)。
+算法类型的详情，请参见[内置负载均衡算法列表](/cn/user-manual/common-config/builtin-algorithm/load-balance)。
 查询一致性路由的详情，请参见[核心特性：读写分离](/cn/features/readwrite-splitting/)。
 
 ## 操作步骤
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.en.md
index f1bd02786e1..7580cc3a3a1 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.en.md
@@ -51,7 +51,7 @@ Configurable Properties:
 | autoAwareDataSourceName         | String     | Database discovery logic data source name                                                                   | -                  |
 | writeDataSourceQueryEnabled (?) | String     | All read data source are offline, write data source whether the data source is responsible for read traffic | true               |
 
-Please refer to [Built-in Load Balance Algorithm List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance) for details on algorithm types.
+Please refer to [Built-in Load Balance Algorithm List](/en/user-manual/common-config/builtin-algorithm/load-balance) for details on algorithm types.
 Please refer to [Read-write splitting-Core features](/en/features/readwrite-splitting/) for more details about query consistent routing.
 
 ## Operating Procedures
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/shadow.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/shadow.cn.md
index 0bca9dda34f..446d98e3797 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/shadow.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/shadow.cn.md
@@ -54,7 +54,7 @@ weight = 6
 | type | String | 影子算法类型 |
 | props | Properties | 影子算法配置 |
 
-算法类型的详情，请参见[内置影子算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/shadow)。
+算法类型的详情，请参见[内置影子算法列表](/cn/user-manual/common-config/builtin-algorithm/shadow)。
 
 ## 操作步骤
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/shadow.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/shadow.en.md
index c811db03c11..f1e607c19fa 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/shadow.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/shadow.en.md
@@ -55,7 +55,7 @@ Attributes:
 | type | String | shadow algorithm type |
 | props | Properties | shadow algorithm configuration |
 
-Please refer to [Built-in Shadow Algorithm List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/shadow).
+Please refer to [Built-in Shadow Algorithm List](/en/user-manual/common-config/builtin-algorithm/shadow).
 
 ## Procedure
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/sharding.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/sharding.cn.md
index 4b7e5655373..225b5f01935 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/sharding.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/sharding.cn.md
@@ -95,7 +95,7 @@ weight = 1
 
 可配置属性：无
 
-算法类型的详情，请参见[内置分片算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding)。
+算法类型的详情，请参见[内置分片算法列表](/cn/user-manual/common-config/builtin-algorithm/sharding)。
 
 ### 分布式序列策略配置
 
@@ -108,7 +108,7 @@ weight = 1
 | column           | String   | 分布式序列列名称   |
 | keyGeneratorName | String   | 分布式序列算法名称 |
 
-算法类型的详情，请参见[内置分布式序列算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/keygen)。
+算法类型的详情，请参见[内置分布式序列算法列表](/cn/user-manual/common-config/builtin-algorithm/keygen)。
 
 ## 操作步骤
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/sharding.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/sharding.en.md
index 20c14abaadb..cec23d8c3a5 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/sharding.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/sharding.en.md
@@ -95,7 +95,7 @@ Class name: org.apache.shardingsphere.sharding.api.config.strategy.sharding.None
 
 Attributes: None
 
-Please refer to [Built-in Sharding Algorithm List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding) for more details about type of algorithm.
+Please refer to [Built-in Sharding Algorithm List](/en/user-manual/common-config/builtin-algorithm/sharding) for more details about type of algorithm.
 
 ### Distributed Key Strategy Configuration
 
@@ -108,7 +108,7 @@ Attributes:
 | column           | String     | Column name of key generate |
 | keyGeneratorName | String     | key generate algorithm name |
 
-Please refer to [Built-in Key Generate Algorithm List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/keygen) for more details about type of algorithm.
+Please refer to [Built-in Key Generate Algorithm List](/en/user-manual/common-config/builtin-algorithm/keygen) for more details about type of algorithm.
 
 ## Procedure
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/algorithm.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/algorithm.cn.md
index 28cd9c0f803..109171a16ba 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/algorithm.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/algorithm.cn.md
@@ -7,7 +7,7 @@ weight = 4
 
 ```properties
 # sharding-algorithm-name 由用户指定，需要和分片策略中的 sharding-algorithm-name 属性一致
-# type 和 props，请参考分片内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/
+# type 和 props，请参考分片内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/sharding/
 spring.shardingsphere.rules.sharding.sharding-algorithms.<sharding-algorithm-name>.type=xxx
 spring.shardingsphere.rules.sharding.sharding-algorithms.<sharding-algorithm-name>.props.xxx=xxx
 ```
@@ -16,7 +16,7 @@ spring.shardingsphere.rules.sharding.sharding-algorithms.<sharding-algorithm-nam
 
 ```properties
 # encrypt-algorithm-name 由用户指定，需要和加密规则中的 encryptor-name 属性一致
-# type 和 props，请参考加密内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/encrypt/
+# type 和 props，请参考加密内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/encrypt/
 spring.shardingsphere.rules.encrypt.encryptors.<encrypt-algorithm-name>.type=xxx
 spring.shardingsphere.rules.encrypt.encryptors.<encrypt-algorithm-name>.props.xxx=xxx
 ```
@@ -25,7 +25,7 @@ spring.shardingsphere.rules.encrypt.encryptors.<encrypt-algorithm-name>.props.xx
 
 ```properties
 # load-balance-algorithm-name 由用户指定，需要和读写分离规则中的 load-balancer-name 属性一致
-# type 和 props，请参考读写分离负载均衡内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance/
+# type 和 props，请参考读写分离负载均衡内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/load-balance/
 spring.shardingsphere.rules.readwrite-splitting.load-balancers.<load-balance-algorithm-name>.type=xxx
 spring.shardingsphere.rules.readwrite-splitting.load-balancers.<load-balance-algorithm-name>.props.xxx=xxx
 ```
@@ -34,7 +34,7 @@ spring.shardingsphere.rules.readwrite-splitting.load-balancers.<load-balance-alg
 
 ```properties
 # shadow-algorithm-name 由用户指定，需要和影子库规则中的 shadow-algorithm-names 属性一致
-# type 和 props，请参考影子库内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/shadow/
+# type 和 props，请参考影子库内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/shadow/
 spring.shardingsphere.rules.shadow.shadow-algorithms.<shadow-algorithm-name>.type=xxx
 spring.shardingsphere.rules.shadow.shadow-algorithms.<shadow-algorithm-name>.props.xxx=xxx
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/algorithm.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/algorithm.en.md
index a293f408432..8b42fd0220e 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/algorithm.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/algorithm.en.md
@@ -7,7 +7,7 @@ weight = 4
 
 ```properties
 # sharding-algorithm-name is specified by users and its property should be consistent with that of sharding-algorithm-name in the sharding strategy.
-# type and props, please refer to the built-in sharding algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/
+# type and props, please refer to the built-in sharding algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/sharding/
 spring.shardingsphere.rules.sharding.sharding-algorithms.<sharding-algorithm-name>.type=xxx
 spring.shardingsphere.rules.sharding.sharding-algorithms.<sharding-algorithm-name>.props.xxx=xxx
 ```
@@ -16,7 +16,7 @@ spring.shardingsphere.rules.sharding.sharding-algorithms.<sharding-algorithm-nam
 
 ```properties
 # encrypt-algorithm-name is specified by users, and its property should be consistent with that of encryptor-name in encryption rules. 
-# type and props, please refer to the built-in encryption algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/encrypt/
+# type and props, please refer to the built-in encryption algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/encrypt/
 spring.shardingsphere.rules.encrypt.encryptors.<encrypt-algorithm-name>.type=xxx
 spring.shardingsphere.rules.encrypt.encryptors.<encrypt-algorithm-name>.props.xxx=xxx
 ```
@@ -25,7 +25,7 @@ spring.shardingsphere.rules.encrypt.encryptors.<encrypt-algorithm-name>.props.xx
 
 ```properties
 # load-balance-algorithm-name is specified by users, and its property has to be consistent with that of load-balancer-name in read/write splitting rules. 
-# type and props, please refer to the built-in read/write splitting algorithm load balancer: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance/
+# type and props, please refer to the built-in read/write splitting algorithm load balancer: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/load-balance/
 spring.shardingsphere.rules.readwrite-splitting.load-balancers.<load-balance-algorithm-name>.type=xxx
 spring.shardingsphere.rules.readwrite-splitting.load-balancers.<load-balance-algorithm-name>.props.xxx=xxx
 ```
@@ -34,7 +34,7 @@ spring.shardingsphere.rules.readwrite-splitting.load-balancers.<load-balance-alg
 
 ```properties
 # shadow-algorithm-name is specified by users, and its property has to be consistent with that of shadow-algorithm-names in shadow DB rules. 
-# type and props, please refer to the built-in shadow DB algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/shadow/
+# type and props, please refer to the built-in shadow DB algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/shadow/
 spring.shardingsphere.rules.shadow.shadow-algorithms.<shadow-algorithm-name>.type=xxx
 spring.shardingsphere.rules.shadow.shadow-algorithms.<shadow-algorithm-name>.props.xxx=xxx
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/mode.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/mode.cn.md
index b5e2b08ce1a..f047baaf000 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/mode.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/mode.cn.md
@@ -76,4 +76,4 @@ spring.shardingsphere.mode.overwrite=false
 ## 相关参考
 
 - [ZooKeeper 注册中心安装与使用](https://zookeeper.apache.org/doc/r3.7.1/zookeeperStarted.html)
-- - 持久化仓库类型的详情，请参见[内置持久化仓库类型列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/metadata-repository/)。
+- - 持久化仓库类型的详情，请参见[内置持久化仓库类型列表](/cn/user-manual/common-config/builtin-algorithm/metadata-repository/)。
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/mode.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/mode.en.md
index 19ce5b83251..ab856d7ff17 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/mode.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/mode.en.md
@@ -75,4 +75,4 @@ mode:
 ## Related References
 
 - [Installation and Usage of ZooKeeper Registry Center](https://zookeeper.apache.org/doc/r3.7.1/zookeeperStarted.html)
-- Please refer to [Builtin Persist Repository List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/metadata-repository/) for more details about the type of repository.
+- Please refer to [Builtin Persist Repository List](/en/user-manual/common-config/builtin-algorithm/metadata-repository/) for more details about the type of repository.
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/encrypt.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/encrypt.cn.md
index 9052e8d3aca..bc4c851df04 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/encrypt.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/encrypt.cn.md
@@ -25,7 +25,7 @@ spring.shardingsphere.rules.encrypt.encryptors.<encrypt-algorithm-name>.props.xx
 spring.shardingsphere.rules.encrypt.queryWithCipherColumn= # 是否使用加密列进行查询。在有原文列的情况下，可以使用原文列进行查询
 ```
 
-算法类型的详情，请参见[内置加密算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/encrypt)。
+算法类型的详情，请参见[内置加密算法列表](/cn/user-manual/common-config/builtin-algorithm/encrypt)。
 
 ## 操作步骤
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/encrypt.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/encrypt.en.md
index aebd1b286ca..7836712e628 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/encrypt.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/encrypt.en.md
@@ -25,7 +25,7 @@ spring.shardingsphere.rules.encrypt.encryptors.<encrypt-algorithm-name>.props.xx
 spring.shardingsphere.rules.encrypt.queryWithCipherColumn= # Whether query with cipher column for data encrypt. User you can use plaintext to query if have
 ```
 
-Please refer to [Built-in Encrypt Algorithm List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/encrypt) for more details about type of algorithm.
+Please refer to [Built-in Encrypt Algorithm List](/en/user-manual/common-config/builtin-algorithm/encrypt) for more details about type of algorithm.
 
 ## Procedure
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/readwrite-splitting.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/readwrite-splitting.cn.md
index 34f7df8af84..2f16b4199d6 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/readwrite-splitting.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/readwrite-splitting.cn.md
@@ -36,7 +36,7 @@ spring.shardingsphere.rules.readwrite-splitting.load-balancers.<load-balance-alg
 spring.shardingsphere.rules.readwrite-splitting.load-balancers.<load-balance-algorithm-name>.props.xxx= # 负载均衡算法属性配置
 ```
 
-算法类型的详情，请参见[内置负载均衡算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance)。
+算法类型的详情，请参见[内置负载均衡算法列表](/cn/user-manual/common-config/builtin-algorithm/load-balance)。
 查询一致性路由的详情，请参见[核心特性：读写分离](/cn/features/readwrite-splitting/)。
 
 ## 操作步骤
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/readwrite-splitting.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/readwrite-splitting.en.md
index 034583059c6..a3dae0482a3 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/readwrite-splitting.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/readwrite-splitting.en.md
@@ -36,7 +36,7 @@ spring.shardingsphere.rules.readwrite-splitting.load-balancers.<load-balance-alg
 spring.shardingsphere.rules.readwrite-splitting.load-balancers.<load-balance-algorithm-name>.props.xxx= # Load balance algorithm properties
 ```
 
-Please refer to [Built-in Load Balance Algorithm List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance) for more details about type of algorithm.
+Please refer to [Built-in Load Balance Algorithm List](/en/user-manual/common-config/builtin-algorithm/load-balance) for more details about type of algorithm.
 Please refer to [Read-write splitting-Core features](/en/features/readwrite-splitting/) for more details about query consistent routing.
 
 ## Operating Procedure
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/shadow.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/shadow.cn.md
index 2919b1b52a9..0ebb1c4da76 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/shadow.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/shadow.cn.md
@@ -39,7 +39,7 @@ spring.shardingsphere.rules.shadow
 | type | 影子算法类型 | 无 |
 | props | 影子算法配置 | 无 |
 
-详情请参见[内置影子算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/shadow)
+详情请参见[内置影子算法列表](/cn/user-manual/common-config/builtin-algorithm/shadow)
 
 ## 操作步骤
 1. 创建生产和影子数据源。
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/shadow.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/shadow.en.md
index 7d3b4eb8d92..c304a0879ca 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/shadow.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/shadow.en.md
@@ -38,7 +38,7 @@ spring.shardingsphere.rules.shadow
 | type | Shadow algorithm type | none|
 | props | Shadow algorithm configuration | none |
 
-For details, see [list of built-in shadow algorithms](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/shadow/)
+For details, see [list of built-in shadow algorithms](/en/user-manual/common-config/builtin-algorithm/shadow/)
 
 ## Procedure
 1. Create production and shadow data sources.
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/sharding.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/sharding.cn.md
index 8889d809015..9b548ca5cdb 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/sharding.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/sharding.cn.md
@@ -63,7 +63,7 @@ spring.shardingsphere.rules.sharding.key-generators.<key-generate-algorithm-name
 spring.shardingsphere.rules.sharding.key-generators.<key-generate-algorithm-name>.props.xxx= # 分布式序列算法属性配置
 ```
 
-算法类型的详情，请参见[内置分片算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding)和[内置分布式序列算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/keygen)。
+算法类型的详情，请参见[内置分片算法列表](/cn/user-manual/common-config/builtin-algorithm/sharding)和[内置分布式序列算法列表](/cn/user-manual/common-config/builtin-algorithm/keygen)。
 
 > 注意事项：行表达式标识符可以使用 `${...}` 或 `$->{...}`，但前者与 Spring 本身的属性文件占位符冲突，因此在 Spring 环境中使用行表达式标识符建议使用 `$->{...}`。
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/sharding.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/sharding.en.md
index 49dc49743ed..dd9bf734925 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/sharding.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/sharding.en.md
@@ -63,7 +63,7 @@ spring.shardingsphere.rules.sharding.key-generators.<key-generate-algorithm-name
 spring.shardingsphere.rules.sharding.key-generators.<key-generate-algorithm-name>.props.xxx= # Key generate algorithm properties
 ```
 
-Please refer to [Built-in Sharding Algorithm List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding) and [Built-in Key Generate Algorithm List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/keygen) for more details about type of algorithm.
+Please refer to [Built-in Sharding Algorithm List](/en/user-manual/common-config/builtin-algorithm/sharding) and [Built-in Key Generate Algorithm List](/en/user-manual/common-config/builtin-algorithm/keygen) for more details about type of algorithm.
 
 > Attention: Inline expression identifier can use `${...}` or `$->{...}`, but `${...}` is conflict with spring placeholder of properties, so use `$->{...}` on spring environment is better.
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/algorithm.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/algorithm.cn.md
index 107c37029bb..d05512b51bd 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/algorithm.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/algorithm.cn.md
@@ -7,7 +7,7 @@ weight = 4
 
 ```xml
 <!-- algorithmName 由用户指定，需要和分片策略中的 algorithm-ref 属性一致 -->
-<!-- type 和 props，请参考分片内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/ -->
+<!-- type 和 props，请参考分片内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/sharding/ -->
 <sharding:sharding-algorithm id="algorithmName" type="xxx">
     <props>
         <prop key="xxx">xxx</prop>
@@ -19,7 +19,7 @@ weight = 4
 
 ```xml
 <!-- encryptorName 由用户指定，需要和加密规则中的 encrypt-algorithm-ref 属性一致 -->
-<!-- type 和 props，请参考加密内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/encrypt/ -->
+<!-- type 和 props，请参考加密内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/encrypt/ -->
 <encrypt:encrypt-algorithm id="encryptorName" type="xxx">
     <props>
         <prop key="xxx">xxx</prop>
@@ -31,7 +31,7 @@ weight = 4
 
 ```xml
 <!-- loadBalancerName 由用户指定，需要和读写分离规则中的 load-balance-algorithm-ref 属性一致 -->  
-<!-- type 和 props，请参考读写分离负载均衡内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance/ -->
+<!-- type 和 props，请参考读写分离负载均衡内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/load-balance/ -->
 <readwrite-splitting:load-balance-algorithm id="loadBalancerName" type="xxx">
     <props>
         <prop key="xxx">xxx</prop>
@@ -43,7 +43,7 @@ weight = 4
 
 ```xml
 <!-- shadowAlgorithmName 由用户指定，需要和影子库则中的 shadow-algorithm-ref 属性一致 -->  
-<!-- type 和 props，请参考影子库内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/shadow/ -->
+<!-- type 和 props，请参考影子库内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/shadow/ -->
 <shadow:shadow-algorithm id="shadowAlgorithmName" type="xxx">
     <props>
         <prop key="xxx">xxx</prop>
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/algorithm.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/algorithm.en.md
index 83c51ec6b14..0da101a1b2f 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/algorithm.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/algorithm.en.md
@@ -7,7 +7,7 @@ weight = 4
 
 ```xml
 <!-- algorithmName is specified by users and its property should be consistent with that of algorithm-ref in the sharding strategy. -->
-<!-- type and props, please refer to the built-in sharding algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/ -->
+<!-- type and props, please refer to the built-in sharding algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/sharding/ -->
 <sharding:sharding-algorithm id="algorithmName" type="xxx">
     <props>
         <prop key="xxx">xxx</prop>
@@ -19,7 +19,7 @@ weight = 4
 
 ```xml
 <!-- encryptorName is specified by users, and its property should be consistent with that of encrypt-algorithm-ref in encryption rules. -->
-<!-- type and props, please refer to the built-in encryption algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/encrypt/ -->
+<!-- type and props, please refer to the built-in encryption algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/encrypt/ -->
 <encrypt:encrypt-algorithm id="encryptorName" type="xxx">
     <props>
         <prop key="xxx">xxx</prop>
@@ -31,7 +31,7 @@ weight = 4
 
 ```xml
 <!-- loadBalancerName is specified by users, and its property has to be consistent with that of load-balance-algorithm-ref in read/write splitting rules. -->  
-<!-- type and props, please refer to the built-in read/write splitting algorithm load balancer: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance/ -->
+<!-- type and props, please refer to the built-in read/write splitting algorithm load balancer: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/load-balance/ -->
 <readwrite-splitting:load-balance-algorithm id="loadBalancerName" type="xxx">
     <props>
         <prop key="xxx">xxx</prop>
@@ -43,7 +43,7 @@ weight = 4
 
 ```xml
 <!-- shadowAlgorithmName is specified by users, and its property has to be consistent with that of shadow-algorithm-ref in shadow DB rules. -->  
-<!-- type and props, please refer to the built-in shadow DB algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/shadow/ -->
+<!-- type and props, please refer to the built-in shadow DB algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/shadow/ -->
 <shadow:shadow-algorithm id="shadowAlgorithmName" type="xxx">
     <props>
         <prop key="xxx">xxx</prop>
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/mode.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/mode.cn.md
index fa70252d4ca..67b56212af9 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/mode.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/mode.cn.md
@@ -112,4 +112,4 @@ weight = 1
 ## 相关参考
 
 - [ZooKeeper 注册中心安装与使用](https://zookeeper.apache.org/doc/r3.7.1/zookeeperStarted.html)
-- 持久化仓库类型的详情，请参见[内置持久化仓库类型列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/metadata-repository/)。
+- 持久化仓库类型的详情，请参见[内置持久化仓库类型列表](/cn/user-manual/common-config/builtin-algorithm/metadata-repository/)。
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/mode.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/mode.en.md
index 04837328004..5661cbfc879 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/mode.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/mode.en.md
@@ -111,4 +111,4 @@ Introduce MAVEN dependency
 ## Relevant References
 
 - [Installation and use of ZooKeeper Registry Center](https://zookeeper.apache.org/doc/r3.7.1/zookeeperStarted.html)
-- For details about persistent repository, please refer to [List of Built-in repository types](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/metadata-repository/)
+- For details about persistent repository, please refer to [List of Built-in repository types](/cn/user-manual/common-config/builtin-algorithm/metadata-repository/)
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/encrypt.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/encrypt.cn.md
index 5289f65db60..34e04dcc788 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/encrypt.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/encrypt.cn.md
@@ -45,7 +45,7 @@ weight = 4
 | type      | 属性  | 加密算法类型    |
 | props (?) | 标签  | 加密算法属性配置 |
 
-算法类型的详情，请参见[内置加密算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/encrypt)。
+算法类型的详情，请参见[内置加密算法列表](/cn/user-manual/common-config/builtin-algorithm/encrypt)。
 
 ## 操作步骤
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/encrypt.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/encrypt.en.md
index 6ac89fb1217..e0baa7ba023 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/encrypt.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/encrypt.en.md
@@ -45,7 +45,7 @@ Namespace: [http://shardingsphere.apache.org/schema/shardingsphere/encrypt/encry
 | type      | Attribute  | Encrypt algorithm type       |
 | props (?) | Tag        | Encrypt algorithm properties |
 
-Please refer to [Built-in Encrypt Algorithm List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/encrypt) for more details about type of algorithm.
+Please refer to [Built-in Encrypt Algorithm List](/en/user-manual/common-config/builtin-algorithm/encrypt) for more details about type of algorithm.
 
 ## Procedure 
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/readwrite-splitting.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/readwrite-splitting.cn.md
index 8d01a6b23db..ad28ce043f1 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/readwrite-splitting.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/readwrite-splitting.cn.md
@@ -53,7 +53,7 @@ weight = 2
 | type      | 属性  | 负载均衡算法类型    |
 | props (?) | 标签  | 负载均衡算法属性配置 |
 
-算法类型的详情，请参见[内置负载均衡算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance)。
+算法类型的详情，请参见[内置负载均衡算法列表](/cn/user-manual/common-config/builtin-algorithm/load-balance)。
 查询一致性路由的详情，请参见[核心特性：读写分离](/cn/features/readwrite-splitting/)。
 
 ## 操作步骤
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/readwrite-splitting.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/readwrite-splitting.en.md
index 4a0b819c2a6..ab21ba04864 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/readwrite-splitting.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/readwrite-splitting.en.md
@@ -52,7 +52,7 @@ Namespace: [http://shardingsphere.apache.org/schema/shardingsphere/readwrite-spl
 | type      | Attribute  | Load balance algorithm type       |
 | props (?) | Tag        | Load balance algorithm properties |
 
-Please refer to [Built-in Load Balance Algorithm List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance) for more details about type of algorithm.
+Please refer to [Built-in Load Balance Algorithm List](/en/user-manual/common-config/builtin-algorithm/load-balance) for more details about type of algorithm.
 Please refer to [Read-write splitting-Core features](/en/features/readwrite-splitting/) for more details about query consistent routing.
 
 ## Operating Procedures
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/shadow.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/shadow.cn.md
index 4a3c5e6ef30..140ab11ecd5 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/shadow.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/shadow.cn.md
@@ -63,7 +63,7 @@ weight = 5
 | type | 属性 | 影子算法类型 |
 | props (?) | 标签 | 影子算法属性配置 |
 
-详情请参见[内置影子算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/shadow)
+详情请参见[内置影子算法列表](/cn/user-manual/common-config/builtin-algorithm/shadow)
 
 ## 操作步骤
 1. 创建生产和影子数据源。
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/shadow.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/shadow.en.md
index 57bb0be55c8..2df1d06e175 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/shadow.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/shadow.en.md
@@ -63,7 +63,7 @@ Therefore, enterprises usually select the full link voltage test method, i.e. a
 | id | Attribute | Shadow algorithm name |
 | type | Attribute | Shadow algorithm type |
 | props (?) | Tag | Shadow algorithm attribute configuration |
-Refer to [Builin Shadow Algorithm](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/shadow/) for details
+Refer to [Builin Shadow Algorithm](/en/user-manual/common-config/builtin-algorithm/shadow/) for details
 
 ## Procedure
 1. Create production and shadow data sources.
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/sharding.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/sharding.cn.md
index 916221af143..7a99b24c0e2 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/sharding.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/sharding.cn.md
@@ -114,7 +114,7 @@ weight = 1
 | type      | 属性  | 分布式序列算法类型    |
 | props (?) | 标签  | 分布式序列算法属性配置 |
 
-算法类型的详情，请参见[内置分片算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding)和[内置分布式序列算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/keygen)。
+算法类型的详情，请参见[内置分片算法列表](/cn/user-manual/common-config/builtin-algorithm/sharding)和[内置分布式序列算法列表](/cn/user-manual/common-config/builtin-algorithm/keygen)。
 
 > 注意事项：行表达式标识符可以使用 `${...}` 或 `$->{...}`，但前者与 Spring 本身的属性文件占位符冲突，因此在 Spring 环境中使用行表达式标识符建议使用 `$->{...}`。
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/sharding.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/sharding.en.md
index a689702fd93..0e415a132e5 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/sharding.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/sharding.en.md
@@ -114,7 +114,7 @@ Namespace: [http://shardingsphere.apache.org/schema/shardingsphere/sharding/shar
 | type      | Attribute | Key generate algorithm type       |
 | props (?) | Tag       | Key generate algorithm properties |
 
-Please refer to [Built-in Sharding Algorithm List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding) and [Built-in Key Generate Algorithm List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/keygen) for more details about type of algorithm.
+Please refer to [Built-in Sharding Algorithm List](/en/user-manual/common-config/builtin-algorithm/sharding) and [Built-in Key Generate Algorithm List](/en/user-manual/common-config/builtin-algorithm/keygen) for more details about type of algorithm.
 
 > Attention: Inline expression identifier can use `${...}` or `$->{...}`, but `${...}` is conflict with spring placeholder of properties, so use `$->{...}` on spring environment is better.
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/algorithm.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/algorithm.cn.md
index 84f1ba3ede2..ae50f0955a3 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/algorithm.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/algorithm.cn.md
@@ -9,7 +9,7 @@ weight = 4
 shardingAlgorithms:
   # algorithmName 由用户指定，需要和分片策略中的 shardingAlgorithmName 属性一致
   <algorithmName>:
-    # type 和 props，请参考分片内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/
+    # type 和 props，请参考分片内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/sharding/
     type: xxx
     props:
       xxx: xxx
@@ -21,7 +21,7 @@ shardingAlgorithms:
 encryptors:
   # encryptorName 由用户指定，需要和加密规则中的 encryptorName 属性一致
   <encryptorName>:
-    # type 和 props，请参考加密内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/encrypt/
+    # type 和 props，请参考加密内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/encrypt/
     type: xxx
     props:
       xxx: xxx
@@ -33,7 +33,7 @@ encryptors:
 loadBalancers:
   # loadBalancerName 由用户指定，需要和读写分离规则中的 loadBalancerName 属性一致
   <loadBalancerName>:
-    # type 和 props，请参考读写分离负载均衡内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance/
+    # type 和 props，请参考读写分离负载均衡内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/load-balance/
     type: xxx
     props:
       xxx: xxx
@@ -45,7 +45,7 @@ loadBalancers:
 loadBalancers:
   # shadowAlgorithmName 由用户指定，需要和影子库规则中的 shadowAlgorithmNames 属性一致
   <shadowAlgorithmName>:
-    # type 和 props，请参考影子库内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/shadow/
+    # type 和 props，请参考影子库内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/shadow/
     type: xxx
     props:
       xxx: xxx
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/algorithm.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/algorithm.en.md
index f615a4be32d..d527e5f0218 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/algorithm.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/algorithm.en.md
@@ -9,7 +9,7 @@ weight = 4
 shardingAlgorithms:
   # algorithmName is specified by users, and its property has to be consistent with that of shardingAlgorithmName in the sharding strategy.
   <algorithmName>:
-    # type and props, please refer to the built-in sharding algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/
+    # type and props, please refer to the built-in sharding algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/sharding/
     type: xxx
     props:
       xxx: xxx
@@ -21,7 +21,7 @@ shardingAlgorithms:
 encryptors:
   # encryptorName is specified by users, and its property should be consistent with that of encryptorName in encryption rules.
   <encryptorName>:
-    # type and props, please refer to the built-in encryption algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/encrypt/
+    # type and props, please refer to the built-in encryption algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/encrypt/
     type: xxx
     props:
       xxx: xxx
@@ -32,7 +32,7 @@ encryptors:
 ```yaml
 loadBalancers:
   # loadBalancerName is specified by users, and its property has to be consistent with that of loadBalancerName in read/write splitting rules.
-    # type and props, please refer to the built-in read/write splitting algorithm load balancer: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance/
+    # type and props, please refer to the built-in read/write splitting algorithm load balancer: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/load-balance/
     type: xxx
     props:
       xxx: xxx
@@ -44,7 +44,7 @@ loadBalancers:
 loadBalancers:
   # shadowAlgorithmName is specified by users, and its property has to be consistent with that of shadowAlgorithmNames in shadow DB rules.
   <shadowAlgorithmName>:
-    # type and props, please refer to the built-in shadow DB algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/shadow/
+    # type and props, please refer to the built-in shadow DB algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/shadow/
     type: xxx
     props:
       xxx: xxx
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/mode.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/mode.cn.md
index 488bf905225..dc8c2f82101 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/mode.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/mode.cn.md
@@ -75,4 +75,4 @@ mode:
 ## 相关参考
 
 - [ZooKeeper 注册中心安装与使用](https://zookeeper.apache.org/doc/r3.7.1/zookeeperStarted.html)
-- 持久化仓库类型的详情，请参见[内置持久化仓库类型列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/metadata-repository/)。
+- 持久化仓库类型的详情，请参见[内置持久化仓库类型列表](/cn/user-manual/common-config/builtin-algorithm/metadata-repository/)。
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/mode.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/mode.en.md
index 4dcb9bc76f2..6efd64e3b12 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/mode.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/mode.en.md
@@ -75,4 +75,4 @@ mode:
 ## Related References
 
 - [Installation and Usage of ZooKeeper Registry Center](https://zookeeper.apache.org/doc/r3.7.1/zookeeperStarted.html)
-- Please refer to [Builtin Persist Repository List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/metadata-repository/) for more details about the type of repository.
+- Please refer to [Builtin Persist Repository List](/en/user-manual/common-config/builtin-algorithm/metadata-repository/) for more details about the type of repository.
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/encrypt.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/encrypt.cn.md
index 29cc3d0c6a7..9a01c3ab116 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/encrypt.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/encrypt.cn.md
@@ -32,7 +32,7 @@ rules:
   queryWithCipherColumn: # 是否使用加密列进行查询。在有原文列的情况下，可以使用原文列进行查询
 ```
 
-算法类型的详情，请参见[内置加密算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/encrypt)。
+算法类型的详情，请参见[内置加密算法列表](/cn/user-manual/common-config/builtin-algorithm/encrypt)。
 
 ## 操作步骤
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/encrypt.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/encrypt.en.md
index d95e8eb7837..82144b0e163 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/encrypt.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/encrypt.en.md
@@ -33,7 +33,7 @@ rules:
   queryWithCipherColumn: # Whether query with cipher column for data encrypt. User you can use plaintext to query if have
 ```
 
-Please refer to [Built-in Encrypt Algorithm List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/encrypt) for more details about type of algorithm.
+Please refer to [Built-in Encrypt Algorithm List](/en/user-manual/common-config/builtin-algorithm/encrypt) for more details about type of algorithm.
 
 ## Procedure
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/readwrite-splitting.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/readwrite-splitting.cn.md
index 16597fa3ac3..b89a99180a3 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/readwrite-splitting.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/readwrite-splitting.cn.md
@@ -48,7 +48,7 @@ rules:
       props: # 负载均衡算法属性配置
         # ...
 ```
-算法类型的详情，请参见[内置负载均衡算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance)。
+算法类型的详情，请参见[内置负载均衡算法列表](/cn/user-manual/common-config/builtin-algorithm/load-balance)。
 查询一致性路由的详情，请参见[核心特性：读写分离](/cn/features/readwrite-splitting/)。
 
 ## 操作步骤
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/readwrite-splitting.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/readwrite-splitting.en.md
index 026463f0810..3f9ab20ede6 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/readwrite-splitting.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/readwrite-splitting.en.md
@@ -48,7 +48,7 @@ rules:
         # ...
 ```
 
-Please refer to [Built-in Load Balance Algorithm List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance) for more details about type of algorithm.
+Please refer to [Built-in Load Balance Algorithm List](/en/user-manual/common-config/builtin-algorithm/load-balance) for more details about type of algorithm.
 Please refer to [Read-write splitting-Core features](/en/features/readwrite-splitting/) for more details about query consistent routing.
 
 ## Procedure
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/shadow.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/shadow.cn.md
index 30f8d2acf37..ee8ac08358c 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/shadow.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/shadow.cn.md
@@ -44,7 +44,7 @@ rules:
 | type | 影子算法类型 | 无 |
 | props | 影子算法配置 | 无 |
 
-详情请参见[内置影子算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/shadow)
+详情请参见[内置影子算法列表](/cn/user-manual/common-config/builtin-algorithm/shadow)
 
 ## 操作步骤
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/shadow.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/shadow.en.md
index b27a2aca069..122e3e84406 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/shadow.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/shadow.en.md
@@ -45,7 +45,7 @@ rules:
 | type | shadow algorithm type | none |
 | props | shadow algorithm configuration | none |
 
-Please refer to [Built-in shadow algorithm list](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/shadow) for more details.
+Please refer to [Built-in shadow algorithm list](/en/user-manual/common-config/builtin-algorithm/shadow) for more details.
 
 ## Procedure
 1. Create production and shadow data sources.
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/encrypt.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/encrypt.cn.md
index 1df86b41c85..5281f892534 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/encrypt.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/encrypt.cn.md
@@ -40,7 +40,7 @@ algorithmProperty:
 ### 注意事项
 
 - `PLAIN` 指定明文数据列，`CIPHER` 指定密文数据列；
-- `encryptAlgorithmType` 指定加密算法类型，请参考 [加密算法](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/encrypt/)；
+- `encryptAlgorithmType` 指定加密算法类型，请参考 [加密算法](/cn/user-manual/common-config/builtin-algorithm/encrypt/)；
 - 重复的 `tableName` 将无法被创建；
 - `queryWithCipherColumn` 支持大写或小写的 true 或 false。
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/encrypt.en.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/encrypt.en.md
index bfa1716ed83..7f3d47b3aaf 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/encrypt.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/encrypt.en.md
@@ -40,7 +40,7 @@ algorithmProperty:
 ### Notes 
 
 - `PLAIN` specifies the plain column, `CIPHER` specifies the cipher column
-- `encryptAlgorithmType` specifies the encryption algorithm type, please refer to [Encryption Algorithm](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/encrypt/)
+- `encryptAlgorithmType` specifies the encryption algorithm type, please refer to [Encryption Algorithm](/en/user-manual/common-config/builtin-algorithm/encrypt/)
 - Duplicate `tableName` will not be created
 - `queryWithCipherColumn` support uppercase or lowercase true or false
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/readwrite-splitting.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/readwrite-splitting.cn.md
index b01e3b5c14e..72a147eebdb 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/readwrite-splitting.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/readwrite-splitting.cn.md
@@ -37,7 +37,7 @@ writeDataSourceQueryEnabled:
 
 - 支持创建静态读写分离规则和动态读写分离规则；
 - 动态读写分离规则依赖于数据库发现规则；
-- `loadBanlancerType` 指定负载均衡算法类型，请参考 [负载均衡算法](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance/)；
+- `loadBanlancerType` 指定负载均衡算法类型，请参考 [负载均衡算法](/cn/user-manual/common-config/builtin-algorithm/load-balance/)；
 - 重复的 `ruleName` 将无法被创建。
 
 ## 示例
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/readwrite-splitting.en.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/readwrite-splitting.en.md
index f5d94dc5db6..bcb96163272 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/readwrite-splitting.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/readwrite-splitting.en.md
@@ -37,7 +37,7 @@ writeDataSourceQueryEnabled:
 
 - Support the creation of static readwrite-splitting rules and dynamic readwrite-splitting rules
 - Dynamic readwrite-splitting rules rely on database discovery rules
-- `loadBanlancerType` specifies the load balancing algorithm type, please refer to [Load Balance Algorithm](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance/)
+- `loadBanlancerType` specifies the load balancing algorithm type, please refer to [Load Balance Algorithm](/en/user-manual/common-config/builtin-algorithm/load-balance/)
 - Duplicate `ruleName` will not be created
 
 ## Example
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.cn.md
index 37867624df9..62c0c4f24cf 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.cn.md
@@ -105,8 +105,8 @@ keyGeneratorDefinition:
     keyGeneratorName (algorithmDefinition)
 ```
 - `RESOURCES` 需使用 RDL 管理的数据源资源；
-- `shardingAlgorithmType` 指定自动分片算法类型，请参考  [自动分片算法](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/)；
-- `keyGenerateStrategyType` 指定分布式主键生成策略，请参考 [分布式主键](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/keygen/)；
+- `shardingAlgorithmType` 指定自动分片算法类型，请参考  [自动分片算法](/cn/user-manual/common-config/builtin-algorithm/sharding/)；
+- `keyGenerateStrategyType` 指定分布式主键生成策略，请参考 [分布式主键](/cn/user-manual/common-config/builtin-algorithm/keygen/)；
 - 重复的 `tableName` 将无法被创建；
 - `shardingAlgorithm` 能够被不同的 `Sharding Table Rule` 复用，因此在执行 `DROP SHARDING TABLE RULE` 时，对应的 `shardingAlgorithm` 不会被移除；
 - 如需移除 `shardingAlgorithm`，请执行 `DROP SHARDING ALGORITHM`；
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.en.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.en.md
index 2b74f2cb9c7..6d8cb3b4201 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.en.md
@@ -105,8 +105,8 @@ keyGeneratorDefinition:
     keyGeneratorName (algorithmDefinition)
 ```
 - `RESOURCES` needs to use data source resources managed by RDL
-- `shardingAlgorithmType` specifies the type of automatic sharding algorithm, please refer to [Auto Sharding Algorithm](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding/)
-- `keyGenerateStrategyType` specifies the distributed primary key generation strategy, please refer to [Key Generate Algorithm](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/keygen/)
+- `shardingAlgorithmType` specifies the type of automatic sharding algorithm, please refer to [Auto Sharding Algorithm](/en/user-manual/common-config/builtin-algorithm/sharding/)
+- `keyGenerateStrategyType` specifies the distributed primary key generation strategy, please refer to [Key Generate Algorithm](/en/user-manual/common-config/builtin-algorithm/keygen/)
 - Duplicate `tableName` will not be created
 - `shardingAlgorithm` can be reused by different `Sharding Table Rule`, so when executing `DROP SHARDING TABLE RULE`, the corresponding `shardingAlgorithm` will not be removed
 - To remove `shardingAlgorithm`, please execute `DROP SHARDING ALGORITHM`
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.cn.md
index 3d542284bba..c2137aa7f08 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.cn.md
@@ -213,7 +213,7 @@ compute:
   ## The server.yaml is auto-generated based on this parameter.
   ## If it is empty, the server.yaml is also empty.
   ## ref: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/yaml-config/mode/
-  ## ref: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/metadata-repository/
+  ## ref: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/metadata-repository/
   ##
   serverConfig:
     ## @section Compute-Node ShardingSphere-Proxy ServerConfiguration authority parameters
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.en.md b/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.en.md
index bb4a5631258..59afac6085f 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.en.md
@@ -216,7 +216,7 @@ compute:
   ## The server.yaml is auto-generated based on this parameter.
   ## If it is empty, the server.yaml is also empty.
   ## ref: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/yaml-config/mode/
-  ## ref: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/metadata-repository/
+  ## ref: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/metadata-repository/
   ##
   serverConfig:
     ## @section Compute-Node ShardingSphere-Proxy ServerConfiguration authority parameters
