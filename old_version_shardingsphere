commit 5e1ee5b2576f801d6e28fe5c6d8e628b94bf4380
Author: lanchengx <52209337+lanchengx@users.noreply.github.com>
Date:   Tue May 31 11:53:34 2022 +0800

    Rename schema to database (#18081)

diff --git a/docs/document/content/dev-manual/proxy.cn.md b/docs/document/content/dev-manual/proxy.cn.md
index 6dd5a85c26c..d6eec330dfe 100644
--- a/docs/document/content/dev-manual/proxy.cn.md
+++ b/docs/document/content/dev-manual/proxy.cn.md
@@ -21,10 +21,10 @@ chapter = true
 
 | *SPI 名称*                       | *详细说明*                    |
 | ------------------------------- | ---------------------------- |
-| AuthorityProvideAlgorithm       | 用户权限加载逻辑                |
+| AuthorityProviderAlgorithm      | 用户权限加载逻辑                |
 
-| *已知实现类*                                          | *Type*           | *详细说明*                                                                          |
-|-----------------------------------------------------| ---------------- |----------------------------------------------------------------------------------- |
-| NativeAuthorityProviderAlgorithm（已弃用）            | NATIVE           | 基于后端数据库存取 server.yaml 中配置的权限信息。如果用户不存在，则自动创建用户并默认赋予最高权限  |
-| AllPrivilegesPermittedAuthorityProviderAlgorithm    | ALL_PERMITTED    | 默认授予所有权限（不鉴权），不会与实际数据库交互                                            |
-| SchemaPrivilegesPermittedAuthorityProviderAlgorithm | SCHEMA_PERMITTED | 通过属性 user-schema-mappings 配置的权限                                               |
+| *已知实现类*                                          | *Type*            | *详细说明*                                                                          |
+|-----------------------------------------------------| ----------------  |----------------------------------------------------------------------------------- |
+| NativeAuthorityProviderAlgorithm（已弃用）            | NATIVE            | 基于后端数据库存取 server.yaml 中配置的权限信息。如果用户不存在，则自动创建用户并默认赋予最高权限  |
+| AllPermittedPrivilegesProviderAlgorithm             | ALL_PERMITTED     | 默认授予所有权限（不鉴权），不会与实际数据库交互                                            |
+| SchemaPermittedPrivilegesProviderAlgorithm          | DATABASE_PERMITTED| 通过属性 user-database-mappings 配置的权限                                               |
diff --git a/docs/document/content/dev-manual/proxy.en.md b/docs/document/content/dev-manual/proxy.en.md
index 1d8e2cb2c74..ab6ddae7a65 100644
--- a/docs/document/content/dev-manual/proxy.en.md
+++ b/docs/document/content/dev-manual/proxy.en.md
@@ -19,12 +19,12 @@ chapter = true
 
 ## AuthorityProvideAlgorithm
 
-| *SPI Name*                       | *Description*                 |
-| ------------------------------- | ------------------------------ |
-| AuthorityProvideAlgorithm       | User authority loading logic   |
+| *SPI Name*                       | *Description*                  |
+| -------------------------------  | ------------------------------ |
+| AuthorityProviderAlgorithm       | User authority loading logic   |
 
 | *Implementation Class*                              | *Type*           | *Description*                                                                                                         |
 |-----------------------------------------------------| ---------------- | --------------------------------------------------------------------------------------------------------------------- |
 | NativeAuthorityProviderAlgorithm (Deprecated)       | NATIVE           | Persist user authority defined in server.yaml into the backend database. An admin user will be created if not existed |
-| AllPrivilegesPermittedAuthorityProviderAlgorithm    | ALL_PERMITTED    | All privileges granted to user by default (No authentication). Will not interact with the actual database             |
-| SchemaPrivilegesPermittedAuthorityProviderAlgorithm | SCHEMA_PERMITTED | Permissions configured through the attribute user-schema-mappings                                                     |
+| AllPermittedPrivilegesProviderAlgorithm             | ALL_PERMITTED    | All privileges granted to user by default (No authentication). Will not interact with the actual database             |
+| SchemaPermittedPrivilegesProviderAlgorithm          | DATABASE_PERMITTED | Permissions configured through the attribute user-database-mappings                                                     |
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authentication.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authentication.cn.md
index 6773b971e56..03011b1cd5c 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authentication.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authentication.cn.md
@@ -29,7 +29,7 @@ rules:
       type: ALL_PERMITTED
 ```
 
-### SCHEMA_PERMITTED
+### DATABASE_PERMITTED
 ```yaml
 rules:
   - !AUTHORITY
@@ -37,9 +37,9 @@ rules:
       - root@:root
       - my_user@:pwd
     provider:
-      type: SCHEMA_PERMITTED
+      type: DATABASE_PERMITTED
       props:
-        user-schema-mappings: root@=sharding_db, root@=test_db, my_user@127.0.0.1=sharding_db
+        user-database-mappings: root@=sharding_db, root@=test_db, my_user@127.0.0.1=sharding_db
 ```
 以上配置表示：
 - root 用户从任意主机连接时，可访问 `sharding_db`。
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authentication.en.md b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authentication.en.md
index 8ff76a91481..c9d9e152a9f 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authentication.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authentication.en.md
@@ -29,7 +29,7 @@ rules:
       type: ALL_PERMITTED
 ```
 
-### SCHEMA_PERMITTED
+### DATABASE_PERMITTED
 ```yaml
 rules:
   - !AUTHORITY
@@ -37,9 +37,9 @@ rules:
       - root@:root
       - my_user@:pwd
     provider:
-      type: SCHEMA_PERMITTED
+      type: DATABASE_PERMITTED
       props:
-        user-schema-mappings: root@=sharding_db, root@=test_db, my_user@127.0.0.1=sharding_db
+        user-database-mappings: root@=sharding_db, root@=test_db, my_user@127.0.0.1=sharding_db
 ```
 The above configuration means:
 - The user `root` can access `sharding_db` when connecting from any host
