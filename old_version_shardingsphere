commit 7db3dd92b8fa984f1067fe76a0d06e908783dfc3
Author: Liang Zhang <zhangliang@apache.org>
Date:   Wed Jul 13 22:45:15 2022 +0800

    Revise document to remove memory mode (#19116)
    
    * Revise document to remove memory mode
    
    * Fix example
    
    * Fix example
    
    * Fix example

diff --git a/docs/blog/content/material/proxy.cn.md b/docs/blog/content/material/proxy.cn.md
index c2733811f2f..9157af6e1dc 100644
--- a/docs/blog/content/material/proxy.cn.md
+++ b/docs/blog/content/material/proxy.cn.md
@@ -164,7 +164,7 @@ connections=((core_count*2)+effective_spindle_count)
 那么，有没有一种方式，让 ResultSet 收到一条数据就可以立即消费呢？在 Connector/J 文档中有这样一句话：
 
 ```
-If you are working with ResultSets that have a large number of rows or large values and cannot allocate heap space in your JVM for the memory required , you can tell the driver to stream the results back one row at a time.
+If you are working with ResultSets that have a large number of rows or large values and cannot allocate heap space in your JVM for the memory required, you can tell the driver to stream the results back one row at a time.
 
 如果你使用 ResultSet 遇到查询结果太多，以致堆内存都装不下的情况，你可以指示驱动使用流式结果集，一次返回一条数据。
 ```
diff --git a/docs/document/content/concepts/mode/_index.cn.md b/docs/document/content/concepts/mode/_index.cn.md
index eeda5a4554b..54932fc6408 100644
--- a/docs/document/content/concepts/mode/_index.cn.md
+++ b/docs/document/content/concepts/mode/_index.cn.md
@@ -9,12 +9,7 @@ chapter = true
 
 Apache ShardingSphere 是一套完善的产品，使用场景非常广泛。
 除生产环境的集群部署之外，还为工程师在开发和自动化测试等场景提供相应的运行模式。
-Apache ShardingSphere 提供的 3 种运行模式分别是内存模式、单机模式和集群模式。
-
-## 内存模式
-
-初始化配置或执行 SQL 等造成的元数据结果变更的操作，仅在当前进程中生效。
-适用于集成测试的环境启动，方便开发人员在整合功能测试中集成 Apache ShardingSphere 而无需清理运行痕迹。
+Apache ShardingSphere 提供的 2 种运行模式分别是单机模式和集群模式。
 
 ## 单机模式
 
diff --git a/docs/document/content/concepts/mode/_index.en.md b/docs/document/content/concepts/mode/_index.en.md
index 88f86c4ae5f..815ef8e6d2f 100644
--- a/docs/document/content/concepts/mode/_index.en.md
+++ b/docs/document/content/concepts/mode/_index.en.md
@@ -7,18 +7,13 @@ chapter = true
 
 ## Background
 
-In order to meet the different needs of users for quick test startup, stand-alone running and cluster running, 
-Apache shardingsphere provides various mode such as memory, stand-alone and cluster.
-
-## Memory mode
-
-Suitable for fast integration testing, which is convenient for testing, such as for developers looking to perform fast integration function testing. 
-This is the default mode of Apache ShardingSphere.
+In order to meet the different needs of users for quick test startup, standalone running and cluster running, 
+Apache shardingsphere provides various mode such as standalone and cluster.
 
 ## Standalone mode
 
 Suitable in a standalone environment, through which data sources, rules, and metadata can be persisted. 
-Will create a `.shardingsphere` file in the root directory to store configuration data by default.
+Will use H2 database to store configuration data by default.
 
 ## Cluster mode
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/mode.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/mode.cn.md
index a4a129ec6ff..a0547d48ddf 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/mode.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/mode.cn.md
@@ -14,11 +14,11 @@ chapter = true
 
 可配置属性：
 
-| *名称*      | *数据类型*                      | *说明*                                                                                                                                                                      | *默认值* |
-| ---------- | ------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------- |
-| type       | String                         | 运行模式类型<br />可选配置：Memory、Standalone、Cluster                                                                                                                         | Memory  |
-| repository | PersistRepositoryConfiguration | 持久化仓库配置<br />Memory 类型无需持久化，可以为 null<br />Standalone 类型使用 StandalonePersistRepositoryConfiguration<br />Cluster 类型使用 ClusterPersistRepositoryConfiguration |         |
-| overwrite  | boolean                        | 是否使用本地配置覆盖持久化配置                                                                                                                                                   | false   |
+| *名称*      | *数据类型*                      | *说明*                                                                                                                                  | *默认值*     |
+| ---------- | ------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------- | ----------- |
+| type       | String                         | 运行模式类型<br />可选配置：Standalone、Cluster                                                                                             | Standalone |
+| repository | PersistRepositoryConfiguration | 持久化仓库配置<br />Standalone 类型使用 StandalonePersistRepositoryConfiguration<br />Cluster 类型使用 ClusterPersistRepositoryConfiguration |            |
+| overwrite  | boolean                        | 是否使用本地配置覆盖持久化配置                                                                                                               | false      |
 
 ### Standalone 持久化配置
 
@@ -51,7 +51,7 @@ chapter = true
 
 ## 操作步骤
 
-1. 引入Maven 依赖。
+### 引入Maven 依赖。
 
 ```xml
 <dependency>
@@ -60,6 +60,7 @@ chapter = true
  <version>${latest.release.version}</version>
 </dependency>
 ```
+
 > 注意：请将 `${latest.release.version}` 更改为实际的版本号。
 
 ## 配置示例
@@ -93,5 +94,6 @@ private ModeConfiguration createModeConfiguration() {
 ```
 
 ## 相关参考
+
 - [ZooKeeper 注册中心安装与使用](https://zookeeper.apache.org/doc/r3.7.1/zookeeperStarted.html)
 - 持久化仓库类型的详情，请参见[内置持久化仓库类型列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/metadata-repository/)。
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/mode.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/mode.en.md
index 4ab47860d62..6b06254edab 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/mode.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/mode.en.md
@@ -14,11 +14,11 @@ Class name: org.apache.shardingsphere.infra.config.mode.ModeConfiguration
 
 Attributes:
 
-| *Name*      | *DataType*                      | *Description*                                                                                                                                                                      | *Default Value* |
-| ---------- | ------------------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------- |
-| type       | String                         | Type of mode configuration<br />Values could be: Memory, Standalone, Cluster                                                                                                                         | Memory  |
-| repository | PersistRepositoryConfiguration | Persist repository configuration<br />Memory type does not need persist, could be null<br />Standalone type uses StandalonePersistRepositoryConfiguration<br />Cluster type uses ClusterPersistRepositoryConfiguration |         |
-| overwrite  | boolean                        | Whether overwrite persistent configuration with local configuration                                                                                                                                                   | false   |
+| *Name*     | *DataType*                     | *Description*                                                                                                                                                    | *Default Value* |
+| ---------- | ------------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------- |
+| type       | String                         | Type of mode configuration<br />Values could be: Standalone or Cluster                                                                                           | Standalone      |
+| repository | PersistRepositoryConfiguration | Persist repository configuration<br />Standalone type uses StandalonePersistRepositoryConfiguration<br />Cluster type uses ClusterPersistRepositoryConfiguration |                 |
+| overwrite  | boolean                        | Whether overwrite persistent configuration with local configuration                                                                                              | false           |
 
 ### Standalone Persist Configuration
 
@@ -26,10 +26,10 @@ Class name: org.apache.shardingsphere.mode.repository.standalone.StandalonePersi
 
 Attributes:
 
-| *Name* | *DataType*  | *Description*           |
-| ----- | ---------- | --------------- |
-| type  | String     | Type of persist repository   |
-| props | Properties | Properties of persist repository |
+| *Name* | *DataType* | *Description*                    |
+| ------ | ---------- | -------------------------------- |
+| type   | String     | Type of persist repository       |
+| props  | Properties | Properties of persist repository |
 
 ### Cluster Persist Configuration
 
@@ -37,12 +37,12 @@ Class name: org.apache.shardingsphere.mode.repository.cluster.ClusterPersistRepo
 
 Attributes:
 
-| *Name*       | * Data Type*  | *Description*           |
-| ----------- | ---------- | --------------- |
-| type        | String     | Type of persist repository     |
-| namespace   | String     | Namespace of registry center   |
-| server-lists | String     | Server lists of registry center  |
-| props       | Properties | Properties of persist repository |
+| *Name*       | *Data Type* | *Description*                    |
+| ------------ | ----------- | -------------------------------- |
+| type         | String      | Type of persist repository       |
+| namespace    | String      | Namespace of registry center     |
+| server-lists | String      | Server lists of registry center  |
+| props        | Properties  | Properties of persist repository |
 
 ## Notes
 
@@ -51,7 +51,7 @@ Attributes:
 
 ## Procedure
 
-### 1. Introduce Maven Dependency
+### Introduce Maven Dependency
 
 ```xml
 <dependency>
@@ -60,6 +60,7 @@ Attributes:
  <version>${latest.release.version}</version>
 </dependency>
 ```
+
 > Notice: Please change `${latest.release.version}` to the actual version.
 
 ## Sample
@@ -93,5 +94,6 @@ private ModeConfiguration createModeConfiguration() {
 ```
 
 ## Related References
+
 - [Installation and Usage of ZooKeeper Registry Center](https://zookeeper.apache.org/doc/r3.7.1/zookeeperStarted.html)
 - Please refer to [Builtin Persist Repository List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/metadata-repository/) for more details about type of repository.
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/mode.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/mode.cn.md
index 7a72fdb676b..d00e1abe633 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/mode.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/mode.cn.md
@@ -3,24 +3,14 @@ title = "模式配置"
 weight = 1
 +++
 
-## Background
-
-The default configuration uses standalone mode.
-
 ## Parameters
 
 ```properties
-spring.shardingsphere.mode.type= # Type of  mode configuration. Value could be: Memory, Standalone, Cluster
-spring.shardingsphere.mode.repository= # Persist repository configuration. Memory type does not need persist
+spring.shardingsphere.mode.type= # Type of mode configuration. Value could be: Standalone or Cluster
+spring.shardingsphere.mode.repository= # Persist repository configuration
 spring.shardingsphere.mode.overwrite= # Whether overwrite persistent configuration with local configuration
 ```
 
-### Memory Mode
-
-```properties
-spring.shardingsphere.mode.type=Memory
-```
-
 ### Standalone Mode
 
 ```properties
@@ -40,10 +30,11 @@ spring.shardingsphere.mode.repository.props.server-lists= # Server lists of regi
 spring.shardingsphere.mode.repository.props.<key>= # Properties of persist repository
 spring.shardingsphere.mode.overwrite= # Whether overwrite persistent configuration with local configuration
 ```
+
 ## Notes
 
 1. Cluster mode deployment is recommended for production environments.
-2. The 'ZooKeeper' registry center is recommended for cluster mode deployment.
+1. The 'ZooKeeper' registry center is recommended for cluster mode deployment.
 
 ## Procedure
 1. Import MAVEN dependency.
@@ -57,7 +48,9 @@ spring.shardingsphere.mode.overwrite= # Whether overwrite persistent configurati
 ```
 
 > Note: please change `${latest.release.version}' to the actual version number.
+> 
 ## Sample
+
 ### Standalone Mode
 
 ```properties
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/mode.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/mode.en.md
index b10178c46ad..6635f0c7d25 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/mode.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/mode.en.md
@@ -3,23 +3,17 @@ title = "Mode Configuration"
 weight = 1
 +++
 
-## Background
-
-The default configuration uses memory mode.
 ## Parameters
 
 ```yaml
-mode (?): # Default value is Memory
-  type: # Type of mode configuration. Values could be: Memory, Standalone, Cluster
-  repository (?): # Persist repository configuration. Memory type does not need persist
+mode (?): # Default value is Standalone
+  type: # Type of mode configuration. Values could be: Standalone or Cluster
+  repository (?): # Persist repository configuration
   overwrite: # Whether overwrite persistent configuration with local configuration
 ```
-### Memory Mode
-```yaml
-mode:
-  type: Memory
-```
+
 ### Standalone Mode
+
 ```yaml
 mode:
   type: Standalone
@@ -30,6 +24,7 @@ mode:
       bar_key: bar_value
   overwrite: # Whether overwrite persistent configuration with local configuration
 ```
+
 ### Cluster Mode (recommended)
 
 ```yaml
@@ -43,21 +38,25 @@ mode:
       foo_key: foo_value
       bar_key: bar_value
   overwrite: # Whether overwrite persistent configuration with local configuration
-``` 
+```
+
 ## Notes
 
 1. Cluster mode deployment is recommended for production environment.
-2. The 'ZooKeeper' registry center is recommended for cluster mode deployment.
+1. The 'ZooKeeper' registry center is recommended for cluster mode deployment.
+
 ## Sample
 
 ### Standalone Mode
+
 ```yaml
 mode:
   type: Standalone
   repository:
-    type: File
+    type: H2
   overwrite: false
 ```
+
 ### Cluster Mode (recommended)
 
 ```yaml
@@ -72,6 +71,8 @@ mode:
       timeToLiveSeconds: 60
   overwrite: false
 ```
+
 ## Related References
+
 - [Installation and Usage of ZooKeeper Registry Center](https://zookeeper.apache.org/doc/r3.7.1/zookeeperStarted.html)
 - Please refer to [Builtin Persist Repository List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/metadata-repository/) for more details about the type of repository.
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/mode.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/mode.cn.md
index 240104dfda7..c8e562c4e97 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/mode.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/mode.cn.md
@@ -3,10 +3,6 @@ title = "模式配置"
 weight = 1
 +++
 
-## 背景信息
-
-缺省配置为使用内存模式。
-
 ## 参数解释
 
 ### 单机模式
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/mode.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/mode.en.md
index 7e8ef619255..0585e23ffbe 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/mode.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/mode.en.md
@@ -3,10 +3,6 @@ title = "Mode Configuration"
 weight = 1
 +++
 
-## Background
-
-The default configuration uses memory mode
-
 ## Parameters Explained
 
 ### Standalone Mode
@@ -14,11 +10,11 @@ The default configuration uses memory mode
 Namespace:[http://shardingsphere.apache.org/schema/shardingsphere/mode-repository/standalone/repository-5.1.1.xsd](http://shardingsphere.apache.org/schema/shardingsphere/mode-repository/standalone/repository-5.1.1.xsd)
 <standalone:repository />
 
-| *Name*     | *Type* | *Description*             |
-| --------- | ------ | ----------------- |
-| id        | Property   | Persistent repository Bean name |
-| type      | Property   | Persistent repository Type       |
-| props (?) |Tag  | Properties required for persistent repository |
+| *Name*    | *Type*   | *Description*                                 |
+| --------- | -------- | --------------------------------------------- |
+| id        | Property | Persistent repository Bean name               |
+| type      | Property | Persistent repository Type                    |
+| props (?) |Tag       | Properties required for persistent repository |
 
 ### Cluster Mode(Recommended)
 
@@ -26,13 +22,13 @@ Namespace：[http://shardingsphere.apache.org/schema/shardingsphere/mode-reposit
 
 <cluster:repository />
 
-| *Name*         | *Type* | *Description*             |
-| ------------- | ------ | ----------------- |
-| id            | Property   | Persistent repository Bean name |
-| type          | Property   | Persistent repository Type        |
-| namespace     | Property   | Registry Center namespace |
-| server-lists  | Property   | Registry Center Link|
-| props (?)     | Tag   | Properties required for persistent repository    |
+| *Name*        | *Type*   | *Description*                                 |
+| ------------- | -------- | --------------------------------------------- |
+| id            | Property | Persistent repository Bean name               |
+| type          | Property | Persistent repository Type                    |
+| namespace     | Property | Registry Center namespace                     |
+| server-lists  | Property | Registry Center Link                          |
+| props (?)     | Tag      | Properties required for persistent repository |
 
 ## Tips:
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/mode.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/mode.cn.md
index 83c9c640665..488bf905225 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/mode.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/mode.cn.md
@@ -3,24 +3,17 @@ title = "模式配置"
 weight = 1
 +++
 
-## 背景信息
-
-缺省配置为使用内存模式。
-
 ## 参数解释
 
 ```yaml
-mode (?): # 不配置则默认内存模式
-  type: # 运行模式类型。可选配置：Memory、Standalone、Cluster
-  repository (?): # 久化仓库配置。Memory 类型无需持久化
+mode (?): # 不配置则默认单机模式
+  type: # 运行模式类型。可选配置：Standalone、Cluster
+  repository (?): # 久化仓库配置
   overwrite: # 是否使用本地配置覆盖持久化配置
 ```
-### 内存模式
-```yaml
-mode:
-  type: Memory
-```
+
 ### 单机模式
+
 ```yaml
 mode:
   type: Standalone
@@ -31,6 +24,7 @@ mode:
       bar_key: bar_value
   overwrite: # 是否使用本地配置覆盖持久化配置
 ```
+
 ### 集群模式 (推荐)
 
 ```yaml
@@ -44,15 +38,17 @@ mode:
       foo_key: foo_value
       bar_key: bar_value
   overwrite: # 是否使用本地配置覆盖持久化配置
-``` 
+```
+
 ## 注意事项
 
-### 1. 生产环境建议使用集群模式部署。
-### 2. 集群模式部署推荐使用 `ZooKeeper` 注册中心。
+1. 生产环境建议使用集群模式部署。
+1. 集群模式部署推荐使用 `ZooKeeper` 注册中心。
 
 ## 配置示例
 
 ### 单机模式
+
 ```yaml
 mode:
   type: Standalone
@@ -60,6 +56,7 @@ mode:
     type: File
   overwrite: false
 ```
+
 ### 集群模式 (推荐)
 
 ```yaml
@@ -74,6 +71,8 @@ mode:
       timeToLiveSeconds: 60
   overwrite: false
 ```
+
 ## 相关参考
+
 - [ZooKeeper 注册中心安装与使用](https://zookeeper.apache.org/doc/r3.7.1/zookeeperStarted.html)
 - 持久化仓库类型的详情，请参见[内置持久化仓库类型列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/metadata-repository/)。
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/mode.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/mode.en.md
index 2f494146e01..741d58b2c02 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/mode.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/mode.en.md
@@ -3,24 +3,17 @@ title = "Mode Configuration"
 weight = 1
 +++
 
-## Background
-
-The default configuration uses memory mode.
-
 ## Parameters
 
 ```yaml
-mode (?): # Default value is Memory
-  type: # Type of mode configuration. Values could be: Memory, Standalone, Cluster
-  repository (?): # Persist repository configuration. Memory type does not need persist
+mode (?): # Default value is Standalone
+  type: # Type of mode configuration. Values could be: Standalone, Cluster
+  repository (?): # Persist repository configuration
   overwrite: # Whether overwrite persistent configuration with local configuration
 ```
-### Memory Mode
-```yaml
-mode:
-  type: Memory
-```
+
 ### Standalone Mode
+
 ```yaml
 mode:
   type: Standalone
@@ -31,6 +24,7 @@ mode:
       bar_key: bar_value
   overwrite: # Whether overwrite persistent configuration with local configuration
 ```
+
 ### Cluster Mode (recommended)
 
 ```yaml
@@ -45,13 +39,16 @@ mode:
       bar_key: bar_value
   overwrite: # Whether overwrite persistent configuration with local configuration
 ``` 
+
 ## Notes
 
 1. Cluster mode deployment is recommended for production environment.
-2. The 'ZooKeeper' registry center is recommended for cluster mode deployment.
+1. The 'ZooKeeper' registry center is recommended for cluster mode deployment.
+
 ## Sample
 
 ### Standalone Mode
+
 ```yaml
 mode:
   type: Standalone
@@ -59,6 +56,7 @@ mode:
     type: File
   overwrite: false
 ```
+
 ### Cluster Mode (recommended)
 
 ```yaml
@@ -73,6 +71,8 @@ mode:
       timeToLiveSeconds: 60
   overwrite: false
 ```
+
 ## Related References
+
 - [Installation and Usage of ZooKeeper Registry Center](https://zookeeper.apache.org/doc/r3.7.1/zookeeperStarted.html)
 - Please refer to [Builtin Persist Repository List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/metadata-repository/) for more details about the type of repository.
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.cn.md
index a3992fe0934..fecd29cc2f6 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.cn.md
@@ -81,58 +81,55 @@ helm uninstall shardingsphere-proxy
 |----------------------|---------------------|--------|
 | `governance.enabled` | 用来切换是否使用治理节点的 chart | `true` |
 
-
 ### 治理节点 ZooKeeper 配置项
 
-| 配置项                                               | 描述                                                                        | 值                   |
-|--------------------------------------------------|---------------------------------------------------------------------------|---------------------|
-| `governance.zookeeper.enabled`                   | 用来切换是否使用 ZooKeeper 的 chart                                                | `true`              |
-| `governance.zookeeper.replicaCount`              | ZooKeeper 节点数量                                                            | `1`                 |
-| `governance.zookeeper.persistence.enabled`       | 标识  ZooKeeper 是否使用持久卷申领 (PersistentVolumeClaim) 用来申请持久卷（PersistentVolume） | `false`             |
-| `governance.zookeeper.persistence.storageClass`  | 持久卷（PersistentVolume）的存储类 (StorageClass)                                  | `""`                |
-| `governance.zookeeper.persistence.accessModes`   | 持久卷（PersistentVolume）的访问模式                                                | `["ReadWriteOnce"]` |
-| `governance.zookeeper.persistence.size`          | 持久卷（PersistentVolume） 大小                                                  | `8Gi`               |
-| `governance.zookeeper.resources.limits`          | ZooKeeper 容器的资源限制                                                         | `{}`                |
-| `governance.zookeeper.resources.requests.memory` | ZooKeeper 容器申请的内存                                                         | `256Mi`             |
-| `governance.zookeeper.resources.requests.cpu`    | ZooKeeper 容器申请的 cpu 核数                                                    | `250m`              |
-
+| 配置项                                            | 描述                                                                                  | 值                   |
+| ------------------------------------------------ | ------------------------------------------------------------------------------------- | ------------------- |
+| `governance.zookeeper.enabled`                   | 用来切换是否使用 ZooKeeper 的 chart                                                      | `true`              |
+| `governance.zookeeper.replicaCount`              | ZooKeeper 节点数量                                                                     | `1`                 |
+| `governance.zookeeper.persistence.enabled`       | 标识  ZooKeeper 是否使用持久卷申领 (PersistentVolumeClaim) 用来申请持久卷（PersistentVolume）| `false`             |
+| `governance.zookeeper.persistence.storageClass`  | 持久卷（PersistentVolume）的存储类 (StorageClass)                                        | `""`                |
+| `governance.zookeeper.persistence.accessModes`   | 持久卷（PersistentVolume）的访问模式                                                     | `["ReadWriteOnce"]` |
+| `governance.zookeeper.persistence.size`          | 持久卷（PersistentVolume） 大小                                                         | `8Gi`               |
+| `governance.zookeeper.resources.limits`          | ZooKeeper 容器的资源限制                                                                | `{}`                |
+| `governance.zookeeper.resources.requests.memory` | ZooKeeper 容器申请的内存                                                                | `256Mi`             |
+| `governance.zookeeper.resources.requests.cpu`    | ZooKeeper 容器申请的 cpu 核数                                                           | `250m`              |
 
 ### 计算节点 ShardingSphere-Proxy 配置项
 
-| 配置项                                | 描述                                | 值                             |
-|------------------------------------|-----------------------------------|-------------------------------|
-| `compute.image.repository`         | ShardingSphere-Proxy 的镜像名         | `apache/shardingsphere-proxy` |
-| `compute.image.pullPolicy`         | ShardingSphere-Proxy 镜像拉取策略       | `IfNotPresent`                |
-| `compute.image.tag`                | ShardingSphere-Proxy 镜像标签         | `5.1.2`                       |
-| `compute.imagePullSecrets`         | 拉取私有仓库的凭证                         | `[]`                          |
-| `compute.resources.limits`         | ShardingSphere-Proxy 容器的资源限制      | `{}`                          |
+| 配置项                               | 描述                                   | 值                             |
+| ----------------------------------- | ------------------------------------- | ------------------------------ |
+| `compute.image.repository`          | ShardingSphere-Proxy 的镜像名           | `apache/shardingsphere-proxy` |
+| `compute.image.pullPolicy`          | ShardingSphere-Proxy 镜像拉取策略        | `IfNotPresent`                |
+| `compute.image.tag`                 | ShardingSphere-Proxy 镜像标签           | `5.1.2`                       |
+| `compute.imagePullSecrets`          | 拉取私有仓库的凭证                        | `[]`                          |
+| `compute.resources.limits`          | ShardingSphere-Proxy 容器的资源限制      | `{}`                          |
 | `compute.resources.requests.memory` | ShardingSphere-Proxy 容器申请的内存      | `2Gi`                         |
-| `compute.resources.requests.cpu`   | ShardingSphere-Proxy 容器申请的 cpu 核数 | `200m`                        |
-| `compute.replicas`                 | ShardingSphere-Proxy 节点个数         | `3`                           |
-| `compute.service.type`             | ShardingSphere-Proxy 网络模式         | `ClusterIP`                   |
-| `compute.service.port`             | ShardingSphere-Proxy 暴露端口         | `3307`                        |
-| `compute.mysqlConnector.version`   | MySQL 驱动版本                        | `5.1.49`                      |
-| `compute.startPort`                | ShardingSphere-Proxy 启动端口         | `3307`                        |
+| `compute.resources.requests.cpu`    | ShardingSphere-Proxy 容器申请的 cpu 核数 | `200m`                        |
+| `compute.replicas`                  | ShardingSphere-Proxy 节点个数           | `3`                           |
+| `compute.service.type`              | ShardingSphere-Proxy 网络模式           | `ClusterIP`                   |
+| `compute.service.port`              | ShardingSphere-Proxy 暴露端口           | `3307`                        |
+| `compute.mysqlConnector.version`    | MySQL 驱动版本                          | `5.1.49`                      |
+| `compute.startPort`                 | ShardingSphere-Proxy 启动端口           | `3307`                        |
 
 ### 计算节点 ShardingSphere-Proxy Server 配置 权限配置项
 
-| Name                                               | Description                                                               | Value                      |
-| -------------------------------------------------- |---------------------------------------------------------------------------| -------------------------- |
-| `compute.serverConfig.authority.privilege.type`    | 存储节点数据授权的权限提供者类型，缺省值为 ALL_PERMITTED                                       | `ALL_PRIVILEGES_PERMITTED` |
-| `compute.serverConfig.authority.users[0].password` | 用于登录计算节点的密码                                                               | `root`                     |
-| `compute.serverConfig.authority.users[0].user`     | 用于登录计算节点的用户名，授权主机。格式: <username>@<hostname> hostname 为 % 或空字符串表示不限制授权主机   | `root@%`                   |
-
+| 配置项                                              | 描述                                                                                           | 值                         |
+| -------------------------------------------------- | --------------------------------------------------------------------------------------------- | -------------------------- |
+| `compute.serverConfig.authority.privilege.type`    | 存储节点数据授权的权限提供者类型，缺省值为 ALL_PERMITTED                                              | `ALL_PRIVILEGES_PERMITTED` |
+| `compute.serverConfig.authority.users[0].password` | 用于登录计算节点的密码                                                                            | `root`                     |
+| `compute.serverConfig.authority.users[0].user`     | 用于登录计算节点的用户名，授权主机。格式: <username>@<hostname> hostname 为 % 或空字符串表示不限制授权主机 | `root@%`                   |
 
 ### 计算节点 ShardingSphere-Proxy Server 配置 模式配置项
 
-| Name                                                                      | Description               | Value                                                                 |
-| ------------------------------------------------------------------------- |---------------------------| --------------------------------------------------------------------- |
+| 配置项                                                                     | 描述                                | 值                                                                     |
+| ------------------------------------------------------------------------- | ---------------------------------- | --------------------------------------------------------------------- |
 | `compute.serverConfig.mode.type`                                          | 运行模式类型。 现阶段仅支持 Cluster 模式 | `Cluster`                                                             |
-| `compute.serverConfig.mode.repository.props.namespace`                    | 注册中心命名空间                  | `governance_ds`                                                       |
-| `compute.serverConfig.mode.repository.props.server-lists`                 | 注册中心连接地址                  | `{{ printf "%s-zookeeper.%s:2181" .Release.Name .Release.Namespace }}` |
-| `compute.serverConfig.mode.repository.props.maxRetries`                   | 客户端连接最大重试次数               | `3`                                                                   |
-| `compute.serverConfig.mode.repository.props.operationTimeoutMilliseconds` | 客户端操作超时的毫秒数               | `5000`                                                                |
-| `compute.serverConfig.mode.repository.props.retryIntervalMilliseconds`    | 重试间隔毫秒数                   | `500`                                                                 |
-| `compute.serverConfig.mode.repository.props.timeToLiveSeconds`            | 临时数据失效的秒数                 | `60`                                                                  |
-| `compute.serverConfig.mode.repository.type`                               | 持久化仓库类型。 现阶段仅支持 ZooKeeper | `ZooKeeper`                                                           |
+| `compute.serverConfig.mode.repository.props.namespace`                    | 注册中心命名空间                      | `governance_ds`                                                        |
+| `compute.serverConfig.mode.repository.props.server-lists`                 | 注册中心连接地址                      | `{{ printf "%s-zookeeper.%s:2181" .Release.Name .Release.Namespace }}` |
+| `compute.serverConfig.mode.repository.props.maxRetries`                   | 客户端连接最大重试次数                 | `3`                                                                    |
+| `compute.serverConfig.mode.repository.props.operationTimeoutMilliseconds` | 客户端操作超时的毫秒数                 | `5000`                                                                 |
+| `compute.serverConfig.mode.repository.props.retryIntervalMilliseconds`    | 重试间隔毫秒数                       | `500`                                                                  |
+| `compute.serverConfig.mode.repository.props.timeToLiveSeconds`            | 临时数据失效的秒数                    | `60`                                                                   |
+| `compute.serverConfig.mode.repository.type`                               | 持久化仓库类型。 现阶段仅支持 ZooKeeper | `ZooKeeper`                                                            |
 | `compute.serverConfig.mode.overwrite`                                     | 是否使用本地配置覆盖持久化配置           | `true`                                                                |
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.en.md b/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.en.md
index 42d2cddfc3e..5ad23028d3a 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/startup/helm.en.md
@@ -81,7 +81,6 @@ Delete all release records by default, add `--keep-history` to keep them.
 | -------------------- | ----------------------------------------------------- | ------ |
 | `governance.enabled` | Switch to enable or disable the governance helm chart | `true` |
 
-
 ### Governance-Node ZooKeeper parameters
 
 | Name                                             | Description                                          | Value               |
@@ -96,7 +95,6 @@ Delete all release records by default, add `--keep-history` to keep them.
 | `governance.zookeeper.resources.requests.memory` | The requested memory for the ZooKeeper containers    | `256Mi`             |
 | `governance.zookeeper.resources.requests.cpu`    | The requested cpu for the ZooKeeper containers       | `250m`              |
 
-
 ### Compute-Node ShardingSphere-Proxy parameters
 
 | Name                                | Description                                                  | Value                         |
@@ -122,7 +120,6 @@ Delete all release records by default, add `--keep-history` to keep them.
 | `compute.serverConfig.authority.users[0].password` | Password for compute node.                                                                                                                     | `root`                     |
 | `compute.serverConfig.authority.users[0].user`     | Username,authorized host for compute node. Format: <username>@<hostname> hostname is % or empty string means do not care about authorized host | `root@%`                   |
 
-
 ### Compute-Node ShardingSphere-Proxy ServerConfiguration mode Configuration parameters
 
 | Name                                                                      | Description                                                         | Value                                                                  |
