commit 1c962ad91bddc91d732a489000df3f85038d7f17
Author: Liang Zhang <terrymanu@163.com>
Date:   Mon Nov 1 19:03:04 2021 +0800

    Update scaling document (#13393)
    
    * Update index of scaling
    
    * Update concept of scaling
    
    * Update User Norms of scaling

diff --git a/docs/document/content/features/scaling/_index.cn.md b/docs/document/content/features/scaling/_index.cn.md
index c46e5474a8..2f287b7eff 100644
--- a/docs/document/content/features/scaling/_index.cn.md
+++ b/docs/document/content/features/scaling/_index.cn.md
@@ -7,33 +7,28 @@ chapter = true
 
 ## 背景
 
-Apache ShardingSphere 提供了数据分片的能力，可以将数据分散到不同的数据库节点上，提升整体处理能力。
-但对于使用单数据库运行的系统来说，如何安全简单地将数据迁移至水平分片的数据库上，一直以来都是一个迫切的需求；
-同时，对于已经使用了 Apache ShardingSphere 的用户来说，随着业务规模的快速变化，也可能需要对现有的分片集群进行弹性扩容或缩容。
+对于使用单数据库运行的系统来说，如何安全简单地将数据迁移至水平分片的数据库上，一直以来都是一个迫切的需求；
+对于已经使用了 Apache ShardingSphere 的用户来说，随着业务规模的快速变化，也可能需要对现有的分片集群进行弹性扩容或缩容。
 
-## 简介
-
-ShardingSphere-Scaling 是一个提供给用户的通用数据接入迁移及弹性伸缩的解决方案。
+## 挑战
 
-从 **4.1.0** 开始向用户提供。
+Apache ShardingSphere 在分片算法上提供给用户极大的自由度，但却给弹性伸缩造成了极大的挑战。
+找寻即能支持自定义的分片算法，又能高效地将数据节点进行扩缩容的方式，是弹性伸缩面临的第一个挑战；
 
-![结构总揽](https://shardingsphere.apache.org/document/current/img/scaling/scaling-overview.cn.png)
+同时，在伸缩过程中，不应该对正在运行的业务造成影响。
+尽可能减少伸缩时数据不可用的时间窗口，甚至做到用户完全无感知，是弹性伸缩的另一个挑战；
 
-## 挑战
+最后，弹性伸缩不应该对现有的数据造成影响，如何保证数据的正确性，是弹性伸缩的第三个挑战。
 
-Apache ShardingSphere 在分片策略和算法上提供给用户极大的自由度，但却给弹性伸缩造成了极大的挑战。
-如何找到一种方式，即能支持各类不同用户的分片策略和算法，又能高效地将数据节点进行伸缩，是弹性伸缩面临的第一个挑战；
-
-同时，弹性伸缩过程中，不应该对正在运行的业务造成影响，尽可能减少伸缩时数据不可用的时间窗口，甚至做到用户完全无感知，是弹性伸缩的另一个挑战；
+ShardingSphere-Scaling 是一个提供给用户的通用数据接入迁移及弹性伸缩的解决方案。
 
-最后，弹性伸缩不应该对现有的数据造成影响，如何保证数据的可用性和正确性，是弹性伸缩的第三个挑战。
+![概述](https://shardingsphere.apache.org/document/current/img/scaling/overview.cn.png)
 
 ## 目标
 
-支持各类用户自定义的分片策略，减少用户在数据伸缩及迁移时的重复工作及业务影响，提供一站式的通用弹性伸缩解决方案，是 Apache ShardingSphere 弹性伸缩的主要设计目标。
+支持自定义分片算法，减少数据伸缩及迁移时的业务影响，提供一站式的通用弹性伸缩解决方案，是 Apache ShardingSphere 弹性伸缩的主要设计目标。
 
 ## 状态
 
+ShardingSphere-Scaling 从 **4.1.0** 版本开始向用户提供。
 当前处于 **alpha** 开发阶段。
-
-![路线图](https://shardingsphere.apache.org/document/current/img/scaling/roadmap.cn.png)
diff --git a/docs/document/content/features/scaling/_index.en.md b/docs/document/content/features/scaling/_index.en.md
index b951dd90f7..666068619b 100644
--- a/docs/document/content/features/scaling/_index.en.md
+++ b/docs/document/content/features/scaling/_index.en.md
@@ -6,35 +6,29 @@ chapter = true
 +++
 
 ## Background
- 
-Apache ShardingSphere provides data sharding capability, which can split data to different databases.
 
-For applications that have been running with stand-alone database, there is a problem how to migrate data to sharding data nodes safely and simply;
-For some applications which have used Apache ShardingSphere, the rapid growth of data may also cause a single data node or even the entire data nodes to reach a bottleneck.
-How to expand their data nodes for Apache ShardingSphere cluster also became a problem.
-
-## Introduction
-
-ShardingSphere-Scaling is a common solution for migrating or scaling data in Apache ShardingSphere since **4.1.0**.
-
-![Scaling Overview](https://shardingsphere.apache.org/document/current/img/scaling/scaling-overview.en.png)
+There is a problem which how to migrate data from stand-alone database to sharding data nodes safely and simply;
+For applications which have used Apache ShardingSphere, scale out elastically is a mandatory requirement.
 
 ## Challenges
 
-Apache ShardingSphere provides users with great freedom in sharding strategies and algorithms, but it gives a great challenge to scaling.
-So it's the first challenge that how to find a way can support kinds of sharding strategies and algorithms and scale data nodes efficiently.
+Apache ShardingSphere provides great flexibility in sharding algorithms, but it gives a great challenge to scaling out.
+So it's the first challenge that how to find a way can support kinds of sharding algorithms and scale data nodes efficiently.
 
 What's more, During the scaling process, it should not affect the running applications. 
 So It is another big challenge for scaling to reduce the time window of data unavailability during the scaling as much as possible, or even completely unaware.
 
 Finally, scaling should not affect the existing data. How to ensure the availability and correctness of data is the third challenge of scaling.
 
+ShardingSphere-Scaling is a common solution for migrating or scaling data.
+
+![Overview](https://shardingsphere.apache.org/document/current/img/scaling/overview.en.png)
+
 ## Goal
 
-The main design goal of sharding scaling is providing a common Apache ShardingSphere scaling solution which can support kinds of sharding strategies and reduce the impact as much as possible during scaling.
+The main design goal of ShardingSphere-Scaling is providing common solution which can support kinds of sharding algorithm and reduce the impact as much as possible during scaling.
 
 ## Status
 
-current is in **alpha** development.
-
-![Roadmap](https://shardingsphere.apache.org/document/current/img/scaling/roadmap.en.png)
+ShardingSphere-Scaling since version **4.1.0**.
+Current status is in **alpha** development.
diff --git a/docs/document/content/features/scaling/concept.cn.md b/docs/document/content/features/scaling/concept.cn.md
index fa79e2a1df..d0b202437f 100644
--- a/docs/document/content/features/scaling/concept.cn.md
+++ b/docs/document/content/features/scaling/concept.cn.md
@@ -5,15 +5,11 @@ weight = 1
 
 ## 弹性伸缩作业
 
-指一次将数据由旧分片规则伸缩至新分片规则的完整流程。
-
-## 数据节点
-
-同数据分片中的[数据节点](/cn/features/sharding/concept/sql/)
+指一次将数据由旧规则迁移至新规则的完整流程。
 
 ## 存量数据
 
-在弹性伸缩作业开始前，数据分片中已有的数据。
+在弹性伸缩作业开始前，数据节点中已有的数据。
 
 ## 增量数据
 
diff --git a/docs/document/content/features/scaling/concept.en.md b/docs/document/content/features/scaling/concept.en.md
index b19f206657..a304e16411 100644
--- a/docs/document/content/features/scaling/concept.en.md
+++ b/docs/document/content/features/scaling/concept.en.md
@@ -5,11 +5,7 @@ weight = 1
 
 ## Scaling Job
 
-It refers one complete process of scaling data from old sharding rules to new sharding rule.
-
-## Data Node
-
-Same as the [Data Node](/en/features/sharding/concept/sql/) in sharding/SQL.
+It refers one complete process of scaling data from old rule to new rule.
 
 ## Inventory Data
 
diff --git a/docs/document/content/features/scaling/use-norms.cn.md b/docs/document/content/features/scaling/use-norms.cn.md
index 6eea3a286b..638da8f3d7 100644
--- a/docs/document/content/features/scaling/use-norms.cn.md
+++ b/docs/document/content/features/scaling/use-norms.cn.md
@@ -10,5 +10,6 @@ weight = 2
 
 ## 不支持项
 
-* 不支持无主键表的扩容和缩容，主键必须是单字段。
-* 不支持在当前proxy使用中的数据库集群做迁移，需要准备一个新的数据库集群作为迁移目标库。
+* 无主键表扩缩容；
+* 复合主键表扩缩容；
+* 不支持在当前存储节点之上做迁移，需要准备一个全新的数据库集群作为迁移目标库。
diff --git a/docs/document/content/features/scaling/use-norms.en.md b/docs/document/content/features/scaling/use-norms.en.md
index 70553d33b8..5cc09fd798 100644
--- a/docs/document/content/features/scaling/use-norms.en.md
+++ b/docs/document/content/features/scaling/use-norms.en.md
@@ -5,10 +5,11 @@ weight = 2
 
 ## Supported
 
-* Migrate out data into databases which managed by Apache ShardingSphere;
+* Migrate data outside into databases which managed by Apache ShardingSphere;
 * Scale out data between data nodes of Apache ShardingSphere.
 
 ## Unsupported
 
-* Do not support to scale tables without primary key which must be single column.
-* Do not support scale on database cluster which is in use on proxy, need to prepare a new database cluster for scaling target.
+* Scale table without primary key, primary key can not be composite;
+* Scale table with composite primary key;
+* Do not support scale on in used databases, need to prepare a new database cluster for target.
diff --git a/docs/document/static/img/scaling/overview.cn.png b/docs/document/static/img/scaling/overview.cn.png
new file mode 100644
index 0000000000..091e7deac5
Binary files /dev/null and b/docs/document/static/img/scaling/overview.cn.png differ
diff --git a/docs/document/static/img/scaling/overview.en.png b/docs/document/static/img/scaling/overview.en.png
new file mode 100644
index 0000000000..8afa161c50
Binary files /dev/null and b/docs/document/static/img/scaling/overview.en.png differ
diff --git a/docs/document/static/img/scaling/roadmap.cn.png b/docs/document/static/img/scaling/roadmap.cn.png
deleted file mode 100644
index 830654f173..0000000000
Binary files a/docs/document/static/img/scaling/roadmap.cn.png and /dev/null differ
diff --git a/docs/document/static/img/scaling/roadmap.en.png b/docs/document/static/img/scaling/roadmap.en.png
deleted file mode 100644
index cccac43584..0000000000
Binary files a/docs/document/static/img/scaling/roadmap.en.png and /dev/null differ
diff --git a/docs/document/static/img/scaling/scaling-overview.cn.png b/docs/document/static/img/scaling/scaling-overview.cn.png
deleted file mode 100644
index 5cd41674ce..0000000000
Binary files a/docs/document/static/img/scaling/scaling-overview.cn.png and /dev/null differ
diff --git a/docs/document/static/img/scaling/scaling-overview.en.png b/docs/document/static/img/scaling/scaling-overview.en.png
deleted file mode 100644
index 143f8174ea..0000000000
Binary files a/docs/document/static/img/scaling/scaling-overview.en.png and /dev/null differ
