commit 0d1d05adda505278bdeadaf80ced242aa5e0d4d2
Author: Raigor <raigor.jiang@gmail.com>
Date:   Mon Jul 19 21:19:13 2021 +0800

    add doc for 'drop sharding algorithm' (#11380)

diff --git a/docs/document/content/features/dist-sql/syntax/rdl/rdl-sharding-rule.cn.md b/docs/document/content/features/dist-sql/syntax/rdl/rdl-sharding-rule.cn.md
index 2480f4c519..2d9ba51278 100644
--- a/docs/document/content/features/dist-sql/syntax/rdl/rdl-sharding-rule.cn.md
+++ b/docs/document/content/features/dist-sql/syntax/rdl/rdl-sharding-rule.cn.md
@@ -14,6 +14,8 @@ ALTER SHARDING TABLE RULE shardingTableRuleDefinition [, shardingTableRuleDefini
 
 DROP SHARDING TABLE RULE tableName [, tableName] ...
 
+DROP SHARDING ALGORITHM algorithmName [, algorithmName] ...
+
 shardingTableRuleDefinition:
     tableName(resources [, shardingColumn] [, shardingAlgorithm] [, keyGenerateStrategy])
 
@@ -42,6 +44,8 @@ algorithmProperty:
 - `shardingAlgorithmType` 指定自动分片算法类型，请参考  [自动分片算法](/cn/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/sharding/)
 - `keyGenerateStrategyType` 指定分布式主键生成策略，请参考 [分布式主键](/cn/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/keygen/)
 - 重复的 `tableName` 将无法被创建
+- `shardingAlgorithm` 能够被不同的 `Sharding Table Rule` 复用，因此在执行 `DROP SHARDING TABLE RULE` 时，对应的 `shardingAlgorithm` 不会被移除
+- 如需移除 `shardingAlgorithm`，请执行 `DROP SHARDING ALGORITHM`
 
 ### Sharding Binding Table Rule
 
@@ -88,6 +92,8 @@ GENERATED_KEY(COLUMN=another_id,TYPE(NAME=snowflake,PROPERTIES("worker-id"=123))
 );
 
 DROP SHARDING TABLE RULE t_order, t_order_item;
+
+DROP SHARDING ALGORITHM t_order_hash_mod;
 ```
 
 ### Sharding Binding Table Rule
diff --git a/docs/document/content/features/dist-sql/syntax/rdl/rdl-sharding-rule.en.md b/docs/document/content/features/dist-sql/syntax/rdl/rdl-sharding-rule.en.md
index a66dcd3364..2975fa8564 100644
--- a/docs/document/content/features/dist-sql/syntax/rdl/rdl-sharding-rule.en.md
+++ b/docs/document/content/features/dist-sql/syntax/rdl/rdl-sharding-rule.en.md
@@ -14,6 +14,8 @@ ALTER SHARDING TABLE RULE shardingTableRuleDefinition [, shardingTableRuleDefini
 
 DROP SHARDING TABLE RULE tableName [, tableName] ...
 
+DROP SHARDING ALGORITHM algorithmName [, algorithmName] ...
+
 shardingTableRuleDefinition:
     tableName(resources [, shardingColumn] [, shardingAlgorithm] [, keyGenerateStrategy])
 
@@ -42,6 +44,8 @@ algorithmProperty:
 - `shardingAlgorithmType` specifies the type of automatic sharding algorithm, please refer to [Auto Sharding Algorithm](/en/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/sharding/)
 - `keyGenerateStrategyType` specifies the distributed primary key generation strategy, please refer to [Key Generate Algorithm](/en/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/keygen/)
 - Duplicate `tableName` will not be created
+- `shardingAlgorithm` can be reused by different `Sharding Table Rule`, so when executing `DROP SHARDING TABLE RULE`, the corresponding `shardingAlgorithm` will not be removed
+- To remove `shardingAlgorithm`, please execute `DROP SHARDING ALGORITHM`
 
 ### Sharding Binding Table Rule
 
@@ -88,6 +92,8 @@ GENERATED_KEY(COLUMN=another_id,TYPE(NAME=snowflake,PROPERTIES("worker-id"=123))
 );
 
 DROP SHARDING TABLE RULE t_order, t_order_item;
+
+DROP SHARDING ALGORITHM t_order_hash_mod;
 ```
 
 ### Sharding Binding Table Rule
