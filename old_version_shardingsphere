commit e5462a94eb0f22ce657f3063b1ccca31ee950417
Author: tuichenchuxin <86938616+tuichenchuxin@users.noreply.github.com>
Date:   Fri Mar 11 14:44:02 2022 +0800

    add doc for encrypt config (#15989)

diff --git a/docs/document/content/reference/encrypt/_index.cn.md b/docs/document/content/reference/encrypt/_index.cn.md
index bdb5d61671..df2b768085 100644
--- a/docs/document/content/reference/encrypt/_index.cn.md
+++ b/docs/document/content/reference/encrypt/_index.cn.md
@@ -41,7 +41,7 @@ Apache ShardingSphere 会将用户请求的明文进行加密后存储到底层
 >
 > 为什么要这么做呢？答案在文章后面，即为了让已上线的业务能无缝、透明、安全地进行数据加密迁移。
 
-**查询属性的配置**：当底层数据库表里同时存储了明文数据、密文数据后，该属性开关用于决定是直接查询数据库表里的明文数据进行返回，还是查询密文数据通过 Apache ShardingSphere 解密后返回。
+**查询属性的配置**：当底层数据库表里同时存储了明文数据、密文数据后，该属性开关用于决定是直接查询数据库表里的明文数据进行返回，还是查询密文数据通过 Apache ShardingSphere 解密后返回。该属性开关支持表级别和整个规则级别配置，表级别优先级最高。
 
 ### 加密处理过程
 
diff --git a/docs/document/content/reference/encrypt/_index.en.md b/docs/document/content/reference/encrypt/_index.en.md
index 75a3d8d392..d4496e7884 100644
--- a/docs/document/content/reference/encrypt/_index.en.md
+++ b/docs/document/content/reference/encrypt/_index.en.md
@@ -56,7 +56,7 @@ As long as the user's SQL is written according to this logical column, and the c
 
 **Query Attribute configuration**：When the plaintext data and ciphertext data are stored in the underlying database table at the same time, 
 this attribute switch is used to decide whether to directly query the plaintext data in the database table to return, 
-or to query the ciphertext data and decrypt it through Apache ShardingSphere to return.
+or to query the ciphertext data and decrypt it through Apache ShardingSphere to return. This switch supports table level and whole rule level configuration, and table level has the highest priority. 
 
 ### Encryption Process
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/encrypt.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/encrypt.cn.md
index 81afce205e..5710d5a8d0 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/encrypt.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/encrypt.cn.md
@@ -16,7 +16,7 @@ rules:
           assistedQueryColumn (?):  # 查询辅助列名称
           plainColumn (?): # 原文列名称
           encryptorName: # 加密算法名称
-    queryWithCipherColumn(?): # 该表是否使用加密列进行查询
+      queryWithCipherColumn(?): # 该表是否使用加密列进行查询
     
   # 加密算法配置
   encryptors:
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/encrypt.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/encrypt.en.md
index 0752819296..c9962859f6 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/encrypt.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/encrypt.en.md
@@ -16,7 +16,7 @@ rules:
           assistedQueryColumn (?):  # Assisted query column name
           plainColumn (?): # Plain column name
           encryptorName: # Encrypt algorithm name
-    queryWithCipherColumn(?): # The current table whether query with cipher column for data encrypt. 
+      queryWithCipherColumn(?): # The current table whether query with cipher column for data encrypt. 
     
   # Encrypt algorithm configuration
   encryptors:
