commit ad409b45f45cc68dae4e8cb40023ff3cc0b57c05
Author: 吴伟杰 <wuweijie@apache.org>
Date:   Sat Oct 9 11:37:29 2021 +0800

    Update docs for openGauss Proxy (#12952)

diff --git a/docs/document/content/overview/_index.cn.md b/docs/document/content/overview/_index.cn.md
index a9d946106d..c368cdb5a8 100644
--- a/docs/document/content/overview/_index.cn.md
+++ b/docs/document/content/overview/_index.cn.md
@@ -73,7 +73,7 @@ Apache ShardingSphere 由 JDBC、Proxy 和 Sidecar（规划中）这 3 款既能
 [![Docker Pulls](https://img.shields.io/docker/pulls/apache/sharding-proxy.svg)](https://store.docker.com/community/images/apache/sharding-proxy)
 
 定位为透明化的数据库代理端，提供封装了数据库二进制协议的服务端版本，用于完成对异构语言的支持。
-目前提供 MySQL 和 PostgreSQL 版本，它可以使用任何兼容 MySQL/PostgreSQL 协议的访问客户端（如：MySQL Command Client, MySQL Workbench, Navicat 等）操作数据，对 DBA 更加友好。
+目前提供 MySQL 和 PostgreSQL（兼容 openGauss 等基于 PostgreSQL 的数据库）版本，它可以使用任何兼容 MySQL/PostgreSQL 协议的访问客户端（如：MySQL Command Client, MySQL Workbench, Navicat 等）操作数据，对 DBA 更加友好。
 
 * 向应用程序完全透明，可直接当做 MySQL/PostgreSQL 使用。
 * 适用于任何兼容 MySQL/PostgreSQL 协议的的客户端。
diff --git a/docs/document/content/overview/_index.en.md b/docs/document/content/overview/_index.en.md
index 3c76ec491a..0a8163e57d 100644
--- a/docs/document/content/overview/_index.en.md
+++ b/docs/document/content/overview/_index.en.md
@@ -77,7 +77,7 @@ It can be considered as an enhanced JDBC driver, which is fully compatible with
 [![Docker Pulls](https://img.shields.io/docker/pulls/apache/sharding-proxy.svg)](https://store.docker.com/community/images/apache/sharding-proxy)
 
 ShardingSphere-Proxy defines itself as a transparent database proxy, providing a database server that encapsulates database binary protocol to support heterogeneous languages. 
-Friendlier to DBAs, the MySQL version now provided can use any kind of terminal (such as MySQL Command Client, MySQL Workbench, etc.) that is compatible of MySQL protocol to operate data.
+Currently, MySQL and PostgreSQL (compatible with PostgreSQL-based databases, such as openGauss) versions are provided. It can use any kind of terminal (such as MySQL Command Client, MySQL Workbench, etc.) that is compatible of MySQL or PostgreSQL protocol to operate data, which is friendlier to DBAs
 
 * Transparent towards applications, it can be used directly as MySQL and PostgreSQL servers.
 * Applicable to any kind of terminal that is compatible with MySQL and PostgreSQL protocol.
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/_index.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/_index.cn.md
index a5d4ee6f91..4b9c2cf45e 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/_index.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/_index.cn.md
@@ -9,7 +9,7 @@ chapter = true
 
 ShardingSphere-Proxy 是 Apache ShardingSphere 的第二个产品。
 它定位为透明化的数据库代理端，提供封装了数据库二进制协议的服务端版本，用于完成对异构语言的支持。
-目前提供 MySQL 和 PostgreSQL 版本，它可以使用任何兼容 MySQL/PostgreSQL 协议的访问客户端（如：MySQL Command Client, MySQL Workbench, Navicat 等）操作数据，对 DBA 更加友好。
+目前提供 MySQL 和 PostgreSQL（兼容 openGauss 等基于 PostgreSQL 的数据库）版本，它可以使用任何兼容 MySQL/PostgreSQL 协议的访问客户端（如：MySQL Command Client, MySQL Workbench, Navicat 等）操作数据，对 DBA 更加友好。
 
 * 向应用程序完全透明，可直接当做 MySQL/PostgreSQL 使用。
 * 适用于任何兼容 MySQL/PostgreSQL 协议的的客户端。
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/_index.en.md b/docs/document/content/user-manual/shardingsphere-proxy/_index.en.md
index e185d8ef2c..ee1ff13758 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/_index.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/_index.en.md
@@ -9,6 +9,7 @@ chapter = true
 
 ShardingSphere-Proxy is the second product of Apache ShardingSphere. 
 It defines itself as a transparent database proxy, providing a database server that encapsulates database binary protocol to support heterogeneous languages.
+Currently, MySQL and PostgreSQL (compatible with PostgreSQL-based databases, such as openGauss) versions are provided. It can use any kind of terminal (such as MySQL Command Client, MySQL Workbench, etc.) that is compatible of MySQL or PostgreSQL protocol to operate data, which is friendlier to DBAs
 
 * Totally transparent to applications, it can be used directly as MySQL/PostgreSQL.
 * Applicable to any kind of client end that is compatible with MySQL/PostgreSQL protocol.
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/configuration/data-source.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/configuration/data-source.cn.md
index 02fedc8e4f..ca21941117 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/configuration/data-source.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/configuration/data-source.cn.md
@@ -10,7 +10,7 @@ schemaName: # 逻辑数据源名称
 
 dataSources: # 数据源配置，可配置多个 <data-source-name>
   <data-source-name>: # 与 ShardingSphere-JDBC 配置不同，无需配置数据库连接池
-    url: #数据库 URL 连接
+    url: # 数据库 URL 连接，支持 jdbc:mysql、jdbc:postgresql、jdbc:opengauss 前缀
     username: # 数据库用户名
     password: # 数据库密码
     connectionTimeoutMilliseconds: # 连接超时毫秒数
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/configuration/data-source.en.md b/docs/document/content/user-manual/shardingsphere-proxy/configuration/data-source.en.md
index d53aba1157..b23b9e22b9 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/configuration/data-source.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/configuration/data-source.en.md
@@ -10,7 +10,7 @@ schemaName: # Logic schema name
 
 dataSources: # Data sources configuration, multiple <data-source-name> available
   <data-source-name>: # Different from ShardingSphere-JDBC configuration, it does not need to be configured with database connection pool
-    url: # Database URL
+    url: # Database URL, starts with jdbc:mysql, jdbc:postgresql, jdbc:opengauss
     username: # Database username
     password: # Database password
     connectionTimeoutMilliseconds: #Connection timeout milliseconds
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/docker.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/docker.cn.md
index 3e0a9ee5e6..6f7aeb6e43 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/docker.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/docker.cn.md
@@ -70,9 +70,9 @@ psql -U ${your_user_name} -h ${your_host} -p 13308
 
 回答：请确保 `/${your_work_dir}/conf/config-xxx.yaml` 配置文件中指定的 PostgreSQL 数据库的 IP 可以被 Docker 容器内部访问到。
 
-问题3：如何使用后端数据库为 MySQL 的 ShardingSphere-Proxy？
+问题3：如何使用后端数据库为 MySQL/openGauss 的 ShardingSphere-Proxy？
 
-回答：将 `mysql-connector.jar` 所在目录挂载到 `/opt/shardingsphere-proxy/ext-lib`。
+回答：将 `mysql-connector.jar` 或 `opengauss-jdbc.jar` 所在目录挂载到 `/opt/shardingsphere-proxy/ext-lib`。
 
 问题4：如何使用自定义分片算法？
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/docker.en.md b/docs/document/content/user-manual/shardingsphere-proxy/docker.en.md
index 1d59e4caed..7492c5e0c9 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/docker.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/docker.en.md
@@ -70,9 +70,9 @@ Question 2: there is error report of being unable to connect to the database.
 
 Answer: please make sure the designated PostgreSQL's IP in `/${your_work_dir}/conf/config-xxx.yaml` configuration is accessible to Docker container.
 
-Question 3：How to start ShardingSphere-Proxy whose backend databases are MySQL.
+Question 3：How to start ShardingSphere-Proxy whose backend databases are MySQL or openGauss.
 
-Answer：Volume the directory where `mysql-connector.jar` stores to `/opt/shardingsphere-proxy/ext-lib`.
+Answer：Mount the directory where `mysql-connector.jar` or `opengauss-jdbc.jar` stores to `/opt/shardingsphere-proxy/ext-lib`.
 
 Question 4：How to import user-defined sharding strategy？
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/usage/startup.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/usage/startup.cn.md
index 2ba76d47d8..b98594a8b2 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/usage/startup.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/usage/startup.cn.md
@@ -14,10 +14,10 @@ weight = 1
 
 1. 使用任何 PostgreSQL 的客户端连接。如: `psql -U root -h 127.0.0.1 -p 3307`
 
-## 使用 MySQL
+## 使用 MySQL/openGauss
 
-1. 将 MySQL 的 JDBC 驱动程序复制至目录 `ext-lib/`。
-1. 使用任何 MySQL 的客户端连接。如: `mysql -u root -h 127.0.0.1 -P 3307`
+1. 将 MySQL/openGauss 的 JDBC 驱动程序复制至目录 `ext-lib/`。
+1. 使用任何 MySQL/openGauss 的客户端连接。如: `mysql -u root -h 127.0.0.1 -P 3307` 或 `gsql`。
 
 ## 使用自定义分片算法
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/usage/startup.en.md b/docs/document/content/user-manual/shardingsphere-proxy/usage/startup.en.md
index 3df9190b9a..c2626764b1 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/usage/startup.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/usage/startup.en.md
@@ -14,10 +14,10 @@ weight = 1
 
 1. Use any PostgreSQL client end to connect, such as `psql -U root -h 127.0.0.1 -p 3307`.
 
-## Using MySQL
+## Using MySQL/openGauss
 
-1. Copy MySQL's JDBC driver to folder `ext-lib/`.
-1. Use any MySQL client end to connect, such as `mysql -u root -h 127.0.0.1 -P 3307`.
+1. Copy MySQL/openGauss's JDBC driver to folder `ext-lib/`.
+1. Use any MySQL/openGauss client end to connect, such as `mysql -u root -h 127.0.0.1 -P 3307` or `gsql`.
 
 ## Using user-defined sharding algorithm
 
