commit 6e3458eda6daab54143ad794c3b1ad04f7ed95b0
Author: Liang Zhang <terrymanu@163.com>
Date:   Sun May 2 00:11:18 2021 +0800

    Rename read-write to readwrite (#10236)
    
    * Update doc
    
    * Rename read-write to readwrite

diff --git a/docs/blog/content/material/engine.en.md b/docs/blog/content/material/engine.en.md
index defbd5ba9f..e1190b69a7 100644
--- a/docs/blog/content/material/engine.en.md
+++ b/docs/blog/content/material/engine.en.md
@@ -109,7 +109,7 @@ In order to avoid deadlock, ShardingSphere synchronizes the database connection.
 
 In view of this problem, we also carried out the following two aspects of Optimization:          
 
-1\.    Avoid locking and only need to obtain one database connection at a time. Because only one connection needs to be obtained at a time, there is no need to lock two requests waiting for each other. For most OLTP operations, the fragmentation key is used to route to the only data node. At this time, there is no need to worry about cross deadlock and lock addition, so as to reduce the impact on concurrent efficiency. In addition to routing to a single fragment, read-write separation also belongs to this category.  
+1\.    Avoid locking and only need to obtain one database connection at a time. Because only one connection needs to be obtained at a time, there is no need to lock two requests waiting for each other. For most OLTP operations, the fragmentation key is used to route to the only data node. At this time, there is no need to worry about cross deadlock and lock addition, so as to reduce the impact on concurrent efficiency. In addition to routing to a single fragment, readwrite-splitting also belongs to this category.
 
 2\.    Lock linked resources only for memory limited mode. When using the connection restriction mode, the database connection resources are released after all query result sets are loaded into memory, so it is not necessary to consider deadlock waiting and locking processing. 
            
diff --git a/docs/document/content/dev-manual/read-write-splitting.cn.md b/docs/document/content/dev-manual/readwrite-splitting.cn.md
similarity index 100%
rename from docs/document/content/dev-manual/read-write-splitting.cn.md
rename to docs/document/content/dev-manual/readwrite-splitting.cn.md
diff --git a/docs/document/content/dev-manual/read-write-splitting.en.md b/docs/document/content/dev-manual/readwrite-splitting.en.md
similarity index 96%
rename from docs/document/content/dev-manual/read-write-splitting.en.md
rename to docs/document/content/dev-manual/readwrite-splitting.en.md
index 78cd8c8406..9db3a52c7c 100644
--- a/docs/document/content/dev-manual/read-write-splitting.en.md
+++ b/docs/document/content/dev-manual/readwrite-splitting.en.md
@@ -1,6 +1,6 @@
 +++
 pre = "<b>5.5. </b>"
-title = "Read write splitting"
+title = "Readwrite-splitting"
 weight = 5
 chapter = true
 +++
diff --git a/docs/document/content/features/governance/management/registry-center.cn.md b/docs/document/content/features/governance/management/registry-center.cn.md
index f53e03c683..0723d4c9df 100644
--- a/docs/document/content/features/governance/management/registry-center.cn.md
+++ b/docs/document/content/features/governance/management/registry-center.cn.md
@@ -104,7 +104,7 @@ rules:
 - !SHARDING
   xxx
   
-- !READ_WRITE_SPLITTING
+- !READWRITE_SPLITTING
   xxx
   
 - !ENCRYPT
diff --git a/docs/document/content/features/governance/management/registry-center.en.md b/docs/document/content/features/governance/management/registry-center.en.md
index 00dbc92c45..169bbd63ac 100644
--- a/docs/document/content/features/governance/management/registry-center.en.md
+++ b/docs/document/content/features/governance/management/registry-center.en.md
@@ -97,14 +97,14 @@ dataSources:
 
 ### /metadata/${schemeName}/rule
 
-Rule configurations, including sharding, read write splitting, data encryption, shadow DB configurations.
+Rule configurations, including sharding, readwrite-splitting, data encryption, shadow DB configurations.
 
 ```yaml
 rules:
 - !SHARDING
   xxx
   
-- !READ_WRITE_SPLITTING
+- !READWRITE_SPLITTING
   xxx
   
 - !ENCRYPT
diff --git a/docs/document/content/features/read-write-splitting/_index.cn.md b/docs/document/content/features/readwrite-splitting/_index.cn.md
similarity index 93%
rename from docs/document/content/features/read-write-splitting/_index.cn.md
rename to docs/document/content/features/readwrite-splitting/_index.cn.md
index 5265daf095..fc315dcbb0 100644
--- a/docs/document/content/features/read-write-splitting/_index.cn.md
+++ b/docs/document/content/features/readwrite-splitting/_index.cn.md
@@ -15,7 +15,7 @@ chapter = true
 
 与将数据根据分片键打散至各个数据节点的水平分片不同，读写分离则是根据SQL语义的分析，将读操作和写操作分别路由至主库与从库。
 
-![读写分离](https://shardingsphere.apache.org/document/current/img/read-write-splitting/read-write-splitting-standalone.png)
+![读写分离](https://shardingsphere.apache.org/document/current/img/readwrite-splitting/readwrite-splitting-standalone.png)
 
 读写分离的数据节点中的数据内容是一致的，而水平分片的每个数据节点的数据内容却并不相同。将水平分片和读写分离联合使用，能够更加有效的提升系统性能。
 
@@ -26,7 +26,7 @@ chapter = true
 并且，读写分离也带来了与数据分片同样的问题，它同样会使得应用开发和运维人员对数据库的操作和运维变得更加复杂。
 下图展现了将分库分表与读写分离一同使用时，应用程序与数据库集群之间的复杂拓扑关系。
 
-![数据分片 + 读写分离](https://shardingsphere.apache.org/document/current/img/read-write-splitting/sharding-and-read-write-splitting.png)
+![数据分片 + 读写分离](https://shardingsphere.apache.org/document/current/img/readwrite-splitting/sharding-and-readwrite-splitting.png)
 
 ## 目标
 
diff --git a/docs/document/content/features/read-write-splitting/_index.en.md b/docs/document/content/features/readwrite-splitting/_index.en.md
similarity index 88%
rename from docs/document/content/features/read-write-splitting/_index.en.md
rename to docs/document/content/features/readwrite-splitting/_index.en.md
index 24a57b7ad2..b44f415f94 100644
--- a/docs/document/content/features/read-write-splitting/_index.en.md
+++ b/docs/document/content/features/readwrite-splitting/_index.en.md
@@ -13,7 +13,7 @@ One primary database with multiple replica databases can further enhance system
 
 Different from the horizontal sharding that separates data to all nodes according to sharding keys, replica query routes read operations and write operations separately to the primary database and the replica database according to SQL meaning analysis.
 
-![Read write splitting](https://shardingsphere.apache.org/document/current/img/read-write-splitting/read-write-splitting-standalone.png)
+![Readwrite-splitting](https://shardingsphere.apache.org/document/current/img/readwrite-splitting/readwrite-splitting-standalone.png)
 
 Data in replica query split nodes is consistent, whereas that in horizontal shards is not. The combined use of horizontal sharding and replica query will effectively enhance the system performance.
 
@@ -21,7 +21,7 @@ Data in replica query split nodes is consistent, whereas that in horizontal shar
 
 Though replica query can enhance system throughput and availability, it also brings inconsistent data, including that between multiple primary databases and between primary databases and replica databases. What's more, it also brings the same problem as data sharding, complicating app developer and operator's maintenance and operation. The following picture has shown the complex topological relations between applications and database groups when sharding table and database used together with replica query.
 
-![Sharding + Read write splitting](https://shardingsphere.apache.org/document/current/img/read-write-splitting/sharding-and-read-write-splitting.png)
+![Sharding + Readwrite-splitting](https://shardingsphere.apache.org/document/current/img/readwrite-splitting/sharding-and-readwrite-splitting.png)
 
 ## Goal
 
diff --git a/docs/document/content/features/read-write-splitting/concept.cn.md b/docs/document/content/features/readwrite-splitting/concept.cn.md
similarity index 100%
rename from docs/document/content/features/read-write-splitting/concept.cn.md
rename to docs/document/content/features/readwrite-splitting/concept.cn.md
diff --git a/docs/document/content/features/read-write-splitting/concept.en.md b/docs/document/content/features/readwrite-splitting/concept.en.md
similarity index 100%
rename from docs/document/content/features/read-write-splitting/concept.en.md
rename to docs/document/content/features/readwrite-splitting/concept.en.md
diff --git a/docs/document/content/features/read-write-splitting/use-norms.cn.md b/docs/document/content/features/readwrite-splitting/use-norms.cn.md
similarity index 100%
rename from docs/document/content/features/read-write-splitting/use-norms.cn.md
rename to docs/document/content/features/readwrite-splitting/use-norms.cn.md
diff --git a/docs/document/content/features/read-write-splitting/use-norms.en.md b/docs/document/content/features/readwrite-splitting/use-norms.en.md
similarity index 100%
rename from docs/document/content/features/read-write-splitting/use-norms.en.md
rename to docs/document/content/features/readwrite-splitting/use-norms.en.md
diff --git a/docs/document/content/features/test-engine/performance-test-sysbench.cn.md b/docs/document/content/features/test-engine/performance-test-sysbench.cn.md
index 7a0cc3163b..a396d348a6 100644
--- a/docs/document/content/features/test-engine/performance-test-sysbench.cn.md
+++ b/docs/document/content/features/test-engine/performance-test-sysbench.cn.md
@@ -152,7 +152,7 @@ sysbench oltp_read_only --mysql-host=${host-proxy} --mysql-port=3307 --mysql-use
 sysbench oltp_read_only        --mysql-host=${host-proxy} --mysql-port=3307 --mysql-user=root --mysql-password='root' --mysql-db=sbtest --tables=10 --table-size=1000000 --report-interval=30  --time=180 --threads=256 --max-requests=0 --percentile=99  --mysql-ignore-errors="all" --range_selects=off --rand-type=uniform --auto_inc=off run
 sysbench oltp_read_only        --mysql-host=${host-proxy} --mysql-port=3307 --mysql-user=root --mysql-password='root' --mysql-db=sbtest --tables=10 --table-size=1000000 --report-interval=30  --time=180 --threads=256 --max-requests=0 --percentile=99  --mysql-ignore-errors="all" --range_selects=off --rand-type=uniform --auto_inc=off run | tee oltp_read_only.master.txt
 sysbench oltp_point_select     --mysql-host=${host-proxy} --mysql-port=3307 --mysql-user=root --mysql-password='root' --mysql-db=sbtest --tables=10 --table-size=1000000 --report-interval=30  --time=180 --threads=256 --max-requests=0 --percentile=99  --mysql-ignore-errors="all" --range_selects=off --rand-type=uniform --auto_inc=off run | tee oltp_point_select.master.txt
-sysbench oltp_read_write       --mysql-host=${host-proxy} --mysql-port=3307 --mysql-user=root --mysql-password='root' --mysql-db=sbtest --tables=10 --table-size=1000000 --report-interval=30  --time=180 --threads=256 --max-requests=0 --percentile=99  --mysql-ignore-errors="all" --range_selects=off --rand-type=uniform --auto_inc=off run | tee oltp_read_write.master.txt
+sysbench oltp_readwrite        --mysql-host=${host-proxy} --mysql-port=3307 --mysql-user=root --mysql-password='root' --mysql-db=sbtest --tables=10 --table-size=1000000 --report-interval=30  --time=180 --threads=256 --max-requests=0 --percentile=99  --mysql-ignore-errors="all" --range_selects=off --rand-type=uniform --auto_inc=off run | tee oltp_readwrite.master.txt
 sysbench oltp_write_only       --mysql-host=${host-proxy} --mysql-port=3307 --mysql-user=root --mysql-password='root' --mysql-db=sbtest --tables=10 --table-size=1000000 --report-interval=30  --time=180 --threads=256 --max-requests=0 --percentile=99  --mysql-ignore-errors="all" --range_selects=off --rand-type=uniform --auto_inc=off run | tee oltp_write_only.master.txt
 sysbench oltp_update_index     --mysql-host=${host-proxy} --mysql-port=3307 --mysql-user=root --mysql-password='root' --mysql-db=sbtest --tables=10 --table-size=1000000 --report-interval=30  --time=180 --threads=256 --max-requests=0 --percentile=99  --mysql-ignore-errors="all" --range_selects=off --rand-type=uniform --auto_inc=off run | tee oltp_update_index.master.txt
 sysbench oltp_update_non_index --mysql-host=${host-proxy} --mysql-port=3307 --mysql-user=root --mysql-password='root' --mysql-db=sbtest --tables=10 --table-size=1000000 --report-interval=30  --time=180 --threads=256 --max-requests=0 --percentile=99  --mysql-ignore-errors="all" --range_selects=off --rand-type=uniform --auto_inc=off run | tee oltp_update_non_index.master.txt
@@ -238,7 +238,7 @@ Execute Statement: ID = 5
 Execute Statement: ID = 1
 ```
 
-#### oltp_read_write
+#### oltp_readwrite
 
 ```
 Prepare Statement (ID = 1): 'COMMIT'
@@ -1502,7 +1502,7 @@ if __name__ == '__main__':
     generate_graph(path, 'oltp_point_select')
     generate_graph(path, 'oltp_read_only')
     generate_graph(path, 'oltp_write_only')
-    generate_graph(path, 'oltp_read_write')
+    generate_graph(path, 'oltp_readwrite')
     generate_graph(path, 'oltp_update_index')
     generate_graph(path, 'oltp_update_non_index')
     generate_graph(path, 'oltp_delete')
diff --git a/docs/document/content/features/test-engine/performance-test.cn.md b/docs/document/content/features/test-engine/performance-test.cn.md
index 86ab3d8982..951c2a6c56 100644
--- a/docs/document/content/features/test-engine/performance-test.cn.md
+++ b/docs/document/content/features/test-engine/performance-test.cn.md
@@ -146,7 +146,7 @@ dataSources:
     maxLifetimeMilliseconds: 1800000
     maxPoolSize: 200
 rules:
-- !READ_WRITE_SPLITTING
+- !READWRITE_SPLITTING
   dataSources:
     pr_ds:
       name: pr_ds
@@ -260,7 +260,7 @@ rules:
       type: SNOWFLAKE
       props:
           worker-id: 123
-- !READ_WRITE_SPLITTING
+- !READWRITE_SPLITTING
   dataSources:
     pr_ds_0:
       writeDataSourceName: primary_ds_0
diff --git a/docs/document/content/features/test-engine/performance-test.en.md b/docs/document/content/features/test-engine/performance-test.en.md
index e99d80d83c..f5c904b045 100644
--- a/docs/document/content/features/test-engine/performance-test.en.md
+++ b/docs/document/content/features/test-engine/performance-test.en.md
@@ -124,7 +124,7 @@ rules:
         worker-id: 123
 ```
 
-#### Read Write Splitting Configuration
+#### Readwrite-splitting Configuration
 
 ```yaml
 schemaName: sharding_db
@@ -147,7 +147,7 @@ dataSources:
     maxLifetimeMilliseconds: 1800000
     maxPoolSize: 200
 rules:
-- !READ_WRITE_SPLITTING
+- !READWRITE_SPLITTING
   dataSources:
     pr_ds:
       name: pr_ds
@@ -261,7 +261,7 @@ rules:
       type: SNOWFLAKE
       props:
           worker-id: 123
-- !READ_WRITE_SPLITTING
+- !READWRITE_SPLITTING
   dataSources:
     pr_ds_0:
       writeyDataSourceName: primary_ds_0
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/change-history.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/change-history.en.md
index 7b8902ed4b..d952948f84 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/change-history.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/change-history.en.md
@@ -35,7 +35,7 @@ Please refer to [Built-in Load Balance Algorithm List](/docs/document/content/us
 
 ## ShardingSphere-4.x
 
-### Read-Write Split
+### Readwrite-splitting
 
 #### MasterSlaveDataSourceFactory
 
@@ -47,12 +47,12 @@ Please refer to [Built-in Load Balance Algorithm List](/docs/document/content/us
 
 #### MasterSlaveRuleConfiguration
 
-| *Name*                   | *DataType*                      | *Explanation*                     |
-| :----------------------- | :------------------------------ | :-------------------------------- |
-| name                     | String                          | Read-write split data source name |
-| masterDataSourceName     | String                          | Master database source name       |
-| slaveDataSourceNames     | Collection<String>              | Slave database source name list   |
-| loadBalanceAlgorithm (?) | MasterSlaveLoadBalanceAlgorithm | Slave database load balance       |
+| *Name*                   | *DataType*                      | *Explanation*                        |
+| :----------------------- | :------------------------------ | :----------------------------------- |
+| name                     | String                          | Readwrite-splitting data source name |
+| masterDataSourceName     | String                          | Master database source name          |
+| slaveDataSourceNames     | Collection<String>              | Slave database source name list      |
+| loadBalanceAlgorithm (?) | MasterSlaveLoadBalanceAlgorithm | Slave database load balance          |
 
 #### Properties
 
@@ -67,7 +67,7 @@ Property configuration items, can be of the following properties.
 
 ## ShardingSphere-3.x
 
-### Read-Write Split
+### Readwrite-splitting
 
 #### MasterSlaveDataSourceFactory
 
@@ -104,7 +104,7 @@ Enumeration of properties.
 
 ## ShardingSphere-2.x
 
-### Read-Write Split
+### Readwrite-splitting
 
 #### concept
 
@@ -112,8 +112,8 @@ In order to relieve the pressure on the database, the write and read operations
 
 #### Support item
 
-1. Provides a read-write separation configuration with one master and multiple slaves, which can be used independently or with sub-databases and sub-meters.
-2. Independent use of read-write separation to support SQL transparent transmission.
+1. Provides a readwrite-splitting configuration with one master and multiple slaves, which can be used independently or with sub-databases and sub-meters.
+2. Independent use of readwrite-splitting to support SQL transparent transmission.
 3. In the same thread and the same database connection, if there is a write operation, subsequent read operations will be read from the main library to ensure data consistency.
 4. Spring namespace.
 5. Hint-based mandatory main library routing.
@@ -126,16 +126,16 @@ In order to relieve the pressure on the database, the write and read operations
 
 #### Code development example
 
-##### only read-write split
+##### only readwrite-splitting
 
 ```java
-// Constructing a read-write separation data source, the read-write separation data source implements the DataSource interface, which can be directly processed as a data source. masterDataSource, slaveDataSource0, slaveDataSource1, etc. are real data sources configured using connection pools such as DBCP
+// Constructing a readwrite-splitting data source, the readwrite-splitting data source implements the DataSource interface, which can be directly processed as a data source. masterDataSource, slaveDataSource0, slaveDataSource1, etc. are real data sources configured using connection pools such as DBCP
 Map<String, DataSource> dataSourceMap = new HashMap<>();
 dataSourceMap.put("masterDataSource", masterDataSource);
 dataSourceMap.put("slaveDataSource0", slaveDataSource0);
 dataSourceMap.put("slaveDataSource1", slaveDataSource1);
 
-// Constructing read-write separation configuration
+// Constructing readwrite-splitting configuration
 MasterSlaveRuleConfiguration masterSlaveRuleConfig = new MasterSlaveRuleConfiguration();
 masterSlaveRuleConfig.setName("ms_ds");
 masterSlaveRuleConfig.setMasterDataSourceName("masterDataSource");
@@ -145,10 +145,10 @@ masterSlaveRuleConfig.getSlaveDataSourceNames().add("slaveDataSource1");
 DataSource dataSource = MasterSlaveDataSourceFactory.createDataSource(dataSourceMap, masterSlaveRuleConfig);
 ```
 
-##### sharding table and database + read-write split
+##### sharding table and database + readwrite-splitting
 
 ```java
-// Constructing a read-write separation data source, the read-write separation data source implements the DataSource interface, which can be directly processed as a data source. masterDataSource, slaveDataSource0, slaveDataSource1, etc. are real data sources configured using connection pools such as DBCP
+// Constructing a readwrite-splitting data source, the readwrite-splitting data source implements the DataSource interface, which can be directly processed as a data source. masterDataSource, slaveDataSource0, slaveDataSource1, etc. are real data sources configured using connection pools such as DBCP
 Map<String, DataSource> dataSourceMap = new HashMap<>();
 dataSourceMap.put("masterDataSource0", masterDataSource0);
 dataSourceMap.put("slaveDataSource00", slaveDataSource00);
@@ -158,7 +158,7 @@ dataSourceMap.put("masterDataSource1", masterDataSource1);
 dataSourceMap.put("slaveDataSource10", slaveDataSource10);
 dataSourceMap.put("slaveDataSource11", slaveDataSource11);
 
-// Constructing read-write separation configuration
+// Constructing readwrite-splitting configuration
 MasterSlaveRuleConfiguration masterSlaveRuleConfig0 = new MasterSlaveRuleConfiguration();
 masterSlaveRuleConfig0.setName("ds_0");
 masterSlaveRuleConfig0.setMasterDataSourceName("masterDataSource0");
@@ -181,7 +181,7 @@ DataSource dataSource = ShardingDataSourceFactory.createDataSource(dataSourceMap
 
 ## ShardingSphere-1.x
 
-### Read-Write Split
+### Readwrite-splitting
 
 #### concept
 
@@ -189,7 +189,7 @@ In order to relieve the pressure on the database, the write and read operations
 
 #### Support item
 
-1. Provides a read-write separation configuration with one master and multiple slaves, which can be used independently or with sub-databases and sub-meters.
+1. Provides a readwrite-splitting configuration with one master and multiple slaves, which can be used independently or with sub-databases and sub-meters.
 2. In the same thread and the same database connection, if there is a write operation, subsequent read operations will be read from the main library to ensure data consistency.
 3. Spring namespace.
 4. Hint-based mandatory main library routing.
@@ -203,7 +203,7 @@ In order to relieve the pressure on the database, the write and read operations
 #### Code development example
 
 ```java
-// Constructing a read-write separation data source, the read-write separation data source implements the DataSource interface, which can be directly processed as a data source. masterDataSource, slaveDataSource0, slaveDataSource1, etc. are real data sources configured using connection pools such as DBCP
+// Constructing a readwrite-splitting data source, the readwrite-splitting data source implements the DataSource interface, which can be directly processed as a data source. masterDataSource, slaveDataSource0, slaveDataSource1, etc. are real data sources configured using connection pools such as DBCP
 Map<String, DataSource> slaveDataSourceMap0 = new HashMap<>();
 slaveDataSourceMap0.put("slaveDataSource00", slaveDataSource00);
 slaveDataSourceMap0.put("slaveDataSource01", slaveDataSource01);
@@ -215,7 +215,7 @@ slaveDataSourceMap1.put("slaveDataSource10", slaveDataSource10);
 slaveDataSourceMap1.put("slaveDataSource11", slaveDataSource11);
 DataSource masterSlaveDs1 = MasterSlaveDataSourceFactory.createDataSource("ms_1", "masterDataSource1", masterDataSource1, slaveDataSourceMap1, MasterSlaveLoadBalanceStrategyType.ROUND_ROBIN);
 
-// Constructing read-write separation configuration
+// Constructing readwrite-splitting configuration
 Map<String, DataSource> dataSourceMap = new HashMap<>();
 dataSourceMap.put("ms_0", masterSlaveDs0);
 dataSourceMap.put("ms_1", masterSlaveDs1);
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.en.md
index 9835d025ef..73373820fa 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.en.md
@@ -82,7 +82,7 @@ encryptAlgorithmConfigs.put("name_encryptor", new ShardingSphereAlgorithmConfigu
 encryptAlgorithmConfigs.put("pwd_encryptor", new ShardingSphereAlgorithmConfiguration("assistedTest", encryptProperties));
 EncryptRuleConfiguration encryptRuleConfiguration = new EncryptRuleConfiguration(Collections.singleton(encryptTableRuleConfig), encryptAlgorithmConfigs);
 
-/* Read write splitting rule configuration */
+/* Readwrite-splitting rule configuration */
 ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadWriteSplittingDataSourceRuleConfiguration("ds_0", "write_ds0", Arrays.asList("write_ds0_read0", "write_ds0_read1"), "roundRobin");
 ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadWriteSplittingDataSourceRuleConfiguration("ds_1", "write_ds0", Arrays.asList("write_ds1_read0", "write_ds1_read0"), "roundRobin");
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/read-write-splitting.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/readwrite-splitting.cn.md
similarity index 100%
rename from docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/read-write-splitting.cn.md
rename to docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/readwrite-splitting.cn.md
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/read-write-splitting.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/readwrite-splitting.en.md
similarity index 88%
rename from docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/read-write-splitting.en.md
rename to docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/readwrite-splitting.en.md
index c255766851..e9cfb77107 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/read-write-splitting.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/readwrite-splitting.en.md
@@ -1,5 +1,5 @@
 +++
-title = "Read write splitting"
+title = "Readwrite-splitting"
 weight = 2
 +++
 
@@ -14,7 +14,7 @@ Attributes:
 | dataSources (+)   | Collection\<ReadWriteSplittingDataSourceRuleConfiguration\> | Data sources of write and reads                                   |
 | loadBalancers (*) | Map\<String, ShardingSphereAlgorithmConfiguration\>   | Load balance algorithm name and configurations of replica data sources |
 
-## Read write splitting Data Source Configuration
+## Readwrite-splitting Data Source Configuration
 
 Class name: ReadWriteSplittingDataSourceRuleConfiguration
 
@@ -22,7 +22,7 @@ Attributes:
 
 | *Name*                     | *DataType*           | *Description*                                  | *Default Value*                    |
 | -------------------------- | -------------------- | ---------------------------------------------- | ---------------------------------- |
-| name                       | String               | Read write splitting data source name          | -                                  |
+| name                       | String               | Readwrite-splitting data source name          | -                                  |
 | writeDataSourceName        | String               | Write sources source name                      | -                                  |
 | readDataSourceNames (+)    | Collection\<String\> | Read sources source name list                  | -                                  |
 | loadBalancerName (?)       | String               | Load balance algorithm name of replica sources | Round robin load balance algorithm |
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/change-history.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/change-history.cn.md
index 2f65b5349d..466b77235a 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/change-history.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/change-history.cn.md
@@ -200,15 +200,15 @@ spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=12
 
 # 读写分离策略配置
 # ds_0,ds_1为读写分离配置的逻辑数据源名称
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_0.write-data-source-name=write-ds0
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_0.read-data-source-names=write-ds0-read0
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_0.load-balancer-name=read-random
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_1.write-data-source-name=write-ds1
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_1.read-data-source-names=write-ds1-read0
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_1.load-balancer-name=read-random
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_0.write-data-source-name=write-ds0
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_0.read-data-source-names=write-ds0-read0
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_0.load-balancer-name=read-random
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_1.write-data-source-name=write-ds1
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_1.read-data-source-names=write-ds1-read0
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_1.load-balancer-name=read-random
 
 # 负载均衡算法配置
-spring.shardingsphere.rules.read-write-splitting.load-balancers.read-random.type=RANDOM
+spring.shardingsphere.rules.readwrite-splitting.load-balancers.read-random.type=RANDOM
 ```
 
 ## shardingsphere-4.x
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/change-history.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/change-history.en.md
index 2775130761..79213bbeeb 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/change-history.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/change-history.en.md
@@ -161,7 +161,7 @@ spring.shardingsphere.rules.sharding.binding-tables[x]= # Binding table names,mu
 spring.shardingsphere.rules.sharding.broadcast-tables= # Broadcast table names,multiple table name are separated by commas
 
 # Table sharding strategy
-# The enumeration value of `ds_$->{0..1}` is the name of the logical data source configured with read-write-splitting
+# The enumeration value of `ds_$->{0..1}` is the name of the logical data source configured with readwrite-splitting
 spring.shardingsphere.rules.sharding.tables.t_user.actual-data-nodes=ds_$->{0..1}.t_user_$->{0..1}
 spring.shardingsphere.rules.sharding.tables.t_user.table-strategy.standard.sharding-column=user_id
 spring.shardingsphere.rules.sharding.tables.t_user.table-strategy.standard.sharding-algorithm-name=user-table-strategy-inline
@@ -185,7 +185,7 @@ spring.shardingsphere.rules.sharding.tables.t_user.key-generate-strategy.key-gen
 
 # Sharding algorithm configuration
 spring.shardingsphere.rules.sharding.sharding-algorithms.default-database-strategy-inline.type=INLINE
-# The enumeration value of `ds_$->{user_id % 2}` is the name of the logical data source configured with read-write-splitting
+# The enumeration value of `ds_$->{user_id % 2}` is the name of the logical data source configured with readwrite-splitting
 spring.shardingsphere.rules.sharding.sharding-algorithms.default-database-strategy-inline.algorithm-expression=ds$->{user_id % 2}
 spring.shardingsphere.rules.sharding.sharding-algorithms.user-table-strategy-inline.type=INLINE
 spring.shardingsphere.rules.sharding.sharding-algorithms.user-table-strategy-inline.algorithm-expression=t_user_$->{user_id % 2}
@@ -195,21 +195,21 @@ spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
 spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123
 
 # read query configuration
-# ds_0,ds_1 is the logical data source name of the read-write-splitting
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_0.write-data-source-name=write-ds0
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_0.read-data-source-names=write-ds0-read0
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_0.load-balancer-name=read-random
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_1.write-data-source-name=write-ds1
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_1.read-data-source-names=write-ds1-read0
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_1.load-balancer-name=read-random
+# ds_0,ds_1 is the logical data source name of the readwrite-splitting
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_0.write-data-source-name=write-ds0
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_0.read-data-source-names=write-ds0-read0
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_0.load-balancer-name=read-random
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_1.write-data-source-name=write-ds1
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_1.read-data-source-names=write-ds1-read0
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_1.load-balancer-name=read-random
 
 # Load balance algorithm configuration
-spring.shardingsphere.rules.read-write-splitting.load-balancers.read-random.type=RANDOM
+spring.shardingsphere.rules.readwrite-splitting.load-balancers.read-random.type=RANDOM
 ```
 
 ## Shardingsphere-4.x
 
-### Read-Write Split
+### Readwrite Split
 
 #### Configuration Item Explanation
 
@@ -283,12 +283,12 @@ spring.shardingsphere.sharding.default-table-strategy.xxx= #Default table shardi
 spring.shardingsphere.sharding.default-key-generator.type= #Default auto-increament key generator of type; it will use org.apache.shardingsphere.core.keygen.generator.impl.SnowflakeKeyGenerator in default; user defined generator or internal generator (SNOWFLAKE or UUID) can both be used
 spring.shardingsphere.sharding.default-key-generator.props.<property-name>= #Auto-increament key generator property configuration, such as worker.id and max.tolerate.time.difference.milliseconds of SNOWFLAKE algorithm
 
-spring.shardingsphere.sharding.master-slave-rules.<master-slave-data-source-name>.master-data-source-name= #Refer to read-write split part for more details
-spring.shardingsphere.sharding.master-slave-rules.<master-slave-data-source-name>.slave-data-source-names[0]= #Refer to read-write split part for more details
-spring.shardingsphere.sharding.master-slave-rules.<master-slave-data-source-name>.slave-data-source-names[1]= #Refer to read-write split part for more details
-spring.shardingsphere.sharding.master-slave-rules.<master-slave-data-source-name>.slave-data-source-names[x]= #Refer to read-write split part for more details
-spring.shardingsphere.sharding.master-slave-rules.<master-slave-data-source-name>.load-balance-algorithm-class-name= #Refer to read-write split part for more details
-spring.shardingsphere.sharding.master-slave-rules.<master-slave-data-source-name>.load-balance-algorithm-type= #Refer to read-write split part for more details
+spring.shardingsphere.sharding.master-slave-rules.<master-slave-data-source-name>.master-data-source-name= #Refer to readwrite-splitting part for more details
+spring.shardingsphere.sharding.master-slave-rules.<master-slave-data-source-name>.slave-data-source-names[0]= #Refer to readwrite-splitting part for more details
+spring.shardingsphere.sharding.master-slave-rules.<master-slave-data-source-name>.slave-data-source-names[1]= #Refer to readwrite-splitting part for more details
+spring.shardingsphere.sharding.master-slave-rules.<master-slave-data-source-name>.slave-data-source-names[x]= #Refer to readwrite-splitting part for more details
+spring.shardingsphere.sharding.master-slave-rules.<master-slave-data-source-name>.load-balance-algorithm-class-name= #Refer to readwrite-splitting part for more details
+spring.shardingsphere.sharding.master-slave-rules.<master-slave-data-source-name>.load-balance-algorithm-type= #Refer to readwrite-splitting part for more details
 
 spring.shardingsphere.props.sql.show= #Show SQL or not; default value: false
 spring.shardingsphere.props.executor.size= #Executing thread number; default value: CPU core number
@@ -314,7 +314,7 @@ spring.shardingsphere.encrypt.tables.<table-name>.columns.<logic-column-name>.en
 #### Configuration Item Explanation
 
 ```properties
-#Omit data source, data sharding, read-write split and data masking configurations
+#Omit data source, data sharding, readwrite split and data masking configurations
 
 spring.shardingsphere.orchestration.name= #Orchestration instance name
 spring.shardingsphere.orchestration.overwrite= #Whether to overwrite local configurations with registry center configurations; if it can, each initialization should refer to local configurations
@@ -386,15 +386,15 @@ sharding.jdbc.config.sharding.default-database-strategy.xxx= #Default strategy f
 sharding.jdbc.config.sharding.default-table-strategy.xxx= #Default strategy for sharding tables, same as tables sharding strategy
 sharding.jdbc.config.sharding.default-key-generator-class-name= #Default key generator class name, default value is `io.shardingsphere.core.keygen.DefaultKeyGenerator`. This class need to implements KeyGenerator, and require a no argument constructor
 
-sharding.jdbc.config.sharding.master-slave-rules.<master-slave-data-source-name>.master-data-source-name= #more details can reference Read-write splitting part
-sharding.jdbc.config.sharding.master-slave-rules.<master-slave-data-source-name>.slave-data-source-names[0]= #more details can reference Read-write splitting part
-sharding.jdbc.config.sharding.master-slave-rules.<master-slave-data-source-name>.slave-data-source-names[1]= #more details can reference Read-write splitting part
-sharding.jdbc.config.sharding.master-slave-rules.<master-slave-data-source-name>.slave-data-source-names[x]= #more details can reference Read-write splitting part
-sharding.jdbc.config.sharding.master-slave-rules.<master-slave-data-source-name>.load-balance-algorithm-class-name= #more details can reference Read-write splitting part
-sharding.jdbc.config.sharding.master-slave-rules.<master-slave-data-source-name>.load-balance-algorithm-type= #more details can reference Read-write splitting part
-sharding.jdbc.config.config.map.key1= #more details can reference Read-write splitting part
-sharding.jdbc.config.config.map.key2= #more details can reference Read-write splitting part
-sharding.jdbc.config.config.map.keyx= #more details can reference Read-write splitting part
+sharding.jdbc.config.sharding.master-slave-rules.<master-slave-data-source-name>.master-data-source-name= #more details can reference readwrite-splitting part
+sharding.jdbc.config.sharding.master-slave-rules.<master-slave-data-source-name>.slave-data-source-names[0]= #more details can reference readwrite-splitting part
+sharding.jdbc.config.sharding.master-slave-rules.<master-slave-data-source-name>.slave-data-source-names[1]= #more details can reference readwrite-splitting part
+sharding.jdbc.config.sharding.master-slave-rules.<master-slave-data-source-name>.slave-data-source-names[x]= #more details can reference readwrite-splitting part
+sharding.jdbc.config.sharding.master-slave-rules.<master-slave-data-source-name>.load-balance-algorithm-class-name= #more details can reference readwrite-splitting part
+sharding.jdbc.config.sharding.master-slave-rules.<master-slave-data-source-name>.load-balance-algorithm-type= #more details can reference readwrite-splitting part
+sharding.jdbc.config.config.map.key1= #more details can reference Readwrite-splitting part
+sharding.jdbc.config.config.map.key2= #more details can reference Readwrite-splitting part
+sharding.jdbc.config.config.map.keyx= #more details can reference Readwrite-splitting part
 
 sharding.jdbc.config.props.sql.show= #To show SQLS or not, default value: false
 sharding.jdbc.config.props.executor.size= #The number of working threads, default value: CPU count
@@ -404,7 +404,7 @@ sharding.jdbc.config.config.map.key2= #User-defined arguments
 sharding.jdbc.config.config.map.keyx= #User-defined arguments
 ```
 
-### Read-write splitting
+### Readwrite-splitting
 
 #### Configuration Item Explanation
 
@@ -432,7 +432,7 @@ sharding.jdbc.config.props.check.table.metadata.enabled= #Check the metadata con
 #### Configuration Item Explanation
 
 ```properties
-#Ignore data sources, sharding and read-write splitting configuration
+#Ignore data sources, sharding and readwrite splitting configuration
 
 sharding.jdbc.config.sharding.orchestration.name= #Name of orchestration instance
 sharding.jdbc.config.sharding.orchestration.overwrite= #Use local configuration to overwrite registry center or not
@@ -447,7 +447,7 @@ sharding.jdbc.config.sharding.orchestration.registry.time-to-live-seconds= #Time
 
 ## Shardingsphere-2.x
 
-### Read-write splitting
+### Readwrite-splitting
 
 #### Configuration Item Explanation
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/mix.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/mix.cn.md
index d797767a7a..a4054c7955 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/mix.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/mix.cn.md
@@ -84,13 +84,13 @@ spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=12
 
 # 读写分离策略配置
 # ds_0,ds_1为读写分离配置的逻辑数据源名称
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_0.write-data-source-name=write-ds0
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_0.read-data-source-names=write-ds0-read0
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_0.load-balancer-name=read-random
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_1.write-data-source-name=write-ds1
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_1.read-data-source-names=write-ds1-read0
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_1.load-balancer-name=read-random
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_0.write-data-source-name=write-ds0
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_0.read-data-source-names=write-ds0-read0
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_0.load-balancer-name=read-random
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_1.write-data-source-name=write-ds1
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_1.read-data-source-names=write-ds1-read0
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_1.load-balancer-name=read-random
 
 # 负载均衡算法配置
-spring.shardingsphere.rules.read-write-splitting.load-balancers.read-random.type=RANDOM
+spring.shardingsphere.rules.readwrite-splitting.load-balancers.read-random.type=RANDOM
 ```
\ No newline at end of file
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/mix.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/mix.en.md
index aba6369bff..c21f92e329 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/mix.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/mix.en.md
@@ -36,7 +36,7 @@ spring.shardingsphere.rules.sharding.binding-tables[x]= # Binding table names,mu
 spring.shardingsphere.rules.sharding.broadcast-tables= # Broadcast table names,multiple table name are separated by commas
 
 # Table sharding strategy
-# The enumeration value of `ds_$->{0..1}` is the name of the logical data source configured with read-write-splitting
+# The enumeration value of `ds_$->{0..1}` is the name of the logical data source configured with readwrite-splitting
 spring.shardingsphere.rules.sharding.tables.t_user.actual-data-nodes=ds_$->{0..1}.t_user_$->{0..1}
 spring.shardingsphere.rules.sharding.tables.t_user.table-strategy.standard.sharding-column=user_id
 spring.shardingsphere.rules.sharding.tables.t_user.table-strategy.standard.sharding-algorithm-name=user-table-strategy-inline
@@ -60,7 +60,7 @@ spring.shardingsphere.rules.sharding.tables.t_user.key-generate-strategy.key-gen
 
 # Sharding algorithm configuration
 spring.shardingsphere.rules.sharding.sharding-algorithms.default-database-strategy-inline.type=INLINE
-# The enumeration value of `ds_$->{user_id % 2}` is the name of the logical data source configured with read-write-splitting
+# The enumeration value of `ds_$->{user_id % 2}` is the name of the logical data source configured with readwrite-splitting
 spring.shardingsphere.rules.sharding.sharding-algorithms.default-database-strategy-inline.algorithm-expression=ds$->{user_id % 2}
 spring.shardingsphere.rules.sharding.sharding-algorithms.user-table-strategy-inline.type=INLINE
 spring.shardingsphere.rules.sharding.sharding-algorithms.user-table-strategy-inline.algorithm-expression=t_user_$->{user_id % 2}
@@ -70,14 +70,14 @@ spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
 spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123
 
 # read query configuration
-# ds_0,ds_1 is the logical data source name of the read-write-splitting
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_0.write-data-source-name=write-ds0
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_0.read-data-source-names=write-ds0-read0
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_0.load-balancer-name=read-random
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_1.write-data-source-name=write-ds1
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_1.read-data-source-names=write-ds1-read0
-spring.shardingsphere.rules.read-write-splitting.data-sources.ds_1.load-balancer-name=read-random
+# ds_0,ds_1 is the logical data source name of the readwrite-splitting
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_0.write-data-source-name=write-ds0
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_0.read-data-source-names=write-ds0-read0
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_0.load-balancer-name=read-random
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_1.write-data-source-name=write-ds1
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_1.read-data-source-names=write-ds1-read0
+spring.shardingsphere.rules.readwrite-splitting.data-sources.ds_1.load-balancer-name=read-random
 
 # Load balance algorithm configuration
-spring.shardingsphere.rules.read-write-splitting.load-balancers.read-random.type=RANDOM
+spring.shardingsphere.rules.readwrite-splitting.load-balancers.read-random.type=RANDOM
 ```
\ No newline at end of file
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/read-write-splitting.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/read-write-splitting.cn.md
deleted file mode 100644
index 3d5b1e2763..0000000000
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/read-write-splitting.cn.md
+++ /dev/null
@@ -1,20 +0,0 @@
-+++
-title = "读写分离"
-weight = 2
-+++
-
-## 配置项说明
-
-```properties
-spring.shardingsphere.datasource.names= # 省略数据源配置，请参考使用手册
-
-spring.shardingsphere.rules.read-write-splitting.data-sources.<read-write-splitting-data-source-name>.write-data-source-name= # 写数据源名称
-spring.shardingsphere.rules.read-write-splitting.data-sources.<read-write-splitting-data-source-name>.read-data-source-names= # 读数据源名称，多个从数据源用逗号分隔
-spring.shardingsphere.rules.read-write-splitting.data-sources.<read-write-splitting-data-source-name>.load-balancer-name= # 负载均衡算法名称
-
-# 负载均衡算法配置
-spring.shardingsphere.rules.read-write-splitting.load-balancers.<load-balance-algorithm-name>.type= # 负载均衡算法类型
-spring.shardingsphere.rules.read-write-splitting.load-balancers.<load-balance-algorithm-name>.props.xxx= # 负载均衡算法属性配置
-```
-
-算法类型的详情，请参见[内置负载均衡算法列表](/cn/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/load-balance)。
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/read-write-splitting.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/read-write-splitting.en.md
deleted file mode 100644
index e7015b2a49..0000000000
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/read-write-splitting.en.md
+++ /dev/null
@@ -1,20 +0,0 @@
-+++
-title = "Read write splitting"
-weight = 2
-+++
-
-## Configuration Item Explanation
-
-```properties
-spring.shardingsphere.datasource.names= # Omit the data source configuration, please refer to the usage
-
-spring.shardingsphere.rules.read-write-splitting.data-sources.<read-write-splitting-data-source-name>.primary-data-source-name= # Write data source name
-spring.shardingsphere.rules.read-write-splitting.data-sources.<read-write-splitting-data-source-name>.replica-data-source-names= # Read data source names, multiple data source names separated with comma
-spring.shardingsphere.rules.read-write-splitting.data-sources.<read-write-splitting-data-source-name>.load-balancer-name= # Load balance algorithm name
-
-# Load balance algorithm configuration
-spring.shardingsphere.rules.read-write-splitting.load-balancers.<load-balance-algorithm-name>.type= # Load balance algorithm type
-spring.shardingsphere.rules.read-write-splitting.load-balancers.<load-balance-algorithm-name>.props.xxx= # Load balance algorithm properties
-```
-
-Please refer to [Built-in Load Balance Algorithm List](/en/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/load-balance) for more details about type of algorithm.
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/readwrite-splitting.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/readwrite-splitting.cn.md
new file mode 100644
index 0000000000..c810e97a47
--- /dev/null
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/readwrite-splitting.cn.md
@@ -0,0 +1,20 @@
++++
+title = "读写分离"
+weight = 2
++++
+
+## 配置项说明
+
+```properties
+spring.shardingsphere.datasource.names= # 省略数据源配置，请参考使用手册
+
+spring.shardingsphere.rules.readwrite-splitting.data-sources.<readwrite-splitting-data-source-name>.write-data-source-name= # 写数据源名称
+spring.shardingsphere.rules.readwrite-splitting.data-sources.<readwrite-splitting-data-source-name>.read-data-source-names= # 读数据源名称，多个从数据源用逗号分隔
+spring.shardingsphere.rules.readwrite-splitting.data-sources.<readwrite-splitting-data-source-name>.load-balancer-name= # 负载均衡算法名称
+
+# 负载均衡算法配置
+spring.shardingsphere.rules.readwrite-splitting.load-balancers.<load-balance-algorithm-name>.type= # 负载均衡算法类型
+spring.shardingsphere.rules.readwrite-splitting.load-balancers.<load-balance-algorithm-name>.props.xxx= # 负载均衡算法属性配置
+```
+
+算法类型的详情，请参见[内置负载均衡算法列表](/cn/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/load-balance)。
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/readwrite-splitting.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/readwrite-splitting.en.md
new file mode 100644
index 0000000000..add46da340
--- /dev/null
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/readwrite-splitting.en.md
@@ -0,0 +1,20 @@
++++
+title = "Readwrite splitting"
+weight = 2
++++
+
+## Configuration Item Explanation
+
+```properties
+spring.shardingsphere.datasource.names= # Omit the data source configuration, please refer to the usage
+
+spring.shardingsphere.rules.readwrite-splitting.data-sources.<readwrite-splitting-data-source-name>.primary-data-source-name= # Write data source name
+spring.shardingsphere.rules.readwrite-splitting.data-sources.<readwrite-splitting-data-source-name>.replica-data-source-names= # Read data source names, multiple data source names separated with comma
+spring.shardingsphere.rules.readwrite-splitting.data-sources.<readwrite-splitting-data-source-name>.load-balancer-name= # Load balance algorithm name
+
+# Load balance algorithm configuration
+spring.shardingsphere.rules.readwrite-splitting.load-balancers.<load-balance-algorithm-name>.type= # Load balance algorithm type
+spring.shardingsphere.rules.readwrite-splitting.load-balancers.<load-balance-algorithm-name>.props.xxx= # Load balance algorithm properties
+```
+
+Please refer to [Built-in Load Balance Algorithm List](/en/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/load-balance) for more details about type of algorithm.
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/change-history.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/change-history.en.md
index f9f5175b5e..4960870da8 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/change-history.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/change-history.en.md
@@ -39,7 +39,7 @@ Please refer to [Built-in Load Balance Algorithm List](/en/user-manual/shardings
 
 ## 4.x
 
-### Read-Write Split
+### Readwrite-splitting
 
 #### Configuration Item Explanation
 
@@ -78,7 +78,7 @@ Namespace: [http://shardingsphere.apache.org/schema/shardingsphere/masterslave/m
 
 ## 3.x
 
-### Read-write splitting
+### Readwrite-splitting
 
 #### Configuration Item Explanation
 
@@ -152,7 +152,7 @@ Namespace: [http://shardingsphere.apache.org/schema/shardingsphere/masterslave/m
 
 ## 2.x
 
-### Read-write splitting
+### Readwrite-splitting
 
 #### The configuration example for Spring namespace
 
@@ -215,7 +215,7 @@ Namespace: [http://shardingsphere.apache.org/schema/shardingsphere/masterslave/m
         <property name="password" value=""/>
     </bean>
     
-    <!-- Read-write splitting DataSource Configuration -->
+    <!-- Readwrite-splitting DataSource Configuration -->
     <master-slave:data-source id="dbtbl_0" master-data-source-name="dbtbl_0_master" slave-data-source-names="dbtbl_0_slave_0, dbtbl_0_slave_1" strategy-type="ROUND_ROBIN" />
     <master-slave:data-source id="dbtbl_1" master-data-source-name="dbtbl_1_master" slave-data-source-names="dbtbl_1_slave_0, dbtbl_1_slave_1" strategy-type="ROUND_ROBIN" />
     
@@ -234,7 +234,7 @@ Namespace: [http://shardingsphere.apache.org/schema/shardingsphere/masterslave/m
 
 ## 1.x
 
-### Read-write splitting
+### Readwrite-splitting
 
 #### The configuration example for Spring namespace
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/mix.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/mix.cn.md
index f38ac77e86..7d22bd8b11 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/mix.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/mix.cn.md
@@ -15,7 +15,7 @@ weight = 6
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:shardingsphere="http://shardingsphere.apache.org/schema/shardingsphere/datasource"
-       xmlns:read-write-splitting="http://shardingsphere.apache.org/schema/shardingsphere/read-write-splitting"
+       xmlns:readwrite-splitting="http://shardingsphere.apache.org/schema/shardingsphere/readwrite-splitting"
        xmlns:encrypt="http://shardingsphere.apache.org/schema/shardingsphere/encrypt"
        xsi:schemaLocation="http://www.springframework.org/schema/beans 
                            http://www.springframework.org/schema/beans/spring-beans.xsd 
@@ -25,8 +25,8 @@ weight = 6
                            http://www.springframework.org/schema/tx/spring-tx.xsd
                            http://shardingsphere.apache.org/schema/shardingsphere/datasource
                            http://shardingsphere.apache.org/schema/shardingsphere/datasource/datasource.xsd
-                           http://shardingsphere.apache.org/schema/shardingsphere/read-write-splitting
-                           http://shardingsphere.apache.org/schema/shardingsphere/read-write-splitting/read-write-splitting.xsd
+                           http://shardingsphere.apache.org/schema/shardingsphere/readwrite-splitting
+                           http://shardingsphere.apache.org/schema/shardingsphere/readwrite-splitting/readwrite-splitting.xsd
                            http://shardingsphere.apache.org/schema/shardingsphere/encrypt
                            http://shardingsphere.apache.org/schema/shardingsphere/encrypt/encrypt.xsd
                            ">
@@ -59,13 +59,13 @@ weight = 6
     </bean>
 	
 	<!-- 主从配置负载均衡策略 -->
-    <read-write-splitting:load-balance-algorithm id="randomStrategy" type="RANDOM" />
+    <readwrite-splitting:load-balance-algorithm id="randomStrategy" type="RANDOM" />
     
 	<!-- 主从规则配置 -->
-    <read-write-splitting:rule id="readWriteSplittingRule">
-        <read-write-splitting:data-source-rule id="ds_0" write-data-source-name="write_ds0" read-data-source-names="read_ds0_0, read_ds0_1" load-balance-algorithm-ref="randomStrategy" />
-		<read-write-splitting:data-source-rule id="ds_1" write-data-source-name="write_ds1" read-data-source-names="read_ds1_0, read_ds1_1" load-balance-algorithm-ref="randomStrategy" />
-    </read-write-splitting:rule>
+    <readwrite-splitting:rule id="readWriteSplittingRule">
+        <readwrite-splitting:data-source-rule id="ds_0" write-data-source-name="write_ds0" read-data-source-names="read_ds0_0, read_ds0_1" load-balance-algorithm-ref="randomStrategy" />
+		<readwrite-splitting:data-source-rule id="ds_1" write-data-source-name="write_ds1" read-data-source-names="read_ds1_0, read_ds1_1" load-balance-algorithm-ref="randomStrategy" />
+    </readwrite-splitting:rule>
     
 	<!-- 分片策略配置 -->
 	<sharding:standard-strategy id="databaseStrategy" sharding-column="user_id" algorithm-ref="inlineDatabaseStrategyAlgorithm" />
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/mix.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/mix.en.md
index 30d29ffdb2..dfb35fe3bf 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/mix.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/mix.en.md
@@ -10,7 +10,7 @@ weight = 6
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:shardingsphere="http://shardingsphere.apache.org/schema/shardingsphere/datasource"
-       xmlns:read-write-splitting="http://shardingsphere.apache.org/schema/shardingsphere/read-write-splitting"
+       xmlns:readwrite-splitting="http://shardingsphere.apache.org/schema/shardingsphere/readwrite-splitting"
        xmlns:encrypt="http://shardingsphere.apache.org/schema/shardingsphere/encrypt"
        xsi:schemaLocation="http://www.springframework.org/schema/beans 
                            http://www.springframework.org/schema/beans/spring-beans.xsd 
@@ -20,8 +20,8 @@ weight = 6
                            http://www.springframework.org/schema/tx/spring-tx.xsd
                            http://shardingsphere.apache.org/schema/shardingsphere/datasource
                            http://shardingsphere.apache.org/schema/shardingsphere/datasource/datasource.xsd
-                           http://shardingsphere.apache.org/schema/shardingsphere/read-write-splitting
-                           http://shardingsphere.apache.org/schema/shardingsphere/read-write-splitting/read-write-splitting.xsd
+                           http://shardingsphere.apache.org/schema/shardingsphere/readwrite-splitting
+                           http://shardingsphere.apache.org/schema/shardingsphere/readwrite-splitting/readwrite-splitting.xsd
                            http://shardingsphere.apache.org/schema/shardingsphere/encrypt
                            http://shardingsphere.apache.org/schema/shardingsphere/encrypt/encrypt.xsd
                            ">
@@ -53,14 +53,14 @@ weight = 6
         <!-- ...Omit specific configuration. -->
     </bean>
 	
-	<!-- load balance algorithm configuration for read-write-splitting -->
-    <read-write-splitting:load-balance-algorithm id="randomStrategy" type="RANDOM" />
+	<!-- load balance algorithm configuration for readwrite-splitting -->
+    <readwrite-splitting:load-balance-algorithm id="randomStrategy" type="RANDOM" />
     
-	<!-- read-write-splitting rule configuration -->
-    <read-write-splitting:rule id="readWriteSplittingRule">
-        <read-write-splitting:data-source-rule id="ds_0" write-data-source-name="write_ds0" read-data-source-names="read_ds0_0, read_ds0_1" load-balance-algorithm-ref="randomStrategy" />
-		<read-write-splitting:data-source-rule id="ds_1" write-data-source-name="write_ds1" read-data-source-names="read_ds1_0, read_ds1_1" load-balance-algorithm-ref="randomStrategy" />
-    </read-write-splitting:rule>
+	<!-- readwrite-splitting rule configuration -->
+    <readwrite-splitting:rule id="readWriteSplittingRule">
+        <readwrite-splitting:data-source-rule id="ds_0" write-data-source-name="write_ds0" read-data-source-names="read_ds0_0, read_ds0_1" load-balance-algorithm-ref="randomStrategy" />
+		<readwrite-splitting:data-source-rule id="ds_1" write-data-source-name="write_ds1" read-data-source-names="read_ds1_0, read_ds1_1" load-balance-algorithm-ref="randomStrategy" />
+    </readwrite-splitting:rule>
     
 	<!-- sharding strategy configuration -->
 	<sharding:standard-strategy id="databaseStrategy" sharding-column="user_id" algorithm-ref="inlineDatabaseStrategyAlgorithm" />
@@ -69,7 +69,7 @@ weight = 6
 
     <sharding:sharding-algorithm id="inlineDatabaseStrategyAlgorithm" type="INLINE">
         <props>
-            <!-- the expression enumeration is the logical data source name of the read-write-splitting configuration -->
+            <!-- the expression enumeration is the logical data source name of the readwrite-splitting configuration -->
             <prop key="algorithm-expression">ds_${user_id % 2}</prop>
         </props>
     </sharding:sharding-algorithm>
@@ -87,7 +87,7 @@ weight = 6
 	<!-- sharding rule configuration -->	
 	<sharding:rule id="shardingRule">
         <sharding:table-rules>
-            <!-- the expression 'ds_${0..1}' enumeration is the logical data source name of the read-write-splitting configuration  -->
+            <!-- the expression 'ds_${0..1}' enumeration is the logical data source name of the readwrite-splitting configuration  -->
             <sharding:table-rule logic-table="t_order" actual-data-nodes="ds_${0..1}.t_order_${0..1}" database-strategy-ref="databaseStrategy" table-strategy-ref="orderTableStrategy" key-generate-strategy-ref="orderKeyGenerator"/>
             <sharding:table-rule logic-table="t_order_item" actual-data-nodes="ds_${0..1}.t_order_item_${0..1}" database-strategy-ref="databaseStrategy" table-strategy-ref="orderItemTableStrategy" key-generate-strategy-ref="itemKeyGenerator"/>
         </sharding:table-rules>
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/read-write-splitting.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/readwrite-splitting.cn.md
similarity index 81%
rename from docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/read-write-splitting.cn.md
rename to docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/readwrite-splitting.cn.md
index 537dc033bc..b67b7064d7 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/read-write-splitting.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/readwrite-splitting.cn.md
@@ -5,16 +5,16 @@ weight = 2
 
 ## 配置项说明
 
-命名空间：[http://shardingsphere.apache.org/schema/shardingsphere/read-write-splitting/read-write-splitting-5.0.0.xsd](http://shardingsphere.apache.org/schema/shardingsphere/read-write-splitting/read-write-splitting-5.0.0.xsd)
+命名空间：[http://shardingsphere.apache.org/schema/shardingsphere/readwrite-splitting/readwrite-splitting-5.0.0.xsd](http://shardingsphere.apache.org/schema/shardingsphere/readwrite-splitting/readwrite-splitting-5.0.0.xsd)
 
-\<read-write-splitting:rule />
+\<readwrite-splitting:rule />
 
 | *名称*                | *类型* | *说明*           |
 | -------------------- | ------ | --------------- |
 | id                   | 属性   | Spring Bean Id   |
 | data-source-rule (+) | 标签   | 读写分离数据源规则配置 |
 
-\<read-write-splitting:data-source-rule />
+\<readwrite-splitting:data-source-rule />
 
 | *名称*                     | *类型* | *说明*                          |
 | -------------------------- | ----- | ------------------------------- |
@@ -24,7 +24,7 @@ weight = 2
 | load-balance-algorithm-ref | 属性  | 负载均衡算法名称                   |
 
 
-\<read-write-splitting:load-balance-algorithm />
+\<readwrite-splitting:load-balance-algorithm />
 
 | *名称*    | *类型* | *说明*            |
 | --------- | ----- | ----------------- |
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/read-write-splitting.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/readwrite-splitting.en.md
similarity index 73%
rename from docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/read-write-splitting.en.md
rename to docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/readwrite-splitting.en.md
index 21a6865563..ff5bc2ed79 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/read-write-splitting.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/readwrite-splitting.en.md
@@ -1,29 +1,29 @@
 +++
-title = "Read write splitting"
+title = "Readwrite-splitting"
 weight = 2
 +++
 
 ## Configuration Item Explanation
 
-Namespace: [http://shardingsphere.apache.org/schema/shardingsphere/read-write-splitting/read-write-splitting-5.0.0.xsd](http://shardingsphere.apache.org/schema/shardingsphere/read-write-splitting/read-write-splitting-5.0.0.xsd)
+Namespace: [http://shardingsphere.apache.org/schema/shardingsphere/readwrite-splitting/readwrite-splitting-5.0.0.xsd](http://shardingsphere.apache.org/schema/shardingsphere/readwrite-splitting/readwrite-splitting-5.0.0.xsd)
 
-\<read-write-splitting:rule />
+\<readwrite-splitting:rule />
 
 | *Name*               | *Type*    | *Description*                                |
 | -------------------- | --------- | -------------------------------------------- |
 | id                   | Attribute | Spring Bean Id                               |
-| data-source-rule (+) | Tag       | Read write splitting data source rule configuration |
+| data-source-rule (+) | Tag       | Readwrite-splitting data source rule configuration |
 
-\<read-write-splitting:data-source-rule />
+\<readwrite-splitting:data-source-rule />
 
 | *Name*                     | *Type*     | *Description*                                                              |
 | -------------------------- | ---------- | -------------------------------------------------------------------------- |
-| id                         | Attribute  | Read write splitting data source rule name                                      |
+| id                         | Attribute  | Readwrite-splitting data source rule name                                      |
 | write-data-source-name     | Attribute  | Write data source name                                                   |
 | read-data-source-names     | Attribute  | Read data source names, multiple data source names separated with comma |
 | load-balance-algorithm-ref | Attribute  | Load balance algorithm name                                                |
 
-\<read-write-splitting:load-balance-algorithm />
+\<readwrite-splitting:load-balance-algorithm />
 
 | *Name*    | *Type*     | *Description*                     |
 | --------- | ---------- | --------------------------------- |
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/change-history.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/change-history.en.md
index d238f19d83..5541d72ae5 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/change-history.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/change-history.en.md
@@ -36,7 +36,7 @@ Please refer to [Built-in Load Balance Algorithm List](/en/user-manual/shardings
 
 ## ShardingSphere-4.x
 
-### Read-Write Split
+### Readwrite-splitting
 
 #### Configuration Item Explanation
 
@@ -75,7 +75,7 @@ DataSource dataSource = YamlMasterSlaveDataSourceFactory.createDataSource(yamlFi
 
 ## ShardingSphere-3.x
 
-### Read-Write Split
+### Readwrite-splitting
 
 #### Configuration Item Explanation
 
@@ -115,7 +115,7 @@ DataSource dataSource = MasterSlaveDataSourceFactory.createDataSource(yamlFile);
 
 ## ShardingSphere-2.x
 
-### Read-Write Split
+### Readwrite-splitting
 
 #### Concept
 
@@ -123,8 +123,8 @@ In order to relieve the pressure on the database, the write and read operations
 
 #### Support item
 
-1. Provides a read-write separation configuration with one master and multiple slaves, which can be used independently or with sub-databases and sub-meters.
-2. Independent use of read-write separation to support SQL transparent transmission.
+1. Provides a readwrite-splitting configuration with one master and multiple slaves, which can be used independently or with sub-databases and sub-meters.
+2. Independent use of readwrite-splitting to support SQL transparent transmission.
 3. In the same thread and the same database connection, if there is a write operation, subsequent read operations will be read from the main library to ensure data consistency.
 4. Spring namespace.
 5. Hint-based mandatory main library routing.
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/mix.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/mix.cn.md
index 8619d83fbf..38bcb8a331 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/mix.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/mix.cn.md
@@ -48,7 +48,7 @@ rules:
         props:
           aes-key-value: 123456abc
   
-  - !READ_WRITE_SPLITTING # 配置读写分离规则
+  - !READWRITE_SPLITTING # 配置读写分离规则
     dataSources:
       ds:
         name: ds # 读写分离的逻辑数据源名称 `ds` 用于在数据分片中使用
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/mix.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/mix.en.md
index 2a25616d82..9993e5dbcb 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/mix.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/mix.en.md
@@ -24,7 +24,7 @@ rules:
   - !SHARDING # Configure data sharding rules.
     tables:
       t_user:
-        actualDataNodes: ds.t_user_${0..1} # Data source name 'ds' uses the logical data source name of the read-write separation configuration.
+        actualDataNodes: ds.t_user_${0..1} # Data source name 'ds' uses the logical data source name of the readwrite-splitting configuration.
         tableStrategy:
           standard:
             shardingColumn: user_id
@@ -49,10 +49,10 @@ rules:
         props:
           aes-key-value: 123456abc
   
-  - !READ_WRITE_SPLITTING # Configure read-write separation rules.
+  - !READWRITE_SPLITTING # Configure readwrite-splitting rules.
     dataSources:
       ds:
-        name: ds # The logical data source name 'ds' for read-write separation is used in data sharding.
+        name: ds # The logical data source name 'ds' for readwrite-splitting is used in data sharding.
         writeDataSourceName: write_ds # Use the real data source name 'write_ds'.
         readDataSourceNames:
           - read_ds_0 # Use the real data source name 'read_ds_0'.
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/read-write-splitting .cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/readwrite-splitting .cn.md
similarity index 97%
rename from docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/read-write-splitting .cn.md
rename to docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/readwrite-splitting .cn.md
index 04d8c6b360..bda7ebd2d7 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/read-write-splitting .cn.md	
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/readwrite-splitting .cn.md	
@@ -9,7 +9,7 @@ weight = 2
 dataSources: # 省略数据源配置，请参考使用手册
 
 rules:
-- !READ_WRITE_SPLITTING
+- !READWRITE_SPLITTING
   dataSources:
     <data-source-name> (+): # 读写分离逻辑数据源名称
       writeDataSourceName: # 写库数据源名称
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/read-write-splitting.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/readwrite-splitting.en.md
similarity index 85%
rename from docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/read-write-splitting.en.md
rename to docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/readwrite-splitting.en.md
index 39b7fe4018..88a8b306fe 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/read-write-splitting.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/readwrite-splitting.en.md
@@ -1,5 +1,5 @@
 +++
-title = "Read write splitting"
+title = "Readwrite-splitting"
 weight = 2
 +++
 
@@ -9,9 +9,9 @@ weight = 2
 dataSource: # Omit the data source configuration, please refer to the usage
 
 rules:
-- !READ_WRITE_SPLITTING
+- !READWRITE_SPLITTING
   dataSources:
-    <data-source-name> (+): # Logic data source name of read write splitting
+    <data-source-name> (+): # Logic data source name of readwrite-splitting
       writeDataSourceName: # Write data source name
       readDataSourceNames: 
         - <read-data-source-name> (+) # Read data source name
diff --git a/docs/document/static/img/read-write-splitting/read-write-splitting-standalone.png b/docs/document/static/img/readwrite-splitting/readwrite-splitting-standalone.png
similarity index 100%
rename from docs/document/static/img/read-write-splitting/read-write-splitting-standalone.png
rename to docs/document/static/img/readwrite-splitting/readwrite-splitting-standalone.png
diff --git a/docs/document/static/img/read-write-splitting/sharding-and-read-write-splitting.png b/docs/document/static/img/readwrite-splitting/sharding-and-readwrite-splitting.png
similarity index 100%
rename from docs/document/static/img/read-write-splitting/sharding-and-read-write-splitting.png
rename to docs/document/static/img/readwrite-splitting/sharding-and-readwrite-splitting.png
