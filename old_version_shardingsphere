commit 74b25c90b764148308725ca4a32c95834804d0da
Author: lanchengx <52209337+lanchengx@users.noreply.github.com>
Date:   Wed Dec 29 17:43:48 2021 +0800

    [DistSQL] Create a Sharding table rule to support specifying an existing KeyGenerator (#14406)
    
    * Create a `Sharding table rule` to support specifying an existing Keygenerator
    
    * Update the parse SQL document.
    
    * set variable adaptation true/false.
    
    * Remove redundant matches.

diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/_index.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/_index.cn.md
index 7857b62630..0973333437 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/_index.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/_index.cn.md
@@ -66,7 +66,7 @@ RAL (Resource & Rule Administration Language) 为 Apache ShardingSphere 的管
 | show variable cached_connections                                            | 查询当前连接中缓存的物理数据库连接个数                             | show variable cached_connections                 |
 | show variable agent_plugins_enabled                                         | 查询 agent 插件的启用状态                                       | show variable agent_plugins_enabled              |
 | preview SQL                                                                 | 预览实际 SQL                                                  | preview select * from t_order                    |
-| parse SQL                                                                   | 解析实际 SQL                                                  | parse select * from t_order                      |
+| parse SQL                                                                   | 解析 SQL 并输出抽象语法树                                        parse select * from t_order                      |
 | refresh table metadata                                                      | 刷新所有表的元数据                                              | refresh table metadata                          |
 | refresh table metadata [tableName / tableName from resource resourceName]   | 刷新指定表的元数据                                              | refresh table metadata t_order from resource ds_1 |
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/_index.en.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/_index.en.md
index 52cad3d981..b2417b6749 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/_index.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/ral/_index.en.md
@@ -65,7 +65,7 @@ RAL (Resource & Rule Administration Language) responsible for the added-on featu
 | show variable cached_connections                                            | Query the number of cached physical database connections in the current connection | show variable cached_connections          |
 | show variable agent_plugins_enabled                                         | Query whether the agent plugin are enabled                                         | show variable agent_plugins_enabled       |
 | preview SQL                                                                 | Preview the actual SQLs                                                            | preview select * from t_order             |
-| parse SQL                                                                   | Parse the actual SQLs                                                              | parse select * from t_order               |
+| parse SQL                                                                   | Parse SQL and output abstract syntax tree                                          | parse select * from t_order               |
 | refresh table metadata                                                      | Refresh the metadata of all tables                                                 | refresh table metadata                    |
 | refresh table metadata [tableName / tableName from resource resourceName]   | Refresh the metadata of a table                                                    | refresh table metadata t_order from resource ds_1                   |
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.cn.md
index 44a148203e..5c2ed24ac0 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.cn.md
@@ -26,10 +26,10 @@ shardingTableRuleDefinition:
     shardingAutoTableRule | shardingTableRule
    
 shardingAutoTableRule:
-    tableName(resources COMMA shardingColumn COMMA algorithmDefinition (COMMA keyGenerateStrategy)?)
+    tableName(resources COMMA shardingColumn COMMA algorithmDefinition (COMMA keyGenerateDeclaration)?)
     
 shardingTableRule:
-    tableName(dataNodes (COMMA  databaseStrategy)? (COMMA tableStrategy)? (COMMA keyGenerateStrategy)?)
+    tableName(dataNodes (COMMA  databaseStrategy)? (COMMA tableStrategy)? (COMMA keyGenerateDeclaration)?)
 
 resources:
     RESOURCES(resource [, resource] ...)
@@ -49,7 +49,10 @@ shardingColumn:
 algorithmDefinition:
     TYPE(NAME=shardingAlgorithmType [, PROPERTIES([algorithmProperties])])
 
-keyGenerateStrategy:
+keyGenerateDeclaration:
+    keyGenerateDefinition | keyGenerateConstruction
+
+keyGenerateDefinition:
     GENERATED_KEY(COLUMN=columnName, strategyDefinition)
 
 shardingScope:
@@ -61,6 +64,9 @@ databaseStrategy:
 tableStrategy:
     TABLE_STRATEGY(shardingStrategy)
 
+keyGenerateConstruction
+    GENERATED_KEY(COLUMN=columnName, GENERATED_KEY_ALGORITHM=keyGenerateAlgorithmName)
+
 shardingStrategy:
     TYPE=strategyType, shardingColumn, shardingAlgorithm
 
@@ -127,6 +133,20 @@ DROP SHARDING BROADCAST TABLE RULES (tableName [, tableName] ...)
 
 ### Sharding Table Rule
 
+*Key Generator*
+
+```sql
+CREATE SHARDING KEY GENERATOR snowflake_key_generator (
+TYPE(NAME=SNOWFLAKE, PROPERTIES("worker-id"=123))
+);
+
+ALTER SHARDING KEY GENERATOR snowflake_key_generator (
+TYPE(NAME=SNOWFLAKE, PROPERTIES("worker-id"=456))
+);
+
+DROP SHARDING KEY GENERATOR snowflake_key_generator;
+```
+
 *Auto Table*
 ```sql
 CREATE SHARDING TABLE RULE t_order (
@@ -157,7 +177,7 @@ CREATE SHARDING TABLE RULE t_order_item (
 DATANODES("resource_${0..1}.t_order_item_${0..1}"),
 DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM(TYPE(NAME=inline,PROPERTIES("algorithm-expression"="resource_${user_id % 2}")))),
 TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=table_inline),
-GENERATED_KEY(COLUMN=another_id,TYPE(NAME=snowflake,PROPERTIES("worker-id"=123)))
+GENERATED_KEY(COLUMN=another_id,GENERATED_KEY_ALGORITHM=snowflake_key_generator)
 );
 
 ALTER SHARDING ALGORITHM database_inline (
@@ -170,7 +190,7 @@ ALTER SHARDING TABLE RULE t_order_item (
 DATANODES("resource_${0..3}.t_order_item${0..3}"),
 DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
 TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=table_inline),
-GENERATED_KEY(COLUMN=another_id,TYPE(NAME=snowflake,PROPERTIES("worker-id"=123)))
+GENERATED_KEY(COLUMN=another_id,GENERATED_KEY_ALGORITHM=snowflake_key_generator)
 );
 
 DROP SHARDING TABLE RULE t_order_item;
@@ -182,20 +202,6 @@ TYPE = standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=algorithmsName
 );
 ```
 
-*Key Generator*
-
-```sql
-CREATE SHARDING KEY GENERATOR snowflake_key_generator (
-TYPE(NAME=SNOWFLAKE, PROPERTIES("worker-id"=123))
-);
-
-ALTER SHARDING KEY GENERATOR snowflake_key_generator (
-TYPE(NAME=SNOWFLAKE, PROPERTIES("worker-id"=456))
-);
-
-DROP SHARDING KEY GENERATOR snowflake_key_generator;
-```
-
 ### Sharding Binding Table Rule
 
 ```sql
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.en.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.en.md
index 58f43e4bbf..2d825b76e3 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.en.md
@@ -26,10 +26,10 @@ shardingTableRuleDefinition:
     shardingAutoTableRule | shardingTableRule
    
 shardingAutoTableRule:
-    tableName(resources COMMA shardingColumn COMMA algorithmDefinition (COMMA keyGenerateStrategy)?)
+    tableName(resources COMMA shardingColumn COMMA algorithmDefinition (COMMA keyGenerateDeclaration)?)
     
 shardingTableRule:
-    tableName(dataNodes (COMMA  databaseStrategy)? (COMMA tableStrategy)? (COMMA keyGenerateStrategy)?)
+    tableName(dataNodes (COMMA  databaseStrategy)? (COMMA tableStrategy)? (COMMA keyGenerateDeclaration)?)
 
 resources:
     RESOURCES(resource [, resource] ...)
@@ -49,7 +49,10 @@ shardingColumn:
 algorithmDefinition:
     TYPE(NAME=shardingAlgorithmType [, PROPERTIES([algorithmProperties])])
 
-keyGenerateStrategy:
+keyGenerateDeclaration:
+    keyGenerateDefinition | keyGenerateConstruction
+
+keyGenerateDefinition:
     GENERATED_KEY(COLUMN=columnName, strategyDefinition)
 
 shardingScope:
@@ -61,6 +64,9 @@ databaseStrategy:
 tableStrategy:
     TABLE_STRATEGY(shardingStrategy)
 
+keyGenerateConstruction
+    GENERATED_KEY(COLUMN=columnName, GENERATED_KEY_ALGORITHM=keyGenerateAlgorithmName)
+
 shardingStrategy:
     TYPE=strategyType, shardingColumn, shardingAlgorithm
 
@@ -127,6 +133,20 @@ DROP SHARDING BROADCAST TABLE RULES
 
 ### Sharding Table Rule
 
+*Key Generator*
+
+```sql
+CREATE SHARDING KEY GENERATOR snowflake_key_generator (
+TYPE(NAME=SNOWFLAKE, PROPERTIES("worker-id"=123))
+);
+
+ALTER SHARDING KEY GENERATOR snowflake_key_generator (
+TYPE(NAME=SNOWFLAKE, PROPERTIES("worker-id"=456))
+);
+
+DROP SHARDING KEY GENERATOR snowflake_key_generator;
+```
+
 *Auto Table*
 ```sql
 CREATE SHARDING TABLE RULE t_order (
@@ -157,7 +177,7 @@ CREATE SHARDING TABLE RULE t_order_item (
 DATANODES("resource_${0..1}.t_order_item_${0..1}"),
 DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM(TYPE(NAME=inline,PROPERTIES("algorithm-expression"="resource_${user_id % 2}")))),
 TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=table_inline),
-GENERATED_KEY(COLUMN=another_id,TYPE(NAME=snowflake,PROPERTIES("worker-id"=123)))
+GENERATED_KEY(COLUMN=another_id,GENERATED_KEY_ALGORITHM=snowflake_key_generator)
 );
 
 ALTER SHARDING ALGORITHM database_inline (
@@ -170,7 +190,7 @@ ALTER SHARDING TABLE RULE t_order_item (
 DATANODES("resource_${0..3}.t_order_item${0..3}"),
 DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
 TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=table_inline),
-GENERATED_KEY(COLUMN=another_id,TYPE(NAME=snowflake,PROPERTIES("worker-id"=123)))
+GENERATED_KEY(COLUMN=another_id,GENERATED_KEY_ALGORITHM=snowflake_key_generator)
 );
 
 DROP SHARDING TABLE RULE t_order_item;
@@ -182,20 +202,6 @@ TYPE = standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=algorithmsName
 );
 ```
 
-*Key Generator*
-
-```sql
-CREATE SHARDING KEY GENERATOR snowflake_key_generator (
-TYPE(NAME=SNOWFLAKE, PROPERTIES("worker-id"=123))
-);
-
-ALTER SHARDING KEY GENERATOR snowflake_key_generator (
-TYPE(NAME=SNOWFLAKE, PROPERTIES("worker-id"=456))
-);
-
-DROP SHARDING KEY GENERATOR snowflake_key_generator;
-```
-
 ### Sharding Binding Table Rule
 
 ```sql
