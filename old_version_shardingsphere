commit ed41305ce9135558298e08188c6fd0916340ce65
Author: Asxing Yang（阿行） <holddie@163.com>
Date:   Tue Mar 16 19:39:25 2021 +0800

    document: Add Yaml each versions of the document. (#9672)

diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/change-history.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/change-history.cn.md
index 30fc9937db..3a2981d9fb 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/change-history.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/change-history.cn.md
@@ -33,3 +33,141 @@ props:
 ```
 
 算法类型的详情，请参见[内置负载均衡算法列表](/cn/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/load-balance)。
+
+## ShardingSphere-4.x
+
+### 读写分离
+
+#### 配置项说明
+
+```yaml
+dataSources:
+  ds_master: !!org.apache.commons.dbcp.BasicDataSource
+    driverClassName: com.mysql.jdbc.Driver
+    url: jdbc:mysql://localhost:3306/ds_master
+    username: root
+    password: 
+  ds_slave0: !!org.apache.commons.dbcp.BasicDataSource
+    driverClassName: com.mysql.jdbc.Driver
+    url: jdbc:mysql://localhost:3306/ds_slave0
+    username: root
+    password:
+  ds_slave1: !!org.apache.commons.dbcp.BasicDataSource
+    driverClassName: com.mysql.jdbc.Driver
+    url: jdbc:mysql://localhost:3306/ds_slave1
+    username: root
+    password: 
+
+masterSlaveRule:
+  name: ds_ms
+  masterDataSourceName: ds_master
+  slaveDataSourceNames: [ds_slave0, ds_slave1]
+  
+props:
+  sql.show: true
+```
+
+通过 `YamlMasterSlaveDataSourceFactory` 工厂类创建 `DataSource`：
+
+```java
+DataSource dataSource = YamlMasterSlaveDataSourceFactory.createDataSource(yamlFile);
+```
+
+## ShardingSphere-3.x
+
+### 读写分离
+
+#### 配置项说明
+
+```yaml
+dataSources:
+  ds_master: !!org.apache.commons.dbcp.BasicDataSource
+    driverClassName: com.mysql.jdbc.Driver
+    url: jdbc:mysql://localhost:3306/ds_master
+    username: root
+    password: 
+  ds_slave0: !!org.apache.commons.dbcp.BasicDataSource
+    driverClassName: com.mysql.jdbc.Driver
+    url: jdbc:mysql://localhost:3306/ds_slave0
+    username: root
+    password:
+  ds_slave1: !!org.apache.commons.dbcp.BasicDataSource
+    driverClassName: com.mysql.jdbc.Driver
+    url: jdbc:mysql://localhost:3306/ds_slave1
+    username: root
+    password: 
+
+masterSlaveRule:
+  name: ds_ms
+  masterDataSourceName: ds_master
+  slaveDataSourceNames: [ds_slave0, ds_slave1]
+  props:
+      sql.show: true
+  configMap:
+      key1: value1
+```
+
+通过 `MasterSlaveDataSourceFactory` 工厂类创建 `DataSource`：
+
+```java
+DataSource dataSource = MasterSlaveDataSourceFactory.createDataSource(yamlFile);
+```
+
+## ShardingSphere-2.x
+
+### 读写分离
+
+#### 概念
+
+为了缓解数据库压力，将写入和读取操作分离为不同数据源，写库称为主库，读库称为从库，一主库可配置多从库。
+
+#### 支持项
+
+1. 提供了一主多从的读写分离配置，可独立使用，也可配合分库分表使用。
+2. 独立使用读写分离支持SQL透传。
+3. 同一线程且同一数据库连接内，如有写入操作，以后的读操作均从主库读取，用于保证数据一致性。
+4. Spring命名空间。
+5. 基于Hint的强制主库路由。
+
+#### 不支持范围
+
+1. 主库和从库的数据同步。
+2. 主库和从库的数据同步延迟导致的数据不一致。
+3. 主库双写或多写。
+
+#### 配置规则
+
+```yaml
+dataSources:
+  db_master: !!org.apache.commons.dbcp.BasicDataSource
+    driverClassName: org.h2.Driver
+    url: jdbc:h2:mem:db_master;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;MODE=MYSQL
+    username: sa
+    password: 
+    maxActive: 100
+  db_slave_0: !!org.apache.commons.dbcp.BasicDataSource
+    driverClassName: org.h2.Driver
+    url: jdbc:h2:mem:db_slave_0;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;MODE=MYSQL
+    username: sa
+    password: 
+    maxActive: 100
+  db_slave_1: !!org.apache.commons.dbcp.BasicDataSource
+      driverClassName: org.h2.Driver
+      url: jdbc:h2:mem:db_slave_1;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;MODE=MYSQL
+      username: sa
+      password: 
+      maxActive: 100
+
+masterSlaveRule:
+  name: db_ms
+  masterDataSourceName: db_master
+  slaveDataSourceNames: [db_slave_0, db_slave_1]
+  configMap:
+    key1: value1
+```
+
+通过 `MasterSlaveDataSourceFactory` 工厂类创建 `DataSource`：
+
+```java
+DataSource dataSource = MasterSlaveDataSourceFactory.createDataSource(yamlFile);
+```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/change-history.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/change-history.en.md
index 7aaa189dad..d238f19d83 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/change-history.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/change-history.en.md
@@ -33,3 +33,141 @@ props:
 ```
 
 Please refer to [Built-in Load Balance Algorithm List](/en/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/load-balance) for more details about type of algorithm.
+
+## ShardingSphere-4.x
+
+### Read-Write Split
+
+#### Configuration Item Explanation
+
+```yaml
+dataSources:
+  ds_master: !!org.apache.commons.dbcp.BasicDataSource
+    driverClassName: com.mysql.jdbc.Driver
+    url: jdbc:mysql://localhost:3306/ds_master
+    username: root
+    password: 
+  ds_slave0: !!org.apache.commons.dbcp.BasicDataSource
+    driverClassName: com.mysql.jdbc.Driver
+    url: jdbc:mysql://localhost:3306/ds_slave0
+    username: root
+    password:
+  ds_slave1: !!org.apache.commons.dbcp.BasicDataSource
+    driverClassName: com.mysql.jdbc.Driver
+    url: jdbc:mysql://localhost:3306/ds_slave1
+    username: root
+    password: 
+
+masterSlaveRule:
+  name: ds_ms
+  masterDataSourceName: ds_master
+  slaveDataSourceNames: [ds_slave0, ds_slave1]
+  
+props:
+  sql.show: true
+```
+
+Create a `DataSource` through the `YamlMasterSlaveDataSourceFactory` factory class:
+
+```java
+DataSource dataSource = YamlMasterSlaveDataSourceFactory.createDataSource(yamlFile);
+```
+
+## ShardingSphere-3.x
+
+### Read-Write Split
+
+#### Configuration Item Explanation
+
+```yaml
+dataSources:
+  ds_master: !!org.apache.commons.dbcp.BasicDataSource
+    driverClassName: com.mysql.jdbc.Driver
+    url: jdbc:mysql://localhost:3306/ds_master
+    username: root
+    password: 
+  ds_slave0: !!org.apache.commons.dbcp.BasicDataSource
+    driverClassName: com.mysql.jdbc.Driver
+    url: jdbc:mysql://localhost:3306/ds_slave0
+    username: root
+    password:
+  ds_slave1: !!org.apache.commons.dbcp.BasicDataSource
+    driverClassName: com.mysql.jdbc.Driver
+    url: jdbc:mysql://localhost:3306/ds_slave1
+    username: root
+    password: 
+
+masterSlaveRule:
+  name: ds_ms
+  masterDataSourceName: ds_master
+  slaveDataSourceNames: [ds_slave0, ds_slave1]
+  props:
+      sql.show: true
+  configMap:
+      key1: value1
+```
+
+Create a `DataSource` through the `MasterSlaveDataSourceFactory` factory class:
+
+```java
+DataSource dataSource = MasterSlaveDataSourceFactory.createDataSource(yamlFile);
+```
+
+## ShardingSphere-2.x
+
+### Read-Write Split
+
+#### Concept
+
+In order to relieve the pressure on the database, the write and read operations are separated into different data sources. The write library is called the master library, and the read library is called the slave library. One master library can be configured with multiple slave libraries.
+
+#### Support item
+
+1. Provides a read-write separation configuration with one master and multiple slaves, which can be used independently or with sub-databases and sub-meters.
+2. Independent use of read-write separation to support SQL transparent transmission.
+3. In the same thread and the same database connection, if there is a write operation, subsequent read operations will be read from the main library to ensure data consistency.
+4. Spring namespace.
+5. Hint-based mandatory main library routing.
+
+#### Unsupported item
+
+1. Data synchronization between the master library and the slave library.
+2. Data inconsistency caused by the data synchronization delay of the master library and the slave library.
+3. Double writing or multiple writing in the main library.
+
+#### Configuration Item Explanation
+
+```yaml
+dataSources:
+  db_master: !!org.apache.commons.dbcp.BasicDataSource
+    driverClassName: org.h2.Driver
+    url: jdbc:h2:mem:db_master;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;MODE=MYSQL
+    username: sa
+    password: 
+    maxActive: 100
+  db_slave_0: !!org.apache.commons.dbcp.BasicDataSource
+    driverClassName: org.h2.Driver
+    url: jdbc:h2:mem:db_slave_0;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;MODE=MYSQL
+    username: sa
+    password: 
+    maxActive: 100
+  db_slave_1: !!org.apache.commons.dbcp.BasicDataSource
+      driverClassName: org.h2.Driver
+      url: jdbc:h2:mem:db_slave_1;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;MODE=MYSQL
+      username: sa
+      password: 
+      maxActive: 100
+
+masterSlaveRule:
+  name: db_ms
+  masterDataSourceName: db_master
+  slaveDataSourceNames: [db_slave_0, db_slave_1]
+  configMap:
+    key1: value1
+```
+
+Create a `DataSource` through the `MasterSlaveDataSourceFactory` factory class:
+
+```java
+DataSource dataSource = MasterSlaveDataSourceFactory.createDataSource(yamlFile);
+```
\ No newline at end of file
