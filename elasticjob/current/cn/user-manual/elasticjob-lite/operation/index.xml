<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>运维手册 on ElasticJob</title>
    <link>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-lite/operation/</link>
    <description>Recent content in 运维手册 on ElasticJob</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-lite/operation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>部署指南</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-lite/operation/deploy-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-lite/operation/deploy-guide/</guid>
      <description>应用部署   启动 ElasticJob-Lite 指定注册中心的 Zookeeper。
  运行包含 ElasticJob-Lite 和业务代码的 jar 文件。不限于 jar 或 war 的启动方式。
  运维平台和 RESTFul API 部署(可选)   解压缩 elasticjob-lite-console-${version}.tar.gz 并执行 bin\start.sh。
  打开浏览器访问 http://localhost:8899/ 即可访问控制台。8899 为默认端口号，可通过启动脚本输入 -p 自定义端口号。
  访问 RESTFul API 方法同控制台。
  elasticjob-lite-console-${version}.tar.gz可通过 mvn install 编译获取。
  </description>
    </item>
    
    <item>
      <title>Dump 作业运行信息</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-lite/operation/dump/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-lite/operation/dump/</guid>
      <description>使用 ElasticJob-Lite 过程中可能会碰到一些分布式问题，导致作业运行不稳定。
由于无法在生产环境调试，通过 dump 命令可以把作业内部相关信息导出，方便开发者调试分析； 另外为了不泄露隐私，已将相关信息中的 IP 地址以 ip1, ip2&amp;hellip; 的形式过滤，可以在互联网上公开传输环境信息，便于进一步完善 ElasticJob。
如何使用 配置监听端口 支持 2 种配置方式
 Spring 方式  &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;beans xmlns=&amp;#34;http://www.springframework.org/schema/beans&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xmlns:elasticjob=&amp;#34;http://shardingsphere.apache.org/schema/elasticjob&amp;#34; xsi:schemaLocation=&amp;#34;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://shardingsphere.apache.org/schema/elasticjob http://shardingsphere.apache.org/schema/elasticjob/elasticjob.xsd &amp;#34;&amp;gt; &amp;lt;!--配置作业注册中心 --&amp;gt; &amp;lt;elasticjob:zookeeper id=&amp;#34;regCenter&amp;#34; server-lists=&amp;#34;yourhost:2181&amp;#34; namespace=&amp;#34;dd-job&amp;#34; base-sleep-time-milliseconds=&amp;#34;1000&amp;#34; max-sleep-time-milliseconds=&amp;#34;3000&amp;#34; max-retries=&amp;#34;3&amp;#34; /&amp;gt; &amp;lt;!--配置任务快照 --&amp;gt; &amp;lt;elasticjob:snapshot id=&amp;#34;jobSnapshot&amp;#34; registry-center-ref=&amp;#34;regCenter&amp;#34; dump-port=&amp;#34;9999&amp;#34;/&amp;gt; &amp;lt;!--配置作业类 --&amp;gt; &amp;lt;bean id=&amp;#34;simpleJob&amp;#34; class=&amp;#34;xxx.MyElasticJob&amp;#34; /&amp;gt; &amp;lt;!-- 配置作业--&amp;gt; &amp;lt;elasticjob:simple id=&amp;#34;oneOffElasticJob&amp;#34; job-ref=&amp;#34;simpleJob&amp;#34; registry-center-ref=&amp;#34;regCenter&amp;#34; cron=&amp;#34;0/10 * * * * ?&amp;#34; sharding-total-count=&amp;#34;3&amp;#34; sharding-item-parameters=&amp;#34;0=A,1=B,2=C&amp;#34; /&amp;gt; &amp;lt;/beans&amp;gt;  Java 方式  public class JobMain { public static void main(final String[] args) { // .</description>
    </item>
    
    <item>
      <title>自诊断修复</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-lite/operation/job-reconcile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-lite/operation/job-reconcile/</guid>
      <description>在分布式的场景下由于网络、时钟等原因，可能导致 ZooKeeper 的数据与真实运行的作业产生不一致，这种不一致通过正向的校验无法完全避免。 需要另外启动一个线程定时校验注册中心数据与真实作业状态的一致性，即维持 ElasticJob 的最终一致性。
在 2.0.6 之前的版本中，网络不稳定的环境下 ElasticJob 有可能有的作业分片并未执行，重启一下就能修复。 在2.0.6，版本中 ElasticJob 在提供 reconcileIntervalMinutes 设置修复状态服务执行间隔分钟数，用于修复作业服务器不一致状态，默认每 10 分钟检测并修复一次。
支持两种配置方式
 Spring 方式  &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;beans xmlns=&amp;#34;http://www.springframework.org/schema/beans&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xmlns:elasticjob=&amp;#34;http://shardingsphere.apache.org/schema/elasticjob&amp;#34; xsi:schemaLocation=&amp;#34;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://shardingsphere.apache.org/schema/elasticjob http://shardingsphere.apache.org/schema/elasticjob/elasticjob.xsd &amp;#34;&amp;gt; &amp;lt;!--配置作业注册中心 --&amp;gt; &amp;lt;elasticjob:zookeeper id=&amp;#34;regCenter&amp;#34; server-lists=&amp;#34;yourhost:2181&amp;#34; namespace=&amp;#34;elastic-job&amp;#34; base-sleep-time-milliseconds=&amp;#34;1000&amp;#34; max-sleep-time-milliseconds=&amp;#34;3000&amp;#34; max-retries=&amp;#34;3&amp;#34; /&amp;gt; &amp;lt;!--配置作业类 --&amp;gt; &amp;lt;bean id=&amp;#34;simpleJob&amp;#34; class=&amp;#34;xxx.MyElasticJob&amp;#34; /&amp;gt; &amp;lt;!--配置作业 --&amp;gt; &amp;lt;elasticjob:simple id=&amp;#34;oneOffElasticJob&amp;#34; job-ref=&amp;#34;simpleJob&amp;#34; registry-center-ref=&amp;#34;regCenter&amp;#34; reconcile-interval-minutes=&amp;#34;10&amp;#34; cron=&amp;#34;0/10 * * * * ?&amp;#34; sharding-total-count=&amp;#34;3&amp;#34; sharding-item-parameters=&amp;#34;0=A,1=B,2=C&amp;#34; /&amp;gt; &amp;lt;/beans&amp;gt;  Java 方式  public class JobMain { public static void main(final String[] args) { // .</description>
    </item>
    
    <item>
      <title>作业运行状态监控</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-lite/operation/execution-monitor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-lite/operation/execution-monitor/</guid>
      <description>通过监听 ElasticJob-Lite 的 ZooKeeper 注册中心的几个关键节点即可完成作业运行状态监控功能。
监听作业服务器存活 监听 job_name\instances\job_instance_id 节点是否存在。该节点为临时节点，如果作业服务器下线，该节点将删除。</description>
    </item>
    
    <item>
      <title>运维平台</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-lite/operation/web-console/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-lite/operation/web-console/</guid>
      <description>解压缩elasticjob-lite-console-${version}.tar.gz并执行bin\start.sh。打开浏览器访问http://localhost:8899/即可访问控制台。8899为默认端口号，可通过启动脚本输入-p自定义端口号。
elasticjob-lite-console-${version}.tar.gz可通过mvn install编译获取。
登录 提供两种账户，管理员及访客，管理员拥有全部操作权限，访客仅拥有察看权限。默认管理员用户名和密码是root/root，访客用户名和密码是guest/guest，可通过conf\auth.properties修改管理员及访客用户名及密码。
功能列表   登录安全控制
  注册中心、事件追踪数据源管理
  快捷修改作业设置
  作业和服务器维度状态查看
  操作作业禁用\启用、停止和删除等生命周期
  事件追踪查询
  设计理念 运维平台和 ElasticJob-Lite 并无直接关系，是通过读取作业注册中心数据展现作业状态，或更新注册中心数据修改全局配置。
控制台只能控制作业本身是否运行，但不能控制作业进程的启动，因为控制台和作业本身服务器是完全分离的，控制台并不能控制作业服务器。
不支持项  添加作业  作业在首次运行时将自动添加。ElasticJob-Lite 以 jar 方式启动，并无作业分发功能。如需完全通过运维平台发布作业，请使用 ElasticJob-Cloud。</description>
    </item>
    
  </channel>
</rss>