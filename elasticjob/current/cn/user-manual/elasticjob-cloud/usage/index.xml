<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>使用手册 on ElasticJob</title>
    <link>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-cloud/usage/</link>
    <description>Recent content in 使用手册 on ElasticJob</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-cloud/usage/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>开发指南</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-cloud/usage/dev-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-cloud/usage/dev-guide/</guid>
      <description>0. 环境需求 Java 请使用JDK1.7及其以上版本。详情参见
Zookeeper 请使用Zookeeper 3.4.6及其以上版本。详情参见
Maven 请使用Maven 3.0.4及其以上版本。详情参见
Mesos 请使用Mesos 0.28.0及其以上版本。详情参见
1. 作业开发 Elastic-Job-Lite和Elastic-Job-Cloud提供统一作业接口，开发者仅需对业务作业进行一次开发，之后可根据不同的配置以及部署至不同的Lite或Cloud环境。
Elastic-Job提供Simple、Dataflow和Script 3种作业类型。 方法参数shardingContext包含作业配置、片和运行时信息。可通过getShardingTotalCount(), getShardingItem()等方法分别获取分片总数，运行在本作业服务器的分片序列号等。
a. Simple类型作业 意为简单实现，未经任何封装的类型。需实现SimpleJob接口。该接口仅提供单一方法用于覆盖，此方法将定时执行。与Quartz原生接口相似，但提供了弹性扩缩容和分片等功能。
public class MyElasticJob implements SimpleJob { @Override public void execute(ShardingContext context) { switch (context.getShardingItem()) { case 0: // do something by sharding item 0  break; case 1: // do something by sharding item 1  break; case 2: // do something by sharding item 2  break; // case n: .</description>
    </item>
    
    <item>
      <title>本地运行模式</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-cloud/usage/local-executor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/cn/user-manual/elasticjob-cloud/usage/local-executor/</guid>
      <description>在开发Elastic-Job-Cloud作业时，开发人员可以脱离Mesos环境，在本地运行和调试作业。可以利用本地运行模式充分的调试业务功能以及单元测试，完成之后再部署至Mesos集群。
本地运行作业无需安装Mesos环境。
配置 使用io.elasticjob.cloud.executor.local.LocalCloudJobConfiguration配置本地作业。
LocalCloudJobConfiguration config = new LocalCloudJobConfiguration( new SimpleJobConfiguration(JobCoreConfiguration.newBuilder(&amp;#34;FooJob&amp;#34;, &amp;#34;*/2 * * * * ?&amp;#34;, 3) //1  .shardingItemParameters(&amp;#34;0=Beijing,1=Shanghai,2=Guangzhou&amp;#34;) .jobParameter(&amp;#34;dbName=dangdang&amp;#34;).build(), &amp;#34;com.xxx.foo.FooJob&amp;#34;), 1, //2  &amp;#34;testSimpleJob&amp;#34; , &amp;#34;applicationContext.xml&amp;#34;); //3  配置作业类型和作业基本信息。 配置当前运行的作业是第几个分片。 配置Spring相关参数。  运行 使用io.elasticjob.cloud.executor.local.LocalTaskExecutor运行作业。
new LocalTaskExecutor(localJobConfig).execute(); </description>
    </item>
    
  </channel>
</rss>