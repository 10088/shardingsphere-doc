commit a435f17cb7cc1f7e3b5c310bb7ff2d7b3e1d9f12
Author: 吴伟杰 <wuweijie@apache.org>
Date:   Fri Dec 31 15:42:24 2021 +0800

    Add Snapshot deploying guides for ElasticJob (#14461)

diff --git a/docs/community/content/contribute/release-elasticjob.cn.md b/docs/community/content/contribute/release-elasticjob.cn.md
index 65dbf8c504..5b07b99c6c 100644
--- a/docs/community/content/contribute/release-elasticjob.cn.md
+++ b/docs/community/content/contribute/release-elasticjob.cn.md
@@ -1,18 +1,18 @@
 +++
-title = "ElasticJob发布指南"
+title = "ElasticJob 发布指南"
 weight = 9
 chapter = true
 +++
 
-## GPG设置
+## 发布准备
 
-详情请参见[发布指南](/cn/contribute/release/)。
+### GPG 设置
 
-## 发布Apache Maven中央仓库
+详情请参见[发布指南](/cn/contribute/release/)。
 
-**1. 设置settings.xml文件**
+### 设置 settings.xml 文件
 
-将以下模板添加到 `~/.m2/settings.xml`中，所有密码需要加密后再填入。
+将以下模板添加到 `~/.m2/settings.xml` 中，所有密码需要加密后再填入。
 加密设置可参考[这里](http://maven.apache.org/guides/mini/guide-encryption.html)。
 
 ```xml
@@ -31,7 +31,32 @@ chapter = true
   </servers>
 </settings>
 ```
-**2. 更新版本说明和示例版本**
+
+## Apache Snapshot 发布
+
+### 部署到 Apache Snapshot 仓库
+
+**1. 确保本地构建项目正常**
+
+```bash
+./mvnw clean install
+```
+
+**2. 部署 Snapshot 仓库**
+
+```bash
+./mvnw deploy -DrepositoryId=apache.snapshots.https -T1C
+```
+
+**3. 检查 Snapshot 仓库上传结果**
+
+<https://repository.apache.org/content/groups/snapshots/org/apache/shardingsphere/elasticjob/>
+
+## Apache Release 发布
+
+### 部署到 Apache Maven 中央仓库
+
+**1. 更新版本说明和示例版本**
 
 在Github主干上更新如下文件，并提交PR到主干：
 
@@ -41,7 +66,7 @@ https://github.com/apache/shardingsphere-elasticjob/blob/master/RELEASE-NOTES.md
 
 更新`examples`模块的pom，将版本由${CURRENT.VERSION}替换为${RELEASE.VERSION}。
 
-**3. 创建发布分支**
+**2. 创建发布分支**
 
 假设从github下载的ElasticJob源代码在`~/elasticjob/`目录；假设即将发布的版本为`${RELEASE.VERSION}`。
 创建`${RELEASE.VERSION}-release`分支，接下来的操作都在该分支进行。
@@ -55,7 +80,7 @@ git checkout -b ${RELEASE.VERSION}-release
 git push origin ${RELEASE.VERSION}-release
 ```
 
-**4. 发布预校验**
+**3. 发布预校验**
 
 ```shell
 mvn release:prepare -Prelease -Darguments="-DskipTests" -DautoVersionSubmodules=true -DdryRun=true -Dusername=${Github用户名}
@@ -67,7 +92,7 @@ mvn release:prepare -Prelease -Darguments="-DskipTests" -DautoVersionSubmodules=
 
 -DdryRun=true：演练，即不产生版本号提交，不生成新的tag。
 
-**5. 准备发布**
+**4. 准备发布**
 
 首先清理发布预校验本地信息。
 
@@ -90,7 +115,7 @@ git push origin ${RELEASE.VERSION}-release
 git push origin --tags
 ```
 
-**6. 部署发布**
+**5. 部署发布**
 
 ```shell
 mvn release:perform -Prelease -Darguments="-DskipTests" -DautoVersionSubmodules=true -Dusername=${Github用户名}
@@ -101,7 +126,7 @@ mvn release:perform -Prelease -Darguments="-DskipTests" -DautoVersionSubmodules=
 点击`Close`来告诉Nexus这个构建已经完成，只有这样该版本才是可用的。
 如果电子签名等出现问题，`Close`会失败，可以通过`Activity`查看失败信息。
 
-## 发布Apache SVN仓库
+### 发布Apache SVN仓库
 
 **1. 检出shardingsphere发布目录**
 
@@ -152,7 +177,7 @@ svn add *
 svn --username=${APACHE LDAP 用户名} commit -m "release elasticjob-${RELEASE.VERSION}"
 ```
 
-## 检查发布结果
+### 检查发布结果
 
 **检查sha512哈希**
 
@@ -232,7 +257,7 @@ diff -r apache-shardingsphere-elasticjob-${RELEASE.VERSION}-src-release sharding
   - 依赖许可证的完整版全部在`license`目录
   - 如果依赖的是Apache许可证并且存在`NOTICE`文件，那么这些`NOTICE`文件也需要加入到版本的`NOTICE`文件中
 
-## 发起投票
+### 发起投票
 
 **投票阶段**
 
@@ -332,7 +357,7 @@ Thank you everyone for taking the time to review the release and help us.
 I will process to publish the release and send ANNOUNCE.
 ```
 
-## 完成发布
+### 完成发布
 
 **1. 将源码、二进制包以及KEYS从svn的dev目录移动到release目录**
 
diff --git a/docs/community/content/contribute/release-elasticjob.en.md b/docs/community/content/contribute/release-elasticjob.en.md
index ac4d363815..3dd568612e 100644
--- a/docs/community/content/contribute/release-elasticjob.en.md
+++ b/docs/community/content/contribute/release-elasticjob.en.md
@@ -4,15 +4,15 @@ weight = 9
 chapter = true
 +++
 
-## GPG Settings
+## Preparation
 
-Please refer to [Release Guide](/en/contribute/release/).
+### GPG Setup
 
-## Apache Maven Central Repository Release
+Please refer to [Release Guide](/en/contribute/release/).
 
-**1. Set settings.xml**
+### Setting settings.xml
 
-Add the following template to `~/.m2/settings.xml`, all the passwords need to be filled in after encryption. 
+Add the following template to `~/.m2/settings.xml`, all the passwords need to be filled in after encryption.
 For encryption settings, please see [here](http://maven.apache.org/guides/mini/guide-encryption.html).
 
 ```xml
@@ -32,7 +32,32 @@ For encryption settings, please see [here](http://maven.apache.org/guides/mini/g
 </settings>
 ```
 
-**2. Update Release Notes And Example Version**
+## Publishing Apache Snapshot
+
+### Deploying to Apache Snapshot Repository
+
+**1. Ensure that building project can be succeeded**
+
+```bash
+./mvnw clean install
+```
+
+**2. Deploying to Snapshot Repository**
+
+```bash
+./mvnw deploy -DrepositoryId=apache.snapshots.https -T1C
+```
+
+**3. Check if artifacts present in Snapshot Repository**
+
+<https://repository.apache.org/content/groups/snapshots/org/apache/shardingsphere/elasticjob/>
+
+## Publishing Apache Release
+
+### Deploying to Apache Maven Central Repository
+
+
+**1. Update Release Notes And Example Version**
 
 Update the following file in master branch, and submit a PR to master branch:
 
@@ -42,7 +67,7 @@ https://github.com/apache/shardingsphere-elasticjob/blob/master/RELEASE-NOTES.md
 
 Update the POM of the module `examples`, changing the version from ${CURRENT.VERSION} to ${RELEASE.VERSION}.
 
-**3. Create Release Branch**
+**2. Create Release Branch**
 
 Suppose ElasticJob source codes downloaded from github is under `~/elasticjob/` directory and the version to be released is `${RELEASE.VERSION}`. 
 Create `${RELEASE.VERSION}-release` branch, where all the following operations are performed.
@@ -56,7 +81,7 @@ git checkout -b ${RELEASE.VERSION}-release
 git push origin ${RELEASE.VERSION}-release
 ```
 
-**4. Pre-Release Check**
+**3. Pre-Release Check**
 
 ```shell
 mvn release:prepare -Prelease -Darguments="-DskipTests" -DautoVersionSubmodules=true -DdryRun=true -Dusername=${Github username}
@@ -68,7 +93,7 @@ mvn release:prepare -Prelease -Darguments="-DskipTests" -DautoVersionSubmodules=
 
 -DdryRun=true: rehearsal, which means not to generate or submit new version number and new tag.
 
-**5. Prepare for the Release**
+**4. Prepare for the Release**
 
 First, clean local pre-release check information.
 
@@ -91,7 +116,7 @@ git push origin ${RELEASE.VERSION}-release
 git push origin --tags
 ```
 
-**6. Deploy the Release**
+**5. Deploy the Release**
 
 ```shell
 mvn release:perform -Prelease -Darguments="-DskipTests" -DautoVersionSubmodules=true -Dusername=${Github username}
@@ -102,7 +127,7 @@ Visit [https://repository.apache.org/#stagingRepositories](https://repository.ap
 Click `Close` to tell Nexus that the construction is finished, because only in this way, this version can be usable. 
 If there is any problem in gpg signature, `Close` will fail, but you can see the failure information through `Activity`.
 
-## Apache SVN Repository Release
+### Apache SVN Repository Release
 
 **1. Checkout ShardingSphere Release Directory**
 
@@ -154,7 +179,7 @@ svn add *
 svn --username=${APACHE LDAP username} commit -m "release elasticjob-${RELEASE.VERSION}"
 ```
 
-## Check Release
+### Check Release
 
 **Check sha512 hash**
 
@@ -335,7 +360,7 @@ I will process to publish the release and send ANNOUNCE.
 
 ```
 
-## Finish the Release
+### Finish the Release
 
 **1. Move source packages, binary packages and KEYS from the `dev` directory to `release` directory**
 
