commit c0a66492b6656ca15aac8cd880350a91c1e45bb0
Author: Liang Zhang <terrymanu@163.com>
Date:   Thu May 6 23:57:29 2021 +0800

    Rename ReadWrite to Readwrite (#10261)
    
    * Rename ReadWriteSplittingRule
    
    * Rename ReadwriteSplittingDataSourceRuleConfiguration
    
    * Rename ReadwriteSplittingSQLRouter
    
    * Rename ReadwriteSplittingDataSourceRouter
    
    * Rename ReadwriteSplittingRule
    
    * Rename ReadwriteSplittingDataSourceRule
    
    * Rename AlgorithmProvidedReadwriteSplittingRuleBuilder
    
    * Rename ReadwriteSplittingRuleBuilder
    
    * rename ReadwriteSplittingOrder
    
    * Rename AlgorithmProvidedReadwriteSplittingRuleConfiguration
    
    * Rename YamlReadwriteSplittingRuleConfiguration
    
    * Rename YamlReadwriteSplittingDataSourceRuleConfiguration
    
    * Rename AlterReadwriteSplittingRuleStatementConverter
    
    * Rename CreateReadwriteSplittingRuleStatementConverter
    
    * Rename ReadwriteSplittingRuleAlgorithmProviderConfigurationYamlSwapper
    
    * Rename ReadwriteSplittingRuleConfigurationYamlSwapper
    
    * Rename ReadwriteSplittingAlgorithmProvidedBeanRegistry
    
    * Rename ReadwriteSplittingSpringBootCondition
    
    * Rename YamlReadwriteSplittingRuleSpringBootConfiguration
    
    * Rename ReadwriteSplittingRuleSpringbootConfiguration
    
    * Rename ReadwriteSplittingSpringBootStarterTest
    
    * Rename YamlGovernanceReadwriteSplittingIntegrateTest
    
    * Rename CreateReadwriteSplittingRuleStatement
    
    * Rename ReadwriteSplittingRuleSegment
    
    * Rename GovernanceSpringBootRegistryReadwriteSplittingTest
    
    * Rename AlterReadwriteSplittingRuleStatement
    
    * Rename ReadwriteSplittingRuleConfigurationChecker
    
    * Rename LocalShardingReadwriteSplittingConfiguration
    
    * Rename ReadwriteSplittingRuleNotExistedException
    
    * Rename ReadwriteSplittingRuleCreateExistsException
    
    * Rename AddReadwriteSplittingRuleDataSourcesExistedException
    
    * Rename ReadwriteSplittingRuleDataSourcesNotExistedException
    
    * Rename ReadwriteSplittingRuleQueryBackendHandler
    
    * Rename DropReadwriteSplittingRuleBackendHandler
    
    * Rename GovernanceSpringBootReadwriteSplittingTest
    
    * Rename AlterReadwriteSplittingRuleBackendHandler
    
    * Rename CreateReadwriteSplittingRuleBackendHandler
    
    * Rename GovernanceShardingReadwriteSplittingNamespaceTest
    
    * Rename YamlGovernanceShardingWithReadwriteSplittingIntegrateTest
    
    * Rename CloudReadwriteSplittingConfiguration
    
    * Rename ShardingReadwriteSplittingConfigurationPrecise
    
    * Rename AbstractShardingSphereDataSourceForReadwriteSplittingTest
    
    * Rename AlgorithmProvidedReadwriteSplittingRuleConfigurationChecker
    
    * Rename ReadwriteSplittingSpringNamespaceTest
    
    * Rename ReadwriteSplittingRuleBeanDefinitionTag
    
    * Rename AbstractReadwriteSplittingRuleConfigurationChecker
    
    * Rename ReadwriteSplittingNamespaceHandler
    
    * Rename ReadwriteSplittingRuleBeanDefinitionParser
    
    * Rename ReadWrite to Readwrite with java class
    
    * Rename ReadWrite to Readwrite with docs

diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.cn.md
index af837b8d1c..5a6de7afd8 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.cn.md
@@ -87,14 +87,14 @@ encryptAlgorithmConfigs.put("pwd_encryptor", new ShardingSphereAlgorithmConfigur
 EncryptRuleConfiguration encryptRuleConfiguration = new EncryptRuleConfiguration(Collections.singleton(encryptTableRuleConfig), encryptAlgorithmConfigs);
 
 /* 读写分离规则配置 */
-ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadWriteSplittingDataSourceRuleConfiguration("ds_0", "write_ds0", Arrays.asList("write_ds0_read0", "write_ds0_read1"), "roundRobin");
-ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadWriteSplittingDataSourceRuleConfiguration("ds_1", "write_ds0", Arrays.asList("write_ds1_read0", "write_ds1_read0"), "roundRobin");
+ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration("ds_0", "write_ds0", Arrays.asList("write_ds0_read0", "write_ds0_read1"), "roundRobin");
+ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration("ds_1", "write_ds0", Arrays.asList("write_ds1_read0", "write_ds1_read0"), "roundRobin");
 
 //负载均衡算法
 Map<String, ShardingSphereAlgorithmConfiguration> loadBalanceMaps = new HashMap<>(1);
 loadBalanceMaps.put("roundRobin", new ShardingSphereAlgorithmConfiguration("ROUND_ROBIN", new Properties()));
 
-ReadWriteSplittingRuleConfiguration readWriteSplittingyRuleConfiguration = new ReadWriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), loadBalanceMaps);
+ReadwriteSplittingRuleConfiguration readWriteSplittingyRuleConfiguration = new ReadwriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), loadBalanceMaps);
 
 /* 其他配置 */
 Properties otherProperties = new Properties();
@@ -103,5 +103,4 @@ otherProperties.setProperty("query-with-cipher-column", "true");
 
 /* shardingDataSource 就是最终被ORM框架或其他jdbc框架引用的数据源名称 */
 DataSource shardingDataSource = ShardingSphereDataSourceFactory.createDataSource(datasourceMaps, Arrays.asList(shardingRuleConfiguration, readWriteSplittingyRuleConfiguration, encryptRuleConfiguration), otherProperties);
-
-```
\ No newline at end of file
+```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.en.md
index 73373820fa..728e4999e1 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.en.md
@@ -83,14 +83,14 @@ encryptAlgorithmConfigs.put("pwd_encryptor", new ShardingSphereAlgorithmConfigur
 EncryptRuleConfiguration encryptRuleConfiguration = new EncryptRuleConfiguration(Collections.singleton(encryptTableRuleConfig), encryptAlgorithmConfigs);
 
 /* Readwrite-splitting rule configuration */
-ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadWriteSplittingDataSourceRuleConfiguration("ds_0", "write_ds0", Arrays.asList("write_ds0_read0", "write_ds0_read1"), "roundRobin");
-ReadWriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadWriteSplittingDataSourceRuleConfiguration("ds_1", "write_ds0", Arrays.asList("write_ds1_read0", "write_ds1_read0"), "roundRobin");
+ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration("ds_0", "write_ds0", Arrays.asList("write_ds0_read0", "write_ds0_read1"), "roundRobin");
+ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration("ds_1", "write_ds0", Arrays.asList("write_ds1_read0", "write_ds1_read0"), "roundRobin");
 
 // Load balance algorithm configuration
 Map<String, ShardingSphereAlgorithmConfiguration> loadBalanceMaps = new HashMap<>(1);
 loadBalanceMaps.put("roundRobin", new ShardingSphereAlgorithmConfiguration("ROUND_ROBIN", new Properties()));
 
-ReadWriteSplittingRuleConfiguration readWriteSplittingRuleConfiguration = new ReadWriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), loadBalanceMaps);
+ReadwriteSplittingRuleConfiguration readWriteSplittingRuleConfiguration = new ReadwriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), loadBalanceMaps);
 
 /* Other Properties configuration */
 Properties otherProperties = new Properties();
@@ -99,5 +99,4 @@ otherProperties.setProperty("query-with-cipher-column", "true");
 
 /* The variable `shardingDataSource` is the logic data source referenced by other frameworks(such as ORM, JPA, etc.) */
 DataSource shardingDataSource = ShardingSphereDataSourceFactory.createDataSource(datasourceMaps, Arrays.asList(shardingRuleConfiguration, readWriteSplittingRuleConfiguration, encryptRuleConfiguration), otherProperties);
-
-```
\ No newline at end of file
+```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/readwrite-splitting.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/readwrite-splitting.cn.md
index c06357efec..d02716cc76 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/readwrite-splitting.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/readwrite-splitting.cn.md
@@ -5,26 +5,26 @@ weight = 2
 
 ## 配置入口
 
-类名称：ReadWriteSplittingRuleConfiguration
+类名称：ReadwriteSplittingRuleConfiguration
 
 可配置属性：
 
-| *名称*             | *数据类型*                                             | *说明*            |
-| ----------------- | ----------------------------------------------------- | ----------------- |
-| dataSources (+)   | Collection\<ReadWriteSplittingDataSourceRuleConfiguration\> | 读写数据源配置      |
-| loadBalancers (*) | Map\<String, ShardingSphereAlgorithmConfiguration\>   | 从库负载均衡算法配置 |
+| *名称*             | *数据类型*                                                   | *说明*            |
+| ----------------- | ----------------------------------------------------------- | ----------------- |
+| dataSources (+)   | Collection\<ReadwriteSplittingDataSourceRuleConfiguration\> | 读写数据源配置      |
+| loadBalancers (*) | Map\<String, ShardingSphereAlgorithmConfiguration\>         | 从库负载均衡算法配置 |
 
 ## 主从数据源配置
 
-类名称：ReadWriteSplittingDataSourceRuleConfiguration
+类名称：ReadwriteSplittingDataSourceRuleConfiguration
 
 可配置属性：
 
 | *名称*                     | *数据类型*             | *说明*             | *默认值*       |
-| -------------------------- | -------------------- | ------------------ | ------------- |
+| -------------------------- | -------------------- | ----------------- | ------------ |
 | name                       | String               | 读写分离数据源名称   | -             |
-| writeDataSourceName        | String               | 写库数据源名称       | -              |
-| readDataSourceNames (+)    | Collection\<String\> | 读库数据源名称列表   | -              |
+| writeDataSourceName        | String               | 写库数据源名称      | -             |
+| readDataSourceNames (+)    | Collection\<String\> | 读库数据源名称列表   | -             |
 | loadBalancerName (?)       | String               | 读库负载均衡算法名称 | 轮询负载均衡算法 |
 
 算法类型的详情，请参见[内置负载均衡算法列表](/cn/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/load-balance)。
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/readwrite-splitting.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/readwrite-splitting.en.md
index e9cfb77107..6b5dc34a52 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/readwrite-splitting.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/readwrite-splitting.en.md
@@ -5,24 +5,24 @@ weight = 2
 
 ## Root Configuration
 
-Class name: ReadWriteSplittingRuleConfiguration
+Class name: ReadwriteSplittingRuleConfiguration
 
 Attributes:
 
 | *Name*            | *DataType*                                            | *Description*                                                          |
 | ----------------- | ----------------------------------------------------- | ---------------------------------------------------------------------- |
-| dataSources (+)   | Collection\<ReadWriteSplittingDataSourceRuleConfiguration\> | Data sources of write and reads                                   |
+| dataSources (+)   | Collection\<ReadwriteSplittingDataSourceRuleConfiguration\> | Data sources of write and reads                                  |
 | loadBalancers (*) | Map\<String, ShardingSphereAlgorithmConfiguration\>   | Load balance algorithm name and configurations of replica data sources |
 
 ## Readwrite-splitting Data Source Configuration
 
-Class name: ReadWriteSplittingDataSourceRuleConfiguration
+Class name: ReadwriteSplittingDataSourceRuleConfiguration
 
 Attributes:
 
 | *Name*                     | *DataType*           | *Description*                                  | *Default Value*                    |
 | -------------------------- | -------------------- | ---------------------------------------------- | ---------------------------------- |
-| name                       | String               | Readwrite-splitting data source name          | -                                  |
+| name                       | String               | Readwrite-splitting data source name           | -                                  |
 | writeDataSourceName        | String               | Write sources source name                      | -                                  |
 | readDataSourceNames (+)    | Collection\<String\> | Read sources source name list                  | -                                  |
 | loadBalancerName (?)       | String               | Load balance algorithm name of replica sources | Round robin load balance algorithm |
