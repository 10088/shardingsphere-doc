commit eb3b9d8ec7834def735c190a804152b4a78a9a51
Author: Mike0601 <40025573+Mike0601@users.noreply.github.com>
Date:   Thu Aug 4 18:35:43 2022 +0800

    new add the implementation of oberservability (#19871)

diff --git a/docs/document/content/reference/observability/_index.cn.md b/docs/document/content/reference/observability/_index.cn.md
new file mode 100644
index 00000000000..7862cc786cd
--- /dev/null
+++ b/docs/document/content/reference/observability/_index.cn.md
@@ -0,0 +1,17 @@
++++
+pre = "<b>7.11. </b>"
+title = "可观察性"
+weight = 11
++++
+
+## 原理说明
+
+ShardingSphere-Agent 模块为 ShardingSphere 提供了可观察性的框架，它是基于 Java Agent 技术实现的。
+
+Metrics、Tracing 和 Logging 等功能均通过插件的方式集成在 Agent 中，如图：
+
+![Overview](https://shardingsphere.apache.org/document/current/img/apm/overview_v4.png)
+
+- Metrics 插件用于收集和展示整个集群的统计指标。Apache ShardingSphere 默认提供了对 Prometheus 的支持。
+- Tracing 插件用于获取 SQL 解析与 SQL 执行的链路跟踪信息。Apache ShardingSphere 默认提供了对 Jaeger、OpenTelemetry、OpenTracing（SkyWalking）和 Zipkin 的支持，也支持用户通过插件化的方式开发自定义的 Tracing 组件。
+- 默认的 Logging 插件展示了如何在 ShardingSphere 中记录额外的日志，实际应用中需要用户根据自己的需求进行探索。
diff --git a/docs/document/content/reference/observability/_index.en.md b/docs/document/content/reference/observability/_index.en.md
new file mode 100644
index 00000000000..e29e970037f
--- /dev/null
+++ b/docs/document/content/reference/observability/_index.en.md
@@ -0,0 +1,17 @@
++++
+pre = "<b>7.11. </b>"
+title = "Oberservability"
+weight = 11
++++
+
+## How it works
+
+ShardingSphere-Agent module provides an observable framework for ShardingSphere, which is implemented based on Java Agent.
+
+Metrics, tracing and logging functions are integrated into the agent through plugins, as shown in the following figure:
+
+![Overview](https://shardingsphere.apache.org/document/current/img/apm/overview_v4.png)
+
+- The Metrics plugin is used to collect and display statistical indicators for the entire cluster. Apache ShardingSphere supports Prometheus by default.
+- The tracing plugin is used to obtain the link trace information of SQL parsing and SQL execution. Apache ShardingSphere provides support for Jaeger, OpenTelemetry, OpenTracing(SkyWalking) and Zipkin by default. It also supports users developing customized tracing components through plugin.
+- The default logging plugin shows how to record additional logs in ShardingSphere. In practical applications, users need to explore according to their own needs.
