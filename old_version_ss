commit a04f4c121abceacdd7f7c8763e6cb17049e8dd37
Author: BashCache <59500529+BashCache@users.noreply.github.com>
Date:   Tue Mar 15 04:19:35 2022 +0530

    Include space between Chinese and English words in sharding.cn.md (#16077)
    
    * Added unit tests for RecordUtil
    
    * Made changes according to review
    
    * Added changes according to review
    
    * Changes as per review
    
    * Removed * in imports
    
    * Included space between English and Chinese words
    
    * Included space between English and Chinese words

diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/sharding.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/sharding.cn.md
index b79490d9b6..ce3d9b1640 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/sharding.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/sharding.cn.md
@@ -9,7 +9,7 @@ weight = 1
 spring.shardingsphere.datasource.names= # 省略数据源配置，请参考使用手册
 
 # 标准分片表配置
-spring.shardingsphere.rules.sharding.tables.<table-name>.actual-data-nodes= # 由数据源名 + 表名组成，以小数点分隔。多个表以逗号分隔，支持inline表达式。缺省表示使用已知数据源与逻辑表名称生成数据节点，用于广播表（即每个库中都需要一个同样的表用于关联查询，多为字典表）或只分库不分表且所有库的表结构完全一致的情况
+spring.shardingsphere.rules.sharding.tables.<table-name>.actual-data-nodes= # 由数据源名 + 表名组成，以小数点分隔。多个表以逗号分隔，支持 inline 表达式。缺省表示使用已知数据源与逻辑表名称生成数据节点，用于广播表（即每个库中都需要一个同样的表用于关联查询，多为字典表）或只分库不分表且所有库的表结构完全一致的情况
 
 # 分库策略，缺省表示使用默认分库策略，以下的分片策略只能选其一
 
@@ -21,7 +21,7 @@ spring.shardingsphere.rules.sharding.tables.<table-name>.database-strategy.stand
 spring.shardingsphere.rules.sharding.tables.<table-name>.database-strategy.complex.sharding-columns= # 分片列名称，多个列以逗号分隔
 spring.shardingsphere.rules.sharding.tables.<table-name>.database-strategy.complex.sharding-algorithm-name= # 分片算法名称
 
-# 用于Hint 的分片策略
+# 用于 Hint 的分片策略
 spring.shardingsphere.rules.sharding.tables.<table-name>.database-strategy.hint.sharding-algorithm-name= # 分片算法名称
 
 # 分表策略，同分库策略
@@ -52,7 +52,7 @@ spring.shardingsphere.sharding.default-sharding-column= # 默认分片列名称
 
 # 分片算法配置
 spring.shardingsphere.rules.sharding.sharding-algorithms.<sharding-algorithm-name>.type= # 分片算法类型
-spring.shardingsphere.rules.sharding.sharding-algorithms.<sharding-algorithm-name>.props.xxx=# 分片算法属性配置
+spring.shardingsphere.rules.sharding.sharding-algorithms.<sharding-algorithm-name>.props.xxx= # 分片算法属性配置
 
 # 分布式序列算法配置
 spring.shardingsphere.rules.sharding.key-generators.<key-generate-algorithm-name>.type= # 分布式序列算法类型
