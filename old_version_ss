commit b108b9c20107ec8a590edb7e574757f2a73b99ab
Author: Swastika Gupta <64654203+Swastyy@users.noreply.github.com>
Date:   Wed May 25 12:24:37 2022 +0530

    update sql parse engine api usage in document (#17924)

diff --git a/docs/document/content/reference/sharding/parse.en.md b/docs/document/content/reference/sharding/parse.en.md
index 8d9255b0da..02b51c5266 100644
--- a/docs/document/content/reference/sharding/parse.en.md
+++ b/docs/document/content/reference/sharding/parse.en.md
@@ -76,38 +76,41 @@ demo:
 
 ```
 /**
- * databaseType type:String values: MySQL, Oracle, PostgreSQL, SQL92, SQLServer, openGauss 
- * sql type:String SQL to be parsed
+ * sql type:String SQL to be parsed: MySQL, Oracle, PostgreSQL, SQL92, SQLServer, openGauss
  * useCache type:boolean whether use cache
- * @return parse context
+ * @return parseASTNode
  */
-ParseContext parseContext = new SQLParserEngine(databaseType).parse(sql, useCache)
+CacheOption cacheOption = new CacheOption(128, 1024L);
+SQLParserEngine parserEngine = new SQLParserEngine(sql, cacheOption);
+ParseASTNode parseASTNode = parserEngine.parse(sql, useCache);
 ```
 
 - GET SQLStatement
 
 ```
 /**
- * databaseType type:String values: MySQL, Oracle, PostgreSQL, SQL92, SQLServer, openGauss 
+ * sql type:String values: MySQL, Oracle, PostgreSQL, SQL92, SQLServer, openGauss 
  * useCache type:boolean whether use cache
  * @return SQLStatement
- */
-ParseContext parseContext = new SQLParserEngine(databaseType).parse(sql, useCache); 
-SQLVisitorEngine sqlVisitorEngine = new SQLVisitorEngine(databaseType, "STATEMENT");
-SQLStatement sqlStatement = sqlVisitorEngine.visit(parseContext);
+ */ 
+CacheOption cacheOption = new CacheOption(128, 1024L);
+SQLParserEngine parserEngine = new SQLParserEngine(sql, cacheOption);
+ParseASTNode parseASTNode = parserEngine.parse(sql, useCache);
+SQLVisitorEngine sqlVisitorEngine = new SQLVisitorEngine(sql, "STATEMENT", useCache, new Properties());
+SQLStatement sqlStatement = sqlVisitorEngine.visit(parseASTNode);
 ```
 
 - SQL Format
 
 ```
 /**
- * databaseType type:String values MySQL
+ * sql type:String values MySQL
  * useCache type:boolean whether use cache
  * @return String 
  */
-ParseContext parseContext = new SQLParserEngine(databaseType).parse(sql, useCache);
-SQLVisitorEngine sqlVisitorEngine = new SQLVisitorEngine(databaseType, "FORMAT", new Properties());
-String formatedSql = sqlVisitorEngine.visit(parseContext);
+ParseASTNode parseASTNode = parserEngine.parse(sql, useCache);
+SQLVisitorEngine sqlVisitorEngine = new SQLVisitorEngine(sql, "STATEMENT", useCache, new Properties());
+SQLStatement sqlStatement = sqlVisitorEngine.visit(parseASTNode);
 ```
 
 exampleï¼š
