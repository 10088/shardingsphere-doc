commit e5ce407a436380d3608f9c3255a0574e6691323b
Author: JingShang Lu <jingshanglu1@gmail.com>
Date:   Thu Apr 14 20:34:00 2022 +0800

    Add XA architecture diagram (#16820)

diff --git a/docs/document/content/features/transaction/concept/xa.cn.md b/docs/document/content/features/transaction/concept/xa.cn.md
index 044082eb76..e7e1b4676d 100644
--- a/docs/document/content/features/transaction/concept/xa.cn.md
+++ b/docs/document/content/features/transaction/concept/xa.cn.md
@@ -8,7 +8,7 @@ weight = 1
 与传统的本地事务相比，XA 事务增加了准备阶段，数据库除了被动接受提交指令外，还可以反向通知调用方事务是否可以被提交。
 `TM` 可以收集所有分支事务的准备结果，并于最后进行原子提交，以保证事务的强一致性。
 
-![两阶段提交模型](https://shardingsphere.apache.org/document/current/img/transaction/2pc-tansaction.png)
+![两阶段提交模型](https://shardingsphere.apache.org/document/current/img/transaction/2pc-xa-transaction.png)
 
 Java 通过定义 JTA 接口实现了 XA 模型，JTA 接口中的 `ResourceManager` 需要数据库厂商提供 XA 驱动实现，
 `TransactionManager` 则需要事务管理器的厂商实现，传统的事务管理器需要同应用服务器绑定，因此使用的成本很高。
diff --git a/docs/document/content/features/transaction/concept/xa.en.md b/docs/document/content/features/transaction/concept/xa.en.md
index b2cde76fbd..8aef5c7899 100644
--- a/docs/document/content/features/transaction/concept/xa.en.md
+++ b/docs/document/content/features/transaction/concept/xa.en.md
@@ -9,7 +9,7 @@ TM and RM use XA protocol for bidirectional streaming.
 Compared with traditional local transactions, XA transactions have a prepared phase, where the database cannot only passively receive commands, but also notify the submitter whether the transaction can be accepted. 
 TM can collect all the prepared results of branch transactions before submitting all of them together, which has guaranteed the distributed consistency.
 
-![2PC XA model](https://shardingsphere.apache.org/document/current/img/transaction/2pc-tansaction.png)
+![2PC XA model](https://shardingsphere.apache.org/document/current/img/transaction/2pc-xa-transaction.png)
 
 Java implements the XA model through defining a JTA interface, in which `ResourceManager` requires an XA driver provided by database manufacturers and `TransactionManager` is provided by transaction manager manufacturers. 
 Traditional transaction managers need to be bound with application server, which poises a high use cost. Built-in transaction managers have already been able to provide services through jar packages. 
diff --git a/docs/document/static/img/transaction/2pc-tansaction.png b/docs/document/static/img/transaction/2pc-tansaction.png
deleted file mode 100644
index d138166641..0000000000
Binary files a/docs/document/static/img/transaction/2pc-tansaction.png and /dev/null differ
diff --git a/docs/document/static/img/transaction/2pc-xa-transaction.png b/docs/document/static/img/transaction/2pc-xa-transaction.png
new file mode 100644
index 0000000000..98d68ed10f
Binary files /dev/null and b/docs/document/static/img/transaction/2pc-xa-transaction.png differ
