commit 3352b6113b611ad2e148e9c169b969a89c831228
Author: 吴伟杰 <wuweijie@apache.org>
Date:   Thu Jun 23 13:25:24 2022 +0800

    Revise documents of Scaling IT (#18529)

diff --git a/docs/document/content/reference/test/scaling-integration-test/_index.cn.md b/docs/document/content/reference/test/scaling-integration-test/_index.cn.md
index 2a3065bfb4b..db2a58d3514 100644
--- a/docs/document/content/reference/test/scaling-integration-test/_index.cn.md
+++ b/docs/document/content/reference/test/scaling-integration-test/_index.cn.md
@@ -9,12 +9,12 @@ weight = 4
 
 ## 测试环境
 
-环境准备方式分为 Native 和 Docker，不论哪种环境，本地都需要预先安装Docker。
+环境准备方式分为 Native 和 Docker，不论哪种环境，本地都需要预先安装 Docker。
 
-- Native 环境 用于本地调试，可以使用 IDE 的 debug 模式进行调试。
-- Docker 环境  环境由 Maven 运行，适用于云编译环境和测试 ShardingSphere-Proxy 的场景，如：GitHub Action。
+- Native 环境：用于本地调试，可以使用 IDE 的 debug 模式进行调试。
+- Docker 环境：环境由 Maven 运行，适用于云编译环境和测试 ShardingSphere-Proxy 的场景，如：GitHub Action。
 
-当前默认采用 Docker 环境，涉及到的 ShardingSphere-Proxy， Zookeeper， 数据库实例(MySQL，PostgreSQL)， 都通过Docker自动启动。
+当前默认采用 Docker 环境，涉及到的 ShardingSphere-Proxy，Zookeeper，数据库实例 (MySQL, PostgreSQL)，都通过 Docker 自动启动。
 
 数据库类型目前支持 MySQL、PostgreSQL、openGauss。
 
@@ -22,11 +22,11 @@ weight = 4
 
 模块路径：`shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-scaling`
 
-测试的Class分布如下：
+测试的 Class 分布如下：
 
 核心用例：
 - MySQLGeneralScalingIT: 覆盖的测试场景最多，包括部分表迁移，表字段最多样等。
-- PostgreSQLGeneralScalingIT: 类似，只不过数据库类型是 PostgreSQL/openGauss，包含自定义schema迁移场景。
+- PostgreSQLGeneralScalingIT: 类似，只不过数据库类型是 PostgreSQL/openGauss，包含自定义 schema 迁移场景。
 
 主键用例：
 
@@ -36,7 +36,7 @@ weight = 4
 ### 配置文件
 
 目录：`resources/env/`
-- /common: 存放scaling过程中用到的 DistSQL。
+- /common: 存放 Scaling 过程中用到的 DistSQL。
 - /{SQL-TYPE}: 存放数据库级别的配置文件。
 - /scenario: 存放测试的场景的配置文件，主要是 SQL，不同数据库可能写法不一样。
 
@@ -44,17 +44,17 @@ weight = 4
 
 所有的属性值都可以通过 Maven 命令行 `-D` 的方式动态注入。
 
-`${image-name}` 表示合法 docker image 名称，比如：mysql:5.7， 多个的话用逗号隔开。
+`${image-name}` 表示合法 Docker image 名称，比如：mysql:5.7， 多个的话用逗号隔开。
 `-Dit.env.postgresql.version=${image-name}` 表示需要测试的 PostgreSQL 版本。
 `-Dit.env.mysql.version=${image-name}` 表示需要测试的 MySQL 版本。
 
 #### Native 环境启动
 
-Native 环境要求本地自行启动 ShardingSphere-Proxy（以及其自身依赖的 Cluster，比如 Zookeeper），同时要求 ShardingSphere-Proxy 的端口是3307，数据库会根据用户的配置自行启动，但是对应的端口都是数据库的默认端口（MySQL=3306，PostgreSQL=5432）。
+Native 环境要求本地自行启动 ShardingSphere-Proxy（以及其自身依赖的 Cluster，比如 Zookeeper），同时要求 ShardingSphere-Proxy 的端口是 3307，数据库会根据用户的配置自行启动，但是对应的端口都是数据库的默认端口（MySQL=3306, PostgreSQL=5432）。
 
 因此 Native 模式下不支持运行多个 Case，每次跑完需要自行清理 Zookeeper 中的信息，以及重启 ShardingSphere-Proxy。
 
-启动方式如下: 找到需要测试的 Case，比如 MySQLGeneralScalingIT， 在启动之前配置对应的 VM Option，新增如下配置。
+启动方式如下：找到需要测试的 Case，比如 MySQLGeneralScalingIT，在启动之前配置对应的 VM Option，新增如下配置。
 
 ```
 -Dit.cluster.env.type=native -Dit.env.mysql.version=${image-name}
@@ -73,7 +73,7 @@ Native 环境要求本地自行启动 ShardingSphere-Proxy（以及其自身依
 运行以上命令会构建出一个用于集成测试的 Docker 镜像 `apache/shardingsphere-proxy-test:latest`。
 如果仅修改了测试代码，可以复用已有的测试镜像，无须重新构建。
 
-**Docker 环境配置为 ShardingSphere-Proxy 提供了远程调试端口，默认是3308。**
+**Docker 环境配置为 ShardingSphere-Proxy 提供了远程调试端口，默认是 3308。**
 可以在 ShardingSphereProxyDockerContainer 中自行修改。
 
 #### 运行用例
@@ -84,7 +84,7 @@ Native 环境要求本地自行启动 ShardingSphere-Proxy（以及其自身依
 -Dit.cluster.env.type=docker
 ```
 
-可以和 Native 一样使用 IDE 的方式运行用例，或者使用 maven 的方式运行用例。
+可以和 Native 一样使用 IDE 的方式运行用例，或者使用 Maven 的方式运行用例。
 
 ```bash
 ./mvnw -nsu -B install -f shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-scaling/pom.xml -Dit.cluster.env.type=DOCKER -Dit.env.mysql.version=${image-name}
@@ -92,4 +92,4 @@ Native 环境要求本地自行启动 ShardingSphere-Proxy（以及其自身依
 
 #### 注意事项
 
-Scaling集成测试中的命令基本都是只连接 ShardingSphere-Proxy 中执行的，所以如果运行失败，多数情况是需要对 ShardingSphere-Proxy 进行Debug，日志中带有 `:Scaling-Proxy `前缀的，都是从 ShardingSphere-Proxy 容器中输出的日志。
+Scaling 集成测试中的命令基本都是只连接 ShardingSphere-Proxy 中执行的，所以如果运行失败，多数情况是需要对 ShardingSphere-Proxy 进行 Debug，日志中带有 `:Scaling-Proxy` 前缀的，都是从 ShardingSphere-Proxy 容器中输出的日志。
diff --git a/docs/document/content/reference/test/scaling-integration-test/_index.en.md b/docs/document/content/reference/test/scaling-integration-test/_index.en.md
index 4a74bfb2ada..c596d309cc8 100644
--- a/docs/document/content/reference/test/scaling-integration-test/_index.en.md
+++ b/docs/document/content/reference/test/scaling-integration-test/_index.en.md
@@ -35,7 +35,7 @@ Primary Key Case：
 ### Configuration File
 
 Catalog：`resources/env/`
-- /common: The Dist SQL used in the scaling process.
+- /common: The Dist SQL used in the Scaling process.
 - /{SQL-TYPE}: database-level configuration files.
 - /scenario: The configuration file for the test scenario, mainly SQL, may be written differently for different databases.
 
@@ -91,4 +91,4 @@ You can run the use case using the same IDE as Native, or you can run it using m
 
 #### Attentions
 
-The commands in the Scaling integration test are basically executed in the ShardingSphere-Proxy, so if they fail, most of them require a debug of the ShardingSphere-Proxy, and the logs with the `:Scaling-Proxy ` prefix are from the The logs with the prefix `:Scaling-Proxy` are the logs output from the ShardingSphere-Proxy container.
\ No newline at end of file
+The commands in the Scaling integration test are basically executed in the ShardingSphere-Proxy, so if they fail, most of them require a debug of the ShardingSphere-Proxy, and the logs prefixed with `:Scaling-Proxy` are output from the ShardingSphere-Proxy container.
