commit 916bb763d2bc2e3d413174026b4dbb203cdd9d29
Author: Zhengqiang Duan <duanzhengqiang@apache.org>
Date:   Mon Sep 26 11:00:16 2022 +0800

    Update wrong document reference (#21181)

diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.en.md
index cb0b623a95c..0f61ab95368 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.en.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.en.md
@@ -59,7 +59,7 @@ strategyType ::=
 
 - `tableDefinition` is defined for standard sharding table rule; `autoTableDefinition` is defined for auto sharding
   table rule. For standard sharding rules and auto sharding rule, refer
-  to [Data Sharding](en/user-manual/shardingsphere-jdbc/yaml-config/rules/sharding/);
+  to [Data Sharding](/en/user-manual/shardingsphere-jdbc/yaml-config/rules/sharding/);
 - use standard sharding table rule:
     - `DATANODES` can only use resources that have been added to the current database, and can only use INLINE
       expressions to specify required resources;
@@ -75,7 +75,7 @@ strategyType ::=
     - Only auto sharding algorithm can be used, please refer
       to [Auto Sharding Algorithm](/en/user-manual/common-config/builtin-algorithm/sharding/#auto-sharding-algorithm).
 - `algorithmType` is the sharding algorithm type, please refer
-  to [Sharding Algorithm](en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding);
+  to [Sharding Algorithm](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding);
 - The auto-generated algorithm naming rule is `tableName` _ `strategyType` _ `shardingAlgorithmType`;
 - The auto-generated primary key strategy naming rule is `tableName` _ `strategyType`;
 - `KEY_GENERATE_STRATEGY` is used to specify the primary key generation strategy, which is optional. For the primary key
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-auditor.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-auditor.cn.md
index 5f1b7b9238b..b4d1530df8e 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-auditor.cn.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-auditor.cn.md
@@ -29,7 +29,7 @@ algorithmType ::=
 ### 补充说明
 
 - `algorithmType`
-  为分片审计算法类型，详细的分片审计生成算法类型信息请参考[分片审计算法类型](cn/user-manual/common-config/builtin-algorithm/audit/)。
+  为分片审计算法类型，详细的分片审计生成算法类型信息请参考[分片审计算法类型](/cn/user-manual/common-config/builtin-algorithm/audit/)。
 
 ### 示例
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-auditor.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-auditor.en.md
index 6dc9ebc142a..b7ed328266a 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-auditor.en.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-auditor.en.md
@@ -30,7 +30,7 @@ algorithmType ::=
 ### Supplement
 
 - `algorithmType` is the sharding audit algorithm type. For detailed sharding audit algorithm type information, please refer
-  to [SHARDING AUDIT ALGORITHM](en/user-manual/common-config/builtin-algorithm/audit/).
+  to [SHARDING AUDIT ALGORITHM](/en/user-manual/common-config/builtin-algorithm/audit/).
 
 ### Example
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-key-generator.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-key-generator.cn.md
index 622c5e025fc..7dd8ea54d6b 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-key-generator.cn.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-key-generator.cn.md
@@ -29,7 +29,7 @@ algorithmType ::=
 ### 补充说明
 
 - `algorithmType`
-  为分布式主键生成算法类型，详细的分布式主键生成算法类型信息请参考[分布式序列算法类型](cn/user-manual/shardingsphere-jdbc/builtin-algorithm/keygen/)。
+  为分布式主键生成算法类型，详细的分布式主键生成算法类型信息请参考[分布式序列算法类型](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/keygen/)。
 
 ### 示例
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-key-generator.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-key-generator.en.md
index 058c11eb6c0..9536f49d4cf 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-key-generator.en.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-key-generator.en.md
@@ -30,7 +30,7 @@ algorithmType ::=
 ### Supplement
 
 - `algorithmType` is the key generate algorithm type. For detailed key generate algorithm type information, please refer
-  to [KEY GENERATE ALGORITHM](en/user-manual/shardingsphere-jdbc/builtin-algorithm/keygen/).
+  to [KEY GENERATE ALGORITHM](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/keygen/).
 
 ### Example
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.en.md
index 3a8b6b159a1..70f1236ea20 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.en.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.en.md
@@ -54,7 +54,7 @@ algorithmType ::=
 
 - `tableDefinition` is defined for standard sharding table rule; `autoTableDefinition` is defined for auto sharding
   table rule. For standard sharding rules and auto sharding rule, refer
-  to [Data Sharding](en/user-manual/shardingsphere-jdbc/yaml-config/rules/sharding/);
+  to [Data Sharding](/en/user-manual/shardingsphere-jdbc/yaml-config/rules/sharding/);
 - use standard sharding table rule:
     - `DATANODES` can only use resources that have been added to the current database, and can only use INLINE
       expressions to specify required resources;
@@ -70,7 +70,7 @@ algorithmType ::=
     - Only auto sharding algorithm can be used, please refer
       to [Auto Sharding Algorithm](/en/user-manual/common-config/builtin-algorithm/sharding/#auto-sharding-algorithm).
 - `algorithmType` is the sharding algorithm type, please refer
-  to [Sharding Algorithm](en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding);
+  to [Sharding Algorithm](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/sharding);
 - The auto-generated algorithm naming rule is `tableName` _ `strategyType` _ `shardingAlgorithmType`;
 - The auto-generated primary key strategy naming rule is `tableName` _ `strategyType`;
 - `KEY_GENERATE_STRATEGY` is used to specify the primary key generation strategy, which is optional. For the primary key
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/ha.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/ha.cn.md
index 5e94062145a..50910b8e488 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/ha.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/ha.cn.md
@@ -68,7 +68,7 @@ spring.shardingsphere.rules.database-discovery.discovery-types.mgr.props.groupNa
 ```
 ## 相关参考
 
-- [高可用核心特性](cn/features/ha/)
+- [高可用核心特性](/cn/features/ha/)
 - [JAVA API：高可用配置](/cn/user-manual/shardingsphere-jdbc/java-api/rules/ha/)
 - [YAML 配置：高可用配置](/cn/user-manual/shardingsphere-jdbc/yaml-config/rules/ha/)
 - [Spring 命名空间：高可用配置](/cn/user-manual/shardingsphere-jdbc/spring-namespace/rules/ha/)
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/ha.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/ha.en.md
index 5a088ebfa8c..e972abb96a0 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/ha.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/ha.en.md
@@ -68,7 +68,7 @@ spring.shardingsphere.rules.database-discovery.discovery-types.mgr.props.groupNa
 ```
 ## Related References
 
-- [Feature Description of HA](en/features/ha/)
+- [Feature Description of HA](/en/features/ha/)
 - [JAVA API: HA](/en/user-manual/shardingsphere-jdbc/java-api/rules/ha/)
 - [YAML Configuration: HA](/en/user-manual/shardingsphere-jdbc/yaml-config/rules/ha/)
 - [Spring Namespace: HA](/en/user-manual/shardingsphere-jdbc/spring-namespace/rules/ha/)
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/ha.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/ha.cn.md
index bd69c3e2938..51809936e67 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/ha.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/ha.cn.md
@@ -125,7 +125,7 @@ weight = 3
 
 ## 相关参考
 
-- [高可用核心特性](cn/features/ha/)
+- [高可用核心特性](/cn/features/ha/)
 - [JAVA API：高可用配置](/cn/user-manual/shardingsphere-jdbc/java-api/rules/ha/)
 - [YAML 配置：高可用配置](/cn/user-manual/shardingsphere-jdbc/yaml-config/rules/ha/)
 - [Spring Boot Starter：高可用配置](/cn/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/ha/)
\ No newline at end of file
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/ha.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/ha.en.md
index 0807b06579c..0499fc30085 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/ha.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/rules/ha.en.md
@@ -125,7 +125,7 @@ Namespace: [http://shardingsphere.apache.org/schema/shardingsphere/database-disc
 
 ## Related References
 
-- [Feature Description of HA](en/features/ha/)
+- [Feature Description of HA](/en/features/ha/)
 - [JAVA API: HA](/en/user-manual/shardingsphere-jdbc/java-api/rules/ha/)
 - [YAML Configuration: HA](/en/user-manual/shardingsphere-jdbc/yaml-config/rules/ha/)
 - [Spring Boot Starter: HA](/en/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/ha/)
\ No newline at end of file
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/ha.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/ha.cn.md
index cc90e17a2e3..07aa975616f 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/ha.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/ha.cn.md
@@ -102,7 +102,7 @@ rules:
 ```
 ## 相关参考
 
-- [高可用核心特性](cn/features/ha/)
+- [高可用核心特性](/cn/features/ha/)
 - [JAVA API：高可用配置](/cn/user-manual/shardingsphere-jdbc/java-api/rules/ha/)
 - [Spring Boot Starter：高可用配置](/cn/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/ha/)
 - [Spring 命名空间：高可用配置](/cn/user-manual/shardingsphere-jdbc/spring-namespace/rules/ha/)
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/ha.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/ha.en.md
index 53a66ab89c6..c2342754b81 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/ha.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/ha.en.md
@@ -101,7 +101,7 @@ rules:
 ```
 ## Related References
 
-- [Feature Description of HA](en/features/ha/)
+- [Feature Description of HA](/en/features/ha/)
 - [JAVA API: HA](/en/user-manual/shardingsphere-jdbc/java-api/rules/ha/)
 - [Spring Boot Starter: HA](/en/user-manual/shardingsphere-jdbc/spring-boot-starter/rules/ha/)
 - [Spring Namespace: HA](/en/user-manual/shardingsphere-jdbc/spring-namespace/rules/ha/)
