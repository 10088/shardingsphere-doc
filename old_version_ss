commit 46071bb3dff2286a2eba7c18201db609a253200a
Author: ChenJiaHao <37339007+Pace2Car@users.noreply.github.com>
Date:   Fri Oct 28 10:25:53 2022 +0800

    Revise DistSQL SHARDING RULE document & Remove invalid classes (#21806)
    
    * Remove invalid DistSQL statement & test cases & document
    
    * Revise sharding rule document

diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.cn.md
index 61f0c196f5b..f7dea36e921 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.cn.md
@@ -20,16 +20,8 @@ ALTER DEFAULT SHARDING shardingScope STRATEGY (shardingStrategy)
 
 DROP DEFAULT SHARDING shardingScope STRATEGY;
 
-CREATE SHARDING ALGORITHM shardingAlgorithmDefinition [, shardingAlgorithmDefinition] ...
-
-ALTER SHARDING ALGORITHM shardingAlgorithmDefinition [, shardingAlgorithmDefinition] ...
-
 DROP SHARDING ALGORITHM algorithmName [, algorithmName] ...
 
-CREATE SHARDING KEY GENERATOR keyGeneratorDefinition [, keyGeneratorDefinition] ...
-
-ALTER SHARDING KEY GENERATOR keyGeneratorDefinition [, keyGeneratorDefinition] ...
-
 DROP SHARDING KEY GENERATOR [IF EXISTS] keyGeneratorName [, keyGeneratorName] ...
     
 CREATE SHARDING AUDITOR auditorDefinition [, auditorDefinition] ...
@@ -42,10 +34,10 @@ shardingTableRuleDefinition:
     shardingAutoTableRule | shardingTableRule
 
 shardingAutoTableRule:
-    tableName(storageUnits, shardingColumn, algorithmDefinition [, keyGenerateDeclaration] [, auditDeclaration])
+    tableName(storageUnits, shardingColumn, algorithmDefinition [, keyGenerateDefinition] [, auditDeclaration])
 
 shardingTableRule:
-    tableName(dataNodes [, databaseStrategy] [, tableStrategy] [, keyGenerateDeclaration] [, auditDeclaration])
+    tableName(dataNodes [, databaseStrategy] [, tableStrategy] [, keyGenerateDefinition] [, auditDeclaration])
 
 storageUnits:
     STORAGE_UNITS(storageUnit [, storageUnit] ...)
@@ -65,9 +57,6 @@ shardingColumn:
 algorithmDefinition:
     TYPE(NAME=shardingAlgorithmType [, PROPERTIES([algorithmProperties])])
 
-keyGenerateDeclaration:
-    keyGenerateDefinition | keyGenerateConstruction
-
 keyGenerateDefinition:
     KEY_GENERATE_STRATEGY(COLUMN=columnName, strategyDefinition)
     
@@ -92,19 +81,10 @@ databaseStrategy:
 tableStrategy:
     TABLE_STRATEGY(shardingStrategy)
 
-keyGenerateConstruction
-    KEY_GENERATE_STRATEGY(COLUMN=columnName, KEY_GENERATOR=keyGenerateAlgorithmName)
-
 shardingStrategy:
     TYPE=strategyType, shardingColumn, shardingAlgorithm
 
 shardingAlgorithm:
-    existingAlgorithm | autoCreativeAlgorithm
-
-existingAlgorithm:
-    SHARDING_ALGORITHM=shardingAlgorithmName
-
-autoCreativeAlgorithm:
     SHARDING_ALGORITHM(algorithmDefinition)
 
 strategyDefinition:
@@ -137,7 +117,8 @@ auditorAlgorithmDefinition:
 - 如需移除 `shardingAlgorithm`，请执行 `DROP SHARDING ALGORITHM`；
 - `strategyType` 指定分片策略，请参考[分片策略](/cn/features/sharding/concept/sharding/#%E5%88%86%E7%89%87%E7%AD%96%E7%95%A5)；
 - `Sharding Table Rule` 同时支持 `Auto Table` 和 `Table` 两种类型，两者在语法上有所差异，对应配置文件请参考 [数据分片](/cn/user-manual/shardingsphere-jdbc/yaml-config/rules/sharding/) ；
-- 使用 `autoCreativeAlgorithm` 方式指定 `shardingStrategy` 时，将会自动创建新的分片算法，算法命名规则为 `tableName_strategyType_shardingAlgorithmType`，如 `t_order_database_inline`。
+- 执行 `CREATE SHARDING TABLE RULE` 时，将会自动创建新的分片算法，算法命名规则为 `tableName_scope_shardingAlgorithmType`，如 `t_order_database_inline`。
+- 执行 `CREATE DEFAULT SHARDING STRATEGY` 时，同样会自动创建新的分片算法，算法命名规则为 `default_scope_shardingAlgorithmType`，如 `default_database_inline`。
 
 ### Sharding Table Reference Rule
 
@@ -168,14 +149,6 @@ DROP BROADCAST TABLE RULES tableName [, tableName] ...
 *Key Generator*
 
 ```sql
-CREATE SHARDING KEY GENERATOR snowflake_key_generator (
-TYPE(NAME="SNOWFLAKE")
-);
-
-ALTER SHARDING KEY GENERATOR snowflake_key_generator (
-TYPE(NAME="SNOWFLAKE")
-);
-
 DROP SHARDING KEY GENERATOR snowflake_key_generator;
 ```
 
@@ -217,29 +190,20 @@ DROP SHARDING ALGORITHM t_order_hash_mod;
 *Table*
 
 ```sql
-CREATE SHARDING ALGORITHM table_inline (
-TYPE(NAME="inline",PROPERTIES("algorithm-expression"="t_order_item_${order_id % 2}"))
-);
 
 CREATE SHARDING TABLE RULE t_order_item (
 DATANODES("ds_${0..1}.t_order_item_${0..1}"),
 DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM(TYPE(NAME="inline",PROPERTIES("algorithm-expression"="ds_${user_id % 2}")))),
-TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=table_inline),
-KEY_GENERATE_STRATEGY(COLUMN=another_id,KEY_GENERATOR=snowflake_key_generator),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM(TYPE(NAME="inline",PROPERTIES("algorithm-expression"="t_order_item_${order_id % 2}")))),
+KEY_GENERATE_STRATEGY(COLUMN=another_id,TYPE(NAME="snowflake")),
 AUDIT_STRATEGY(AUDITORS=[auditor1,auditor2],ALLOW_HINT_DISABLE=true)
 );
 
-ALTER SHARDING ALGORITHM database_inline (
-TYPE(NAME="inline",PROPERTIES("algorithm-expression"="ds_${user_id % 4}"))
-),table_inline (
-TYPE(NAME="inline",PROPERTIES("algorithm-expression"="t_order_item_${order_id % 4}"))
-);
-
 ALTER SHARDING TABLE RULE t_order_item (
 DATANODES("ds_${0..3}.t_order_item${0..3}"),
-DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
-TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=table_inline),
-KEY_GENERATE_STRATEGY(COLUMN=another_id,KEY_GENERATOR=snowflake_key_generator),
+DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM(TYPE(NAME="inline",PROPERTIES("algorithm-expression"="ds_${user_id % 4}")))),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM(TYPE(NAME="inline",PROPERTIES("algorithm-expression"="t_order_item_${order_id % 4}")))),
+KEY_GENERATE_STRATEGY(COLUMN=another_id,TYPE(NAME="snowflake")),
 AUDIT_STRATEGY(AUDITORS=[auditor1,auditor2],ALLOW_HINT_DISABLE=true)
 );
 
@@ -248,11 +212,11 @@ DROP SHARDING TABLE RULE t_order_item;
 DROP SHARDING ALGORITHM database_inline;
 
 CREATE DEFAULT SHARDING DATABASE STRATEGY (
-TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=database_inline
+TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM(TYPE(NAME="inline",PROPERTIES("algorithm-expression"="ds_${order_id % 2}")))
 );
 
 ALTER DEFAULT SHARDING DATABASE STRATEGY (
-TYPE="standard",SHARDING_COLUMN=another_id,SHARDING_ALGORITHM=database_inline
+TYPE="standard",SHARDING_COLUMN=another_id,SHARDING_ALGORITHM(TYPE(NAME="inline",PROPERTIES("algorithm-expression"="ds_${another_id % 2}")))
 );
 
 DROP DEFAULT SHARDING DATABASE STRATEGY;
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.en.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.en.md
index d9b09fa9075..000034b664f 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.en.md
@@ -20,16 +20,8 @@ ALTER DEFAULT SHARDING shardingScope STRATEGY (shardingStrategy)
 
 DROP DEFAULT SHARDING shardingScope STRATEGY;
 
-CREATE SHARDING ALGORITHM shardingAlgorithmDefinition [, shardingAlgorithmDefinition] ...
-
-ALTER SHARDING ALGORITHM shardingAlgorithmDefinition [, shardingAlgorithmDefinition] ...
-
 DROP SHARDING ALGORITHM algorithmName [, algorithmName] ...
 
-CREATE SHARDING KEY GENERATOR keyGeneratorDefinition [, keyGeneratorDefinition] ...
-
-ALTER SHARDING KEY GENERATOR keyGeneratorDefinition [, keyGeneratorDefinition] ...
-
 DROP SHARDING KEY GENERATOR [IF EXISTS] keyGeneratorName [, keyGeneratorName] ...
     
 CREATE SHARDING AUDITOR auditorDefinition [, auditorDefinition] ...
@@ -42,10 +34,10 @@ shardingTableRuleDefinition:
     shardingAutoTableRule | shardingTableRule
 
 shardingAutoTableRule:
-    tableName(storageUnits, shardingColumn, algorithmDefinition [, keyGenerateDeclaration] [, auditDeclaration])
+    tableName(storageUnits, shardingColumn, algorithmDefinition [, keyGenerateDefinition] [, auditDeclaration])
 
 shardingTableRule:
-    tableName(dataNodes [, databaseStrategy] [, tableStrategy] [, keyGenerateDeclaration] [, auditDeclaration])
+    tableName(dataNodes [, databaseStrategy] [, tableStrategy] [, keyGenerateDefinition] [, auditDeclaration])
 
 storageUnits:
     STORAGE_UNITS(storageUnit [, storageUnit] ...)
@@ -65,9 +57,6 @@ shardingColumn:
 algorithmDefinition:
     TYPE(NAME=shardingAlgorithmType [, PROPERTIES([algorithmProperties])])
 
-keyGenerateDeclaration:
-    keyGenerateDefinition | keyGenerateConstruction
-
 keyGenerateDefinition:
     KEY_GENERATE_STRATEGY(COLUMN=columnName, strategyDefinition)
     
@@ -92,19 +81,10 @@ databaseStrategy:
 tableStrategy:
     TABLE_STRATEGY(shardingStrategy)
 
-keyGenerateConstruction
-    KEY_GENERATE_STRATEGY(COLUMN=columnName, KEY_GENERATOR=keyGenerateAlgorithmName)
-
 shardingStrategy:
     TYPE=strategyType, shardingColumn, shardingAlgorithm
 
 shardingAlgorithm:
-    existingAlgorithm | autoCreativeAlgorithm
-
-existingAlgorithm:
-    SHARDING_ALGORITHM=shardingAlgorithmName
-
-autoCreativeAlgorithm:
     SHARDING_ALGORITHM(algorithmDefinition)
 
 strategyDefinition:
@@ -138,6 +118,8 @@ auditorAlgorithmDefinition:
 - `strategyType` specifies the sharding strategy, please refer to[Sharding Strategy](/en/features/sharding/concept/sharding/#sharding-strategy)
 - `Sharding Table Rule` supports both `Auto Table` and `Table` at the same time. The two types are different in syntax. For the corresponding configuration file, please refer to [Sharding](/en/user-manual/shardingsphere-jdbc/yaml-config/rules/sharding/)
 - When using the `autoCreativeAlgorithm` way to specify `shardingStrategy`, a new sharding algorithm will be created automatically. The algorithm naming rule is `tableName_strategyType_shardingAlgorithmType`, such as `t_order_database_inline`
+- executing `CREATE SHARDING TABLE RULE`，a new sharding algorithm will be created automatically. The algorithm naming rule is `tableName_scope_shardingAlgorithmType`，such as `t_order_database_inline`
+- executing `CREATE DEFAULT SHARDING STRATEGY`，a new sharding algorithm is also created automatically，The algorithm naming rule is `default_scope_shardingAlgorithmType`，such as `default_database_inline`
 
 ### Sharding Table Reference Rule
 
@@ -168,14 +150,6 @@ DROP BROADCAST TABLE RULE tableName [, tableName] ...
 *Key Generator*
 
 ```sql
-CREATE SHARDING KEY GENERATOR snowflake_key_generator (
-TYPE(NAME="SNOWFLAKE")
-);
-
-ALTER SHARDING KEY GENERATOR snowflake_key_generator (
-TYPE(NAME="SNOWFLAKE"))
-);
-
 DROP SHARDING KEY GENERATOR snowflake_key_generator;
 ```
 
@@ -217,29 +191,19 @@ DROP SHARDING ALGORITHM t_order_hash_mod;
 *Table*
 
 ```sql
-CREATE SHARDING ALGORITHM table_inline (
-TYPE(NAME="inline",PROPERTIES("algorithm-expression"="t_order_item_${order_id % 2}"))
-);
-
 CREATE SHARDING TABLE RULE t_order_item (
 DATANODES("ds_${0..1}.t_order_item_${0..1}"),
 DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM(TYPE(NAME="inline",PROPERTIES("algorithm-expression"="ds_${user_id % 2}")))),
-TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=table_inline),
-KEY_GENERATE_STRATEGY(COLUMN=another_id,KEY_GENERATOR=snowflake_key_generator),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM(TYPE(NAME="inline",PROPERTIES("algorithm-expression"="t_order_item_${order_id % 2}")))),
+KEY_GENERATE_STRATEGY(COLUMN=another_id,TYPE(NAME="snowflake")),
 AUDIT_STRATEGY(AUDITORS=[auditor1,auditor2],ALLOW_HINT_DISABLE=true)
 );
 
-ALTER SHARDING ALGORITHM database_inline (
-TYPE(NAME="inline",PROPERTIES("algorithm-expression"="ds_${user_id % 4}"))
-),table_inline (
-TYPE(NAME="inline",PROPERTIES("algorithm-expression"="t_order_item_${order_id % 4}"))
-);
-
 ALTER SHARDING TABLE RULE t_order_item (
 DATANODES("ds_${0..3}.t_order_item${0..3}"),
-DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
-TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=table_inline),
-KEY_GENERATE_STRATEGY(COLUMN=another_id,KEY_GENERATOR=snowflake_key_generator),
+DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM(TYPE(NAME="inline",PROPERTIES("algorithm-expression"="ds_${user_id % 4}")))),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM(TYPE(NAME="inline",PROPERTIES("algorithm-expression"="t_order_item_${order_id % 4}")))),
+KEY_GENERATE_STRATEGY(COLUMN=another_id,TYPE(NAME="snowflake")),
 AUDIT_STRATEGY(AUDITORS=[auditor1,auditor2],ALLOW_HINT_DISABLE=true)
 );
 
@@ -248,11 +212,11 @@ DROP SHARDING TABLE RULE t_order_item;
 DROP SHARDING ALGORITHM database_inline;
 
 CREATE DEFAULT SHARDING DATABASE STRATEGY (
-TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=database_inline
+TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM(TYPE(NAME="inline",PROPERTIES("algorithm-expression"="ds_${order_id % 2}")))
 );
 
 ALTER DEFAULT SHARDING DATABASE STRATEGY (
-TYPE="standard",SHARDING_COLUMN=another_id,SHARDING_ALGORITHM=database_inline
+TYPE="standard",SHARDING_COLUMN=another_id,SHARDING_ALGORITHM(TYPE(NAME="inline",PROPERTIES("algorithm-expression"="ds_${another_id % 2}")))
 );
 
 DROP DEFAULT SHARDING DATABASE STRATEGY;
