commit 8e374725d33802f0042f14a260a4336f69316fc6
Author: zhaojinchao <33742097+zjcnb@users.noreply.github.com>
Date:   Wed Jan 19 15:27:44 2022 +0800

    Adjust readwrite-splitting document about java api and mix. (#14886)
    
    * Adjust readwrite document about java api and mix.
    
    * adjust format.

diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/mix.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/mix.cn.md
index f0447835e7..a730a937ad 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/mix.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/mix.cn.md
@@ -86,8 +86,14 @@ encryptAlgorithmConfigs.put("pwd_encryptor", new ShardingSphereAlgorithmConfigur
 EncryptRuleConfiguration encryptRuleConfiguration = new EncryptRuleConfiguration(Collections.singleton(encryptTableRuleConfig), encryptAlgorithmConfigs);
 
 /* 读写分离规则配置 */
-ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration("ds_0", "write_ds0", Arrays.asList("write_ds0_read0", "write_ds0_read1"), "roundRobin");
-ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration("ds_1", "write_ds0", Arrays.asList("write_ds1_read0", "write_ds1_read0"), "roundRobin");
+Properties readwriteProps1 = new Properties();
+readwriteProps1.setProperty("write-data-source-name", "write_ds0");
+readwriteProps1.setProperty("read-data-source-names", "write_ds0_read0, write_ds0_read1");
+ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration("ds_0", "Static", readwriteProps1, "roundRobin");
+Properties readwriteProps2 = new Properties();
+readwriteProps2.setProperty("write-data-source-name", "write_ds0");
+readwriteProps2.setProperty("read-data-source-names", "write_ds1_read0, write_ds1_read1");
+ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration("ds_1", "Static", readwriteProps2, "roundRobin");
 
 //负载均衡算法
 Map<String, ShardingSphereAlgorithmConfiguration> loadBalanceMaps = new HashMap<>(1);
@@ -99,6 +105,6 @@ ReadwriteSplittingRuleConfiguration readWriteSplittingyRuleConfiguration = new R
 Properties otherProperties = new Properties();
 otherProperties.setProperty("sql-show", "true");
 
-/* shardingDataSource 就是最终被ORM框架或其他jdbc框架引用的数据源名称 */
+/* shardingDataSource 就是最终被 ORM 框架或其他 jdbc 框架引用的数据源名称 */
 DataSource shardingDataSource = ShardingSphereDataSourceFactory.createDataSource(datasourceMaps, Arrays.asList(shardingRuleConfiguration, readWriteSplittingyRuleConfiguration, encryptRuleConfiguration), otherProperties);
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/mix.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/mix.en.md
index 5318d622bb..c9e732c5c3 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/mix.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/mix.en.md
@@ -82,8 +82,14 @@ encryptAlgorithmConfigs.put("pwd_encryptor", new ShardingSphereAlgorithmConfigur
 EncryptRuleConfiguration encryptRuleConfiguration = new EncryptRuleConfiguration(Collections.singleton(encryptTableRuleConfig), encryptAlgorithmConfigs);
 
 /* Readwrite-splitting rule configuration */
-ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration("ds_0", "write_ds0", Arrays.asList("write_ds0_read0", "write_ds0_read1"), "roundRobin");
-ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration("ds_1", "write_ds0", Arrays.asList("write_ds1_read0", "write_ds1_read0"), "roundRobin");
+Properties readwriteProps1 = new Properties();
+readwriteProps1.setProperty("write-data-source-name", "write_ds0");
+readwriteProps1.setProperty("read-data-source-names", "write_ds0_read0, write_ds0_read1");
+ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration("ds_0", "Static", readwriteProps1, "roundRobin");
+Properties readwriteProps2 = new Properties();
+readwriteProps2.setProperty("write-data-source-name", "write_ds0");
+readwriteProps2.setProperty("read-data-source-names", "write_ds1_read0, write_ds1_read1");
+ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration("ds_1", "Static", readwriteProps2, "roundRobin");
 
 // Load balance algorithm configuration
 Map<String, ShardingSphereAlgorithmConfiguration> loadBalanceMaps = new HashMap<>(1);
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.cn.md
index fc7373488e..7eb326cfb4 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.cn.md
@@ -20,13 +20,12 @@ weight = 2
 
 可配置属性：
 
-| *名称*                     | *数据类型*             | *说明*              | *默认值*       |
-| -------------------------- | -------------------- | ------------------- | ------------- |
-| name                       | String               | 读写分离数据源名称    | -             |
-| autoAwareDataSourceName(?) | String               | 自动发现数据源名称(与数据库发现配合使用)        | -             |
-| writeDataSourceName        | String               | 写库数据源名称        | -             |
-| readDataSourceNames (+)    | Collection\<String\> | 读库数据源名称列表    | -             |
-| loadBalancerName (?)       | String               | 读库负载均衡算法名称  | 轮询负载均衡算法 |
+| *名称*                     | *数据类型*             | *说明*                                                                                                    | *默认值*       |
+| -------------------------- | -------------------- | ----------------------------------------------------------------------------------------------------------| ---------------|
+| name                       | String               | 读写分离数据源名称                                                                                          | -             |
+| type                       | String               | 读写分离类型，分为静态和动态。如 Static、Dynamic                                                             | -             |
+| props                      | Properties           | 读写分离所需属性，如静态：write-data-source-name、read-data-source-names，动态：auto-aware-data-source-name  | -             |
+| loadBalancerName (?)       | String               | 读库负载均衡算法名称                                                                                      | 轮询负载均衡算法 |
 
 算法类型的详情，请参见[内置负载均衡算法列表](/cn/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance)。
 查询一致性路由的详情，请参见[使用规范](/cn/features/readwrite-splitting/use-norms)。
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.en.md
index ccbd528b99..b783fe73b5 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.en.md
@@ -20,13 +20,12 @@ Class name: org.apache.shardingsphere.readwritesplitting.api.rule.ReadwriteSplit
 
 Attributes:
 
-| *Name*                     | *DataType*           | *Description*                                  | *Default Value*                    |
-| -------------------------- | -------------------- | ---------------------------------------------- | ---------------------------------- |
-| name                       | String               | Readwrite-splitting data source name           | -                                  |
-| autoAwareDataSourceName(?) | String               | Auto aware data source name(Use with database discovery)        | -             |
-| writeDataSourceName        | String               | Write sources source name                      | -                                  |
-| readDataSourceNames (+)    | Collection\<String\> | Read sources source name list                  | -                                  |
-| loadBalancerName (?)       | String               | Load balance algorithm name of replica sources | Round robin load balance algorithm |
+| *Name*                     | *DataType*           | *Description*                                      | *Default Value*                    |
+| -------------------------- | -------------------- | -------------------------------------------------- | ---------------------------------- |
+| name                       | String               | Readwrite-splitting data source name               | -                                  |
+| type                       | String               | Readwrite-splitting type, such as: Static、Dynamic | -                                   |
+| props                      | Properties           | Readwrite-splitting required properties. Static: write-data-source-name、read-data-source-names, Dynamic: auto-aware-data-source-name| -        |
+| loadBalancerName (?)       | String               | Load balance algorithm name of replica sources     | Round robin load balance algorithm |
 
 Please refer to [Built-in Load Balance Algorithm List](/en/user-manual/shardingsphere-jdbc/builtin-algorithm/load-balance) for more details about type of algorithm.
 Please refer to [Use Norms](/en/features/readwrite-splitting/use-norms) for more details about query consistent routing.
