commit 4877b87d829b8890ff6291a12dcc5ecb7606bb20
Author: Hongsheng Zhong <sandynz@126.com>
Date:   Thu Jan 13 20:10:40 2022 +0800

    Update scaling configuration items explanation (#14749)

diff --git a/docs/document/content/user-manual/shardingsphere-scaling/build.cn.md b/docs/document/content/user-manual/shardingsphere-scaling/build.cn.md
index 9ea5edd83b..b4e437952f 100644
--- a/docs/document/content/user-manual/shardingsphere-scaling/build.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-scaling/build.cn.md
@@ -53,29 +53,29 @@ rules:
   scalingName: # 启用的弹性伸缩配置名称
   scaling:
     <scaling-action-config-name> (+):
-      input:
-        workerThread: # 从源端摄取全量数据的线程池大小
-        batchSize: # 一次查询操作返回的最大记录数
-        rateLimiter: # 限流算法
+      input: # 数据读取配置。如果不配置则部分参数默认生效。
+        workerThread: # 从源端摄取全量数据的线程池大小。如果不配置则使用默认值。
+        batchSize: # 一次查询操作返回的最大记录数。如果不配置则使用默认值。
+        rateLimiter: # 限流算法。如果不配置则不限流。
           type: # 算法类型。可选项：QPS
           props: # 算法属性
             qps: # qps属性。适用算法类型：QPS
-      output:
-        workerThread: # 数据导入到目标端的线程池大小
-        batchSize: # 一次批量写入操作的最大记录数
-        rateLimiter: # 限流算法
+      output: # 数据写入配置。如果不配置则部分参数默认生效。
+        workerThread: # 数据写入到目标端的线程池大小。如果不配置则使用默认值。
+        batchSize: # 一次批量写入操作的最大记录数。如果不配置则使用默认值。
+        rateLimiter: # 限流算法。如果不配置则不限流。
           type: # 算法类型。可选项：TPS
           props: # 算法属性
             tps: # tps属性。适用算法类型：TPS
-      streamChannel: # 数据通道，连接生产者和消费者，用于 input 和 output 环节。如果没配置则默认使用 MEMORY 类型
+      streamChannel: # 数据通道，连接生产者和消费者，用于 input 和 output 环节。如果不配置则默认使用 MEMORY 类型
         type: # 算法类型。可选项：MEMORY
         props: # 算法属性
           block-queue-size: # 属性：阻塞队列大小
-      completionDetector: # 作业是否接近完成检测算法。如果不配置，那么系统无法自动进行后续步骤，可以通过 DistSQL 手动操作。
+      completionDetector: # 作业是否接近完成检测算法。如果不配置则无法自动进行后续步骤，可以通过 DistSQL 手动操作。
         type: # 算法类型。可选项：IDLE
         props: # 算法属性
           incremental-task-idle-minute-threshold: # 如果增量同步任务不再活动超过一定时间，那么可以认为增量同步任务接近完成。适用算法类型：IDLE
-      dataConsistencyChecker: # 数据一致性校验算法。如果不配置，那么系统会跳过这个步骤。
+      dataConsistencyChecker: # 数据一致性校验算法。如果不配置则跳过这个步骤。
         type: # 算法类型。可选项：DATA_MATCH, CRC32_MATCH
         props: # 算法属性
           chunk-size: # 一次查询操作返回的最大记录数
diff --git a/docs/document/content/user-manual/shardingsphere-scaling/build.en.md b/docs/document/content/user-manual/shardingsphere-scaling/build.en.md
index fa58430f6f..e9f7af993a 100644
--- a/docs/document/content/user-manual/shardingsphere-scaling/build.en.md
+++ b/docs/document/content/user-manual/shardingsphere-scaling/build.en.md
@@ -52,17 +52,17 @@ rules:
   scalingName: # Enabled scaling action config name
   scaling:
     <scaling-action-config-name> (+):
-      input:
-        workerThread: # Worker thread pool size for inventory data ingestion from source
-        batchSize: # Maximum records count of a DML select operation
-        rateLimiter: # Rate limit algorithm
+      input: # Data read configuration. If it's not configured, then part of its configuration will take effect.
+        workerThread: # Worker thread pool size for inventory data ingestion from source. If it's not configured, then use system default value.
+        batchSize: # Maximum records count of a DML select operation. If it's not configured, then use system default value.
+        rateLimiter: # Rate limit algorithm. If it's not configured, then system will skip rate limit.
           type: # Algorithm type. Options: QPS
           props: # Algorithm properties
             qps: # QPS property. Available for types: QPS
-      output:
-        workerThread: # Worker thread pool size for data importing to target
-        batchSize: # Maximum records count of a DML insert/delete/update operation
-        rateLimiter: # Rate limit algorithm
+      output: # Data write configuration. If it's not configured, then part of its configuration will take effect.
+        workerThread: # Worker thread pool size for data importing to target. If it's not configured, then use system default value.
+        batchSize: # Maximum records count of a DML insert/delete/update operation. If it's not configured, then use system default value.
+        rateLimiter: # Rate limit algorithm. If it's not configured, then system will skip rate limit.
           type: # Algorithm type. Options: TPS
           props: # Algorithm properties
             tps: # TPS property. Available for types: TPS
