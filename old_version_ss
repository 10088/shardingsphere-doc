commit 3aedaaa99634e7e7a5d0a182db749f537873aa5f
Author: Liang Zhang <terrymanu@163.com>
Date:   Wed May 12 17:28:54 2021 +0800

    Move queryWithCipherColumn configuration from props to encrypt rule (#10313)
    
    * Move queryWithCipherColumn configuration from props to encrypt rule
    
    * Update spring namespace
    
    * Update docs

diff --git a/docs/document/content/features/encrypt/principle.cn.md b/docs/document/content/features/encrypt/principle.cn.md
index 3ddcd9686d..a56e0c1705 100644
--- a/docs/document/content/features/encrypt/principle.cn.md
+++ b/docs/document/content/features/encrypt/principle.cn.md
@@ -125,14 +125,13 @@ Apache ShardingSphere 接收到该 SQL，通过用户提供的加密配置，发
           plainColumn: pwd
           cipherColumn: pwd_cipher
           encryptorName: aes_encryptor
-props:
-  query-with-cipher-column: false
+  queryWithCipherColumn: false
 ```
 
 依据上述加密规则可知，首先需要在数据库表 `t_user` 里新增一个字段叫做 `pwd_cipher`，即 cipherColumn，用于存放密文数据，同时我们把 plainColumn 设置为 `pwd`，用于存放明文数据，而把 logicColumn 也设置为 `pwd`。
 由于之前的代码 SQL 就是使用 `pwd` 进行编写，即面向逻辑列进行 SQL 编写，所以业务代码无需改动。
 通过 Apache ShardingSphere，针对新增的数据，会把明文写到pwd列，并同时把明文进行加密存储到 `pwd_cipher` 列。
-此时，由于 `query-with-cipher-column` 设置为 false，对业务应用来说，依旧使用 `pwd` 这一明文列进行查询存储，却在底层数据库表 `pwd_cipher` 上额外存储了新增数据的密文数据，其处理流程如下图所示：
+此时，由于 `queryWithCipherColumn` 设置为 false，对业务应用来说，依旧使用 `pwd` 这一明文列进行查询存储，却在底层数据库表 `pwd_cipher` 上额外存储了新增数据的密文数据，其处理流程如下图所示：
 
 ![6](https://shardingsphere.apache.org/document/current/img/encrypt/6.png)
 
@@ -142,15 +141,15 @@ props:
 2. 系统迁移中
 
 新增的数据已被 Apache ShardingSphere 将密文存储到密文列，明文存储到明文列；历史数据被业务方自行加密清洗后，将密文也存储到密文列。
-也就是说现在的数据库里即存放着明文也存放着密文，只是由于配置项中的 query-with-cipher-column=false，所以密文一直没有被使用过。
-现在我们为了让系统能切到密文数据进行查询，需要将加密配置中的query-with-cipher-column设置为true。
+也就是说现在的数据库里即存放着明文也存放着密文，只是由于配置项中的 `queryWithCipherColumn = false`，所以密文一直没有被使用过。
+现在我们为了让系统能切到密文数据进行查询，需要将加密配置中的 queryWithCipherColumn 设置为 true。
 在重启系统后，我们发现系统业务一切正常，但是 Apache ShardingSphere 已经开始从数据库里取出密文列的数据，解密后返回给用户；
 而对于用户的增删改需求，则依旧会把原文数据存储到明文列，加密后密文数据存储到密文列。
 
 虽然现在业务系统通过将密文列的数据取出，解密后返回；但是，在存储的时候仍旧会存一份原文数据到明文列，这是为什么呢？
 答案是：为了能够进行系统回滚。
 **因为只要密文和明文永远同时存在，我们就可以通过开关项配置自由将业务查询切换到 cipherColumn 或 plainColumn。**
-也就是说，如果将系统切到密文列进行查询时，发现系统报错，需要回滚。那么只需将 query-with-cipher-column=false，Apache ShardingSphere 将会还原，即又重新开始使用 plainColumn 进行查询。
+也就是说，如果将系统切到密文列进行查询时，发现系统报错，需要回滚。那么只需将 `queryWithCipherColumn = false`，Apache ShardingSphere 将会还原，即又重新开始使用 plainColumn 进行查询。
 处理流程如下图所示：
 
 ![7](https://shardingsphere.apache.org/document/current/img/encrypt/7.png)
@@ -179,8 +178,6 @@ props:
         pwd: # pwd 与 pwd_cipher 的转换映射
           cipherColumn: pwd_cipher
           encryptorName: aes_encryptor
-props:
-  query-with-cipher-column: true
 ```
 
 其处理流程如下：
diff --git a/docs/document/content/features/encrypt/principle.en.md b/docs/document/content/features/encrypt/principle.en.md
index 1213ef171d..ae37de8050 100644
--- a/docs/document/content/features/encrypt/principle.en.md
+++ b/docs/document/content/features/encrypt/principle.en.md
@@ -163,15 +163,14 @@ In addition, demonstrate a set of encryption configuration rules, as follows:
           plainColumn: pwd
           cipherColumn: pwd_cipher
           encryptorName: aes_encryptor
-props:
-  query-with-cipher-column: false
+  queryWithCipherColumn: false
 ```
 
 According to the above encryption rules, we need to add a column called pwd_cipher in the t_user table, that is, cipherColumn, which is used to store ciphertext data. 
 At the same time, we set plainColumn to pwd, which is used to store plaintext data, and logicColumn is also set to pwd. 
 Because the previous SQL was written using pwd, that is, the SQL was written for logical columns, so the business code did not need to be changed. 
 Through Apache ShardingSphere, for the incremental data, the plain text will be written to the pwd column, and the plain text will be encrypted and stored in the pwd_cipher column. 
-At this time, because query-with-cipher-column is set to false, for business applications, the plain text column of pwd is still used for query storage, 
+At this time, because `queryWithCipherColumn` is set to false, for business applications, the plain text column of pwd is still used for query storage, 
 but the cipher text data of the new data is additionally stored on the underlying database table pwd_cipher. The processing flow is shown below:
 
 ![6](https://shardingsphere.apache.org/document/current/img/encrypt/6_en.png)
@@ -184,8 +183,8 @@ Now it is necessary to process historical plaintext inventory data.
 
 The incremental data has been stored by Apache ShardingSphere in the ciphertext column and the plaintext is stored in the plaintext column; after the historical data is encrypted and cleaned by the business party itself, 
 the ciphertext is also stored in the ciphertext column. That is to say, the plaintext and the ciphertext are stored in the current database. 
-Since the `query-with-cipher-column = false` in the configuration item, the ciphertext has never been used. 
-Now we need to set the `query-with-cipher-column` in the encryption configuration to true in order for the system to cut the ciphertext data for query. 
+Since the `queryWithCipherColumn = false` in the configuration item, the ciphertext has never been used. 
+Now we need to set the `queryWithCipherColumn` in the encryption configuration to true in order for the system to cut the ciphertext data for query. 
 After restarting the system, we found that the system business is normal, but Apache ShardingSphere has started to extract the ciphertext data from the database, 
 decrypt it and return it to the user; and for the user's insert, delete and update requirements, 
 the original data will still be stored The plaintext column, the encrypted ciphertext data is stored in the ciphertext column.
@@ -195,7 +194,7 @@ however, it will still save a copy of the original data to the plaintext column
 Why? The answer is: in order to be able to roll back the system. 
 **Because as long as the ciphertext and plaintext always exist at the same time, we can freely switch the business query to cipherColumn or plainColumn through the configuration of the switch item.** 
 In other words, if the system is switched to the ciphertext column for query, the system reports an error and needs to be rolled back. 
-Then just set query-with-cipher-column = false, Apache ShardingSphere will restore, that is, start using plainColumn to query again. 
+Then just set `queryWithCipherColumn = false`, Apache ShardingSphere will restore, that is, start using plainColumn to query again. 
 The processing flow is shown in the following figure:
 
 ![7](https://shardingsphere.apache.org/document/current/img/encrypt/7_en.png)
@@ -229,8 +228,6 @@ So the encryption configuration after migration is:
         pwd: # pwd与pwd_cipher的转换映射
           cipherColumn: pwd_cipher
           encryptorName: aes_encryptor
-props:
-  query-with-cipher-column: true
 ```
 
 The processing flow is as follows:
diff --git a/docs/document/content/features/test-engine/performance-test-sysbench.cn.md b/docs/document/content/features/test-engine/performance-test-sysbench.cn.md
index 684d3494aa..1e957f6824 100644
--- a/docs/document/content/features/test-engine/performance-test-sysbench.cn.md
+++ b/docs/document/content/features/test-engine/performance-test-sysbench.cn.md
@@ -317,7 +317,6 @@ props:
   proxy-transaction-type: LOCAL
   proxy-opentracing-enabled: false
   proxy-hint-enabled: false
-  query-with-cipher-column: true
   sql-show: false
   check-table-metadata-enabled: false
   lock-wait-timeout-milliseconds: 50000 # The maximum time to wait for a lock
diff --git a/docs/document/content/features/test-engine/performance-test-sysbench.en.md b/docs/document/content/features/test-engine/performance-test-sysbench.en.md
index 5c4400b9ca..d71ebb3472 100644
--- a/docs/document/content/features/test-engine/performance-test-sysbench.en.md
+++ b/docs/document/content/features/test-engine/performance-test-sysbench.en.md
@@ -317,7 +317,6 @@ props:
   proxy-transaction-type: LOCAL
   proxy-opentracing-enabled: false
   proxy-hint-enabled: false
-  query-with-cipher-column: true
   sql-show: false
   check-table-metadata-enabled: false
   lock-wait-timeout-milliseconds: 50000 # The maximum time to wait for a lock
diff --git a/docs/document/content/features/test-engine/performance-test.cn.md b/docs/document/content/features/test-engine/performance-test.cn.md
index ddc9cb4aeb..b376e1559a 100644
--- a/docs/document/content/features/test-engine/performance-test.cn.md
+++ b/docs/document/content/features/test-engine/performance-test.cn.md
@@ -302,8 +302,6 @@ rules:
         pad:
           cipherColumn: pad_cipher
           encryptorName: md5_encryptor
-props:
-  query-with-cipher-column: true
 ```
 
 #### 全路由
diff --git a/docs/document/content/features/test-engine/performance-test.en.md b/docs/document/content/features/test-engine/performance-test.en.md
index 84f7d4eaf8..313844df09 100644
--- a/docs/document/content/features/test-engine/performance-test.en.md
+++ b/docs/document/content/features/test-engine/performance-test.en.md
@@ -302,9 +302,7 @@ rules:
           encryptorName: aes_encryptor
         pad:
           cipherColumn: pad_cipher
-          encryptorName: md5_encryptor
-props:
-  query-with-cipher-column: true    
+          encryptorName: md5_encryptor    
 ```
 
 #### Full Route Configuration
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/encrypt.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/encrypt.cn.md
index 134b613ddf..bdbb0decf7 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/encrypt.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/encrypt.cn.md
@@ -9,10 +9,11 @@ weight = 3
 
 可配置属性：
 
-| *名称*          | *数据类型*                                           | *说明*             |
-| -------------- | --------------------------------------------------- | ------------------ |
-| tables (+)     | Collection\<EncryptTableRuleConfiguration\>         | 加密表规则配置       |
-| encryptors (+) | Map\<String, ShardingSphereAlgorithmConfiguration\> | 加解密算法名称和配置 |
+| *名称*                     | *数据类型*                                           | *说明*                                                 | *默认值* |
+| ------------------------- | --------------------------------------------------- | ----------------------------------------------------- | ------- |
+| tables (+)                | Collection\<EncryptTableRuleConfiguration\>         | 加密表规则配置                                           |        |
+| encryptors (+)            | Map\<String, ShardingSphereAlgorithmConfiguration\> | 加解密算法名称和配置                                      |        |
+| queryWithCipherColumn (?) | boolean                                             | 是否使用加密列进行查询。在有原文列的情况下，可以使用原文列进行查询 | true   |
 
 ## 加密表规则配置
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/encrypt.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/encrypt.en.md
index c7dcd5e890..6fb615561e 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/encrypt.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/encrypt.en.md
@@ -9,10 +9,11 @@ Class name: org.apache.shardingsphere.encrypt.api.config.EncryptRuleConfiguratio
 
 Attributes:
 
-| *Name*         | *DataType*                                          | *Description*                             |
-| -------------- | --------------------------------------------------- | ----------------------------------------- |
-| tables (+)     | Collection\<EncryptTableRuleConfiguration\>         | Encrypt table rule configurations         |
-| encryptors (+) | Map\<String, ShardingSphereAlgorithmConfiguration\> | Encrypt algorithm name and configurations |
+| *Name*                    | *DataType*                                          | *Description*                                                                                  | *Default Value* |
+| ------------------------- | --------------------------------------------------- | ---------------------------------------------------------------------------------------------- | --------------- |
+| tables (+)                | Collection\<EncryptTableRuleConfiguration\>         | Encrypt table rule configurations                                                              |                 |
+| encryptors (+)            | Map\<String, ShardingSphereAlgorithmConfiguration\> | Encrypt algorithm name and configurations                                                      |                 |
+| queryWithCipherColumn (?) | boolean                                             | Whether query with cipher column for data encrypt. User you can use plaintext to query if have | true            |
 
 ## Encrypt Table Rule Configuration
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.cn.md
index 5a6de7afd8..f880948b48 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.cn.md
@@ -99,7 +99,6 @@ ReadwriteSplittingRuleConfiguration readWriteSplittingyRuleConfiguration = new R
 /* 其他配置 */
 Properties otherProperties = new Properties();
 otherProperties.setProperty("sql-show", "true");
-otherProperties.setProperty("query-with-cipher-column", "true");
 
 /* shardingDataSource 就是最终被ORM框架或其他jdbc框架引用的数据源名称 */
 DataSource shardingDataSource = ShardingSphereDataSourceFactory.createDataSource(datasourceMaps, Arrays.asList(shardingRuleConfiguration, readWriteSplittingyRuleConfiguration, encryptRuleConfiguration), otherProperties);
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.en.md
index 728e4999e1..51dfaa28bd 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/java-api/mix.en.md
@@ -95,7 +95,6 @@ ReadwriteSplittingRuleConfiguration readWriteSplittingRuleConfiguration = new Re
 /* Other Properties configuration */
 Properties otherProperties = new Properties();
 otherProperties.setProperty("sql-show", "true");
-otherProperties.setProperty("query-with-cipher-column", "true");
 
 /* The variable `shardingDataSource` is the logic data source referenced by other frameworks(such as ORM, JPA, etc.) */
 DataSource shardingDataSource = ShardingSphereDataSourceFactory.createDataSource(datasourceMaps, Arrays.asList(shardingRuleConfiguration, readWriteSplittingRuleConfiguration, encryptRuleConfiguration), otherProperties);
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/props.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/props.cn.md
index ed067b948a..4368e388cd 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/props.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/props.cn.md
@@ -10,12 +10,11 @@ Apache ShardingSphere 提供属性配置的方式配置系统级配置。
 
 ## 配置项说明
 
-| *名称*                             | *数据类型*   | *说明*                                                                                                                                                                                  | *默认值*  |
-| ---------------------------------- | ----------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------- |
-| sql-show (?)                       | boolean     | 是否在日志中打印 SQL。 <br /> 打印 SQL 可以帮助开发者快速定位系统问题。日志内容包含：逻辑 SQL，真实 SQL 和 SQL 解析结果。<br /> 如果开启配置，日志将使用 Topic `ShardingSphere-SQL`，日志级别是 INFO。 | false    |
-| sql-simple (?)                     | boolean     | 是否在日志中打印简单风格的 SQL。                                                                                                                                                           | false    |
-| executor-size (?)                  | int         | 用于设置任务处理线程池的大小。每个 ShardingSphereDataSource 使用一个独立的线程池，同一个 JVM 的不同数据源不共享线程池。                                                                           | infinite |
-| max-connections-size-per-query (?) | int         | 一次查询请求在每个数据库实例中所能使用的最大连接数。                                                                                                                                          | 1        |
-| check-table-metadata-enabled (?)   | boolean     | 是否在程序启动和更新时检查分片元数据的结构一致性。                                                                                                                                            | false    |
-| query-with-cipher-column (?)       | boolean     | 是否使用加密列进行查询。在有原文列的情况下，可以使用原文列进行查询。                                                                                                                            | true     |
-| xa-transaction-manager-type (?)    | String      | XA 事务管理器类型。列如：Atomikos，Narayana，Bitronix                                                                                                                                      | Atomikos |
+| *名称*                             | *数据类型*   | *说明*                                                                                                                                                                          | *默认值*  |
+| ---------------------------------- | ---------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | -------- |
+| sql-show (?)                       | boolean    | 是否在日志中打印 SQL。 <br /> 打印 SQL 可以帮助开发者快速定位系统问题。日志内容包含：逻辑 SQL，真实 SQL 和 SQL 解析结果。<br /> 如果开启配置，日志将使用 Topic `ShardingSphere-SQL`，日志级别是 INFO。 | false    |
+| sql-simple (?)                     | boolean    | 是否在日志中打印简单风格的 SQL。                                                                                                                                                    | false    |
+| executor-size (?)                  | int        | 用于设置任务处理线程池的大小。每个 ShardingSphereDataSource 使用一个独立的线程池，同一个 JVM 的不同数据源不共享线程池。                                                                         | infinite |
+| max-connections-size-per-query (?) | int        | 一次查询请求在每个数据库实例中所能使用的最大连接数。                                                                                                                                     | 1        |
+| check-table-metadata-enabled (?)   | boolean    | 是否在程序启动和更新时检查分片元数据的结构一致性。                                                                                                                                       | false    |
+| xa-transaction-manager-type (?)    | String     | XA 事务管理器类型。列如：Atomikos，Narayana，Bitronix                                                                                                                               | Atomikos |
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/props.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/props.en.md
index 5edf153243..bb623f10c1 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/props.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/props.en.md
@@ -17,5 +17,4 @@ Apache ShardingSphere provides the way of property configuration to configure sy
 | executor-size (?)                  | int         | The max thread size of worker group to execute SQL. One ShardingSphereDataSource will use a independent thread pool, it does not share thread pool even different data source in same JVM.                                                                   | infinite        |
 | max-connections-size-per-query (?) | int         | Max opened connection size for each query.                                                                                                                                                                                                                   | 1               |
 | check-table-metadata-enabled (?)   | boolean     | Whether validate table meta data consistency when application startup or updated.                                                                                                                                                                            | false           |
-| query-with-cipher-column (?)       | boolean     | Whether query with cipher column for data encrypt. User you can use plaintext to query if have.                                                                                                                                                              | true            |
 | xa-transaction-manager-type (?)    | String      | XA Transaction manager type. Include: Atomikos, Narayana and Bitronix.                                                                                                                                                                                       | Atomikos        |
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/encrypt.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/encrypt.cn.md
index 1747e22d0f..fdcc772bd5 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/encrypt.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/encrypt.cn.md
@@ -16,6 +16,8 @@ spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.en
 # 加密算法配置
 spring.shardingsphere.rules.encrypt.encryptors.<encrypt-algorithm-name>.type= # 加密算法类型
 spring.shardingsphere.rules.encrypt.encryptors.<encrypt-algorithm-name>.props.xxx= # 加密算法属性配置
+
+spring.shardingsphere.rules.encrypt.queryWithCipherColumn= # 是否使用加密列进行查询。在有原文列的情况下，可以使用原文列进行查询
 ```
 
 算法类型的详情，请参见[内置加密算法列表](/cn/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/encrypt)。
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/encrypt.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/encrypt.en.md
index 5ea0f4ccc6..7b4535fded 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/encrypt.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-boot-starter/encrypt.en.md
@@ -16,6 +16,8 @@ spring.shardingsphere.rules.encrypt.tables.<table-name>.columns.<column-name>.en
 # Encrypt algorithm configuration
 spring.shardingsphere.rules.encrypt.encryptors.<encrypt-algorithm-name>.type= # Encrypt algorithm type
 spring.shardingsphere.rules.encrypt.encryptors.<encrypt-algorithm-name>.props.xxx= # Encrypt algorithm properties
+
+spring.shardingsphere.rules.encrypt.queryWithCipherColumn= # Whether query with cipher column for data encrypt. User you can use plaintext to query if have
 ```
 
 Please refer to [Built-in Encrypt Algorithm List](/en/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/encrypt) for more details about type of algorithm.
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/encrypt.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/encrypt.cn.md
index fdc0359dc8..eb755b0b1c 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/encrypt.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/encrypt.cn.md
@@ -9,10 +9,11 @@ weight = 3
 
 \<encrypt:rule />
 
-| *名称*    | *类型* | *说明*         |
-| --------- | ----- | ------------- |
-| id        | 属性  | Spring Bean Id |
-| table (+) | 标签  | 加密表配置      |
+| *名称*                     | *类型* | *说明*                                               | *默认值* |
+| ------------------------- | ----- | ---------------------------------------------------- | ------- |
+| id                        | 属性  | Spring Bean Id                                        |         |
+| queryWithCipherColumn (?) | 属性  | 是否使用加密列进行查询。在有原文列的情况下，可以使用原文列进行查询 | true   |
+| table (+)                 | 标签  | 加密表配置                                              |         |
 
 \<encrypt:table />
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/encrypt.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/encrypt.en.md
index fd8eec510e..8fcd358566 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/encrypt.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/encrypt.en.md
@@ -9,10 +9,11 @@ Namespace: [http://shardingsphere.apache.org/schema/shardingsphere/encrypt/encry
 
 \<encrypt:rule />
 
-| *Name*    | *Type*    | *Description*               |
-| --------- | --------- | --------------------------- |
-| id        | Attribute | Spring Bean Id              |
-| table (+) | Tag       | Encrypt table configuration |
+| *Name*                    | *Type*    | *Description*                                                                                  | *Default Value* |
+| ------------------------- | --------- | ---------------------------------------------------------------------------------------------- | --------------- |
+| id                        | Attribute | Spring Bean Id                                                                                 |                 |
+| queryWithCipherColumn (?) | Attribute | Whether query with cipher column for data encrypt. User you can use plaintext to query if have | true            |
+| table (+)                 | Tag       | Encrypt table configuration                                                                    |                 |
 
 \<encrypt:table />
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/mix.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/mix.cn.md
index 7d22bd8b11..69a4ceb651 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/mix.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/mix.cn.md
@@ -124,10 +124,8 @@ weight = 6
     <shardingsphere:data-source id="readQueryDataSource" data-source-names="write_ds0, read_ds0_0, read_ds0_1, write_ds1, read_ds1_0, read_ds1_1" 
         rule-refs="readWriteSplittingRule, shardingRule, encryptRule" >
         <props>
-            <prop key="query-with-cipher-column">true</prop>
             <prop key="sql-show">true</prop>
         </props>
     </shardingsphere:data-source>
-    
 </beans>
 ```
\ No newline at end of file
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/mix.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/mix.en.md
index dfb35fe3bf..1fde361101 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/mix.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/spring-namespace/mix.en.md
@@ -119,10 +119,8 @@ weight = 6
     <shardingsphere:data-source id="readQueryDataSource" data-source-names="write_ds0, read_ds0_0, read_ds0_1, write_ds1, read_ds1_0, read_ds1_1" 
         rule-refs="readWriteSplittingRule, shardingRule, encryptRule" >
         <props>
-            <prop key="query-with-cipher-column">true</prop>
             <prop key="sql-show">true</prop>
         </props>
     </shardingsphere:data-source>
-  
 </beans>
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/encrypt.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/encrypt.cn.md
index e99025836e..26b87eba73 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/encrypt.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/encrypt.cn.md
@@ -26,8 +26,7 @@ rules:
       props: # 加解密算法属性配置
         # ...
 
-props:
-  # ...
+  queryWithCipherColumn: # 是否使用加密列进行查询。在有原文列的情况下，可以使用原文列进行查询
 ```
 
 算法类型的详情，请参见[内置加密算法列表](/cn/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/encrypt)。
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/encrypt.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/encrypt.en.md
index c34e18fe03..c77a0b052c 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/encrypt.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/encrypt.en.md
@@ -26,8 +26,7 @@ rules:
       props: # Encrypt algorithm properties
         # ...
 
-props:
-  # ...
+  queryWithCipherColumn: # Whether query with cipher column for data encrypt. User you can use plaintext to query if have
 ```
 
 Please refer to [Built-in Encrypt Algorithm List](/en/user-manual/shardingsphere-jdbc/configuration/built-in-algorithm/encrypt) for more details about type of algorithm.
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/mix.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/mix.cn.md
index 775c9b617a..1e48d68889 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/mix.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/mix.cn.md
@@ -62,5 +62,4 @@ rules:
 
 props:
   sql-show: true
-  query-with-cipher-column: true
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/mix.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/mix.en.md
index c392bcff6e..4d3333f5e8 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/mix.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/configuration/yaml/mix.en.md
@@ -63,5 +63,4 @@ rules:
 
 props:
   sql-show: true
-  query-with-cipher-column: true
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/usage/governance/spring-namespace.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/usage/governance/spring-namespace.cn.md
index 9b938e1a87..b6bd355ee2 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/usage/governance/spring-namespace.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/usage/governance/spring-namespace.cn.md
@@ -45,11 +45,7 @@ weight = 4
      <governance:reg-center id="regCenter" type="Zookeeper" server-lists="localhost:2181" />   
      <governance:data-source id="shardingDatabasesTablesDataSource" data-source-names="demo_ds_0, demo_ds_1" reg-center-ref="regCenter" config-center-ref="configCenter" rule-refs="shardingRule" overwrite="true" />
      <governance:data-source id="replicaQueryDataSource" data-source-names="demo_primary_ds, demo_replica_ds_0, demo_replica_ds_1" reg-center-ref="regCenter" config-center-ref="configCenter" rule-refs="replicaQueryRule" overwrite="true" />
-     <governance:data-source id="encryptDataSource" data-source-names="demo_ds" reg-center-ref="regCenter" config-center-ref="configCenter" rule-refs="encryptRule" overwrite="true" >
-        <props>
-            <prop key="query-with-cipher-column">true</prop>
-        </props>
-     </governance:data-source>
+     <governance:data-source id="encryptDataSource" data-source-names="demo_ds" reg-center-ref="regCenter" config-center-ref="configCenter" rule-refs="encryptRule" overwrite="true" />
 </beans>
 ```
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/usage/governance/spring-namespace.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/usage/governance/spring-namespace.en.md
index aec5ff9acf..cfce7d381b 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/usage/governance/spring-namespace.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/usage/governance/spring-namespace.en.md
@@ -44,11 +44,7 @@ weight = 4
      </util:properties>
      <governance:reg-center id="regCenter" type="Zookeeper" server-lists="localhost:2181" />
      <governance:data-source id="shardingDatabasesTablesDataSource" data-source-names="demo_ds_0, demo_ds_1" reg-center-ref="regCenter" config-center-ref="configCenter" rule-refs="shardingRule" overwrite="true" />
-     <governance:data-source id="encryptDataSource" data-source-names="demo_ds" reg-center-ref="regCenter" config-center-ref="configCenter" rule-refs="encryptRule" overwrite="true" >
-        <props>
-            <prop key="query-with-cipher-column">true</prop>
-        </props>
-     </governance:data-source>
+     <governance:data-source id="encryptDataSource" data-source-names="demo_ds" reg-center-ref="regCenter" config-center-ref="configCenter" rule-refs="encryptRule" overwrite="true" />
 </beans>
 ```
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/configuration/props.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/configuration/props.cn.md
index 8523f2f573..54b29a85c7 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/configuration/props.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/configuration/props.cn.md
@@ -10,16 +10,15 @@ Apache ShardingSphere 提供属性配置的方式配置系统级配置。
 
 ## 配置项说明
 
-| *名称*                             | *数据类型*   | *说明*                                                                                                                                                                                  | *默认值*  |
-| ---------------------------------- | ----------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------- |
+| *名称*                             | *数据类型*   | *说明*                                                                                                                                                                           | *默认值*  |
+| ---------------------------------- | ----------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | -------- |
 | sql-show (?)                       | boolean     | 是否在日志中打印 SQL。 <br /> 打印 SQL 可以帮助开发者快速定位系统问题。日志内容包含：逻辑 SQL，真实 SQL 和 SQL 解析结果。<br /> 如果开启配置，日志将使用 Topic `ShardingSphere-SQL`，日志级别是 INFO。 | false    |
-| sql-simple (?)                     | boolean     | 是否在日志中打印简单风格的 SQL。                                                                                                                                                           | false    |
-| executor-size (?)                  | int         | 用于设置任务处理线程池的大小。每个 ShardingSphereDataSource 使用一个独立的线程池，同一个 JVM 的不同数据源不共享线程池。                                                                           | infinite |
-| max-connections-size-per-query (?) | int         | 一次查询请求在每个数据库实例中所能使用的最大连接数。                                                                                                                                          | 1        |
-| check-table-metadata-enabled (?)   | boolean     | 是否在程序启动和更新时检查分片元数据的结构一致性。                                                                                                                                            | false    |
-| query-with-cipher-column (?)       | boolean     | 是否使用加密列进行查询。在有原文列的情况下，可以使用原文列进行查询。                                                                                                                            | true     |
-| proxy-frontend-flush-threshold (?) | int         | 在 ShardingSphere-Proxy 中设置传输数据条数的 IO 刷新阈值。                                                                                                                                  | 128      |
-| proxy-transaction-type (?)         | String      | ShardingSphere-Proxy 中使用的默认事务类型。包括：LOCAL、XA 和 BASE。                                                                                                                         | LOCAL    |
-| proxy-opentracing-enabled (?)      | boolean     | 是否允许在 ShardingSphere-Proxy 中使用 OpenTracing。                                                                                                                                       | false    |
-| proxy-hint-enabled (?)             | boolean     | 是否允许在 ShardingSphere-Proxy 中使用 Hint。使用 Hint 会将 Proxy 的线程处理模型由 IO 多路复用变更为每个请求一个独立的线程，会降低 Proxy 的吞吐量。                                                 | false    |
-| xa-transaction-manager-type (?)    | String      | XA 事务管理器类型。列如：Atomikos，Narayana，Bitronix。                                                                                                                                     | Atomikos  |
+| sql-simple (?)                     | boolean     | 是否在日志中打印简单风格的 SQL。                                                                                                                                                     | false   |
+| executor-size (?)                  | int         | 用于设置任务处理线程池的大小。每个 ShardingSphereDataSource 使用一个独立的线程池，同一个 JVM 的不同数据源不共享线程池。                                                                         | infinite |
+| max-connections-size-per-query (?) | int         | 一次查询请求在每个数据库实例中所能使用的最大连接数。                                                                                                                                     | 1        |
+| check-table-metadata-enabled (?)   | boolean     | 是否在程序启动和更新时检查分片元数据的结构一致性。                                                                                                                                       | false    |
+| proxy-frontend-flush-threshold (?) | int         | 在 ShardingSphere-Proxy 中设置传输数据条数的 IO 刷新阈值。                                                                                                                            | 128      |
+| proxy-transaction-type (?)         | String      | ShardingSphere-Proxy 中使用的默认事务类型。包括：LOCAL、XA 和 BASE。                                                                                                                   | LOCAL    |
+| proxy-opentracing-enabled (?)      | boolean     | 是否允许在 ShardingSphere-Proxy 中使用 OpenTracing。                                                                                                                                | false    |
+| proxy-hint-enabled (?)             | boolean     | 是否允许在 ShardingSphere-Proxy 中使用 Hint。使用 Hint 会将 Proxy 的线程处理模型由 IO 多路复用变更为每个请求一个独立的线程，会降低 Proxy 的吞吐量。                                                | false    |
+| xa-transaction-manager-type (?)    | String      | XA 事务管理器类型。列如：Atomikos，Narayana，Bitronix。                                                                                                                               | Atomikos |
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/configuration/props.en.md b/docs/document/content/user-manual/shardingsphere-proxy/configuration/props.en.md
index ed6a814a75..720dda015e 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/configuration/props.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/configuration/props.en.md
@@ -17,9 +17,8 @@ Apache ShardingSphere provides the way of property configuration to configure sy
 | executor-size (?)                  | int         | The max thread size of worker group to execute SQL. One ShardingSphereDataSource will use a independent thread pool, it does not share thread pool even different data source in same JVM.                                                                   | infinite        |
 | max-connections-size-per-query (?) | int         | Max opened connection size for each query.                                                                                                                                                                                                                   | 1               |
 | check-table-metadata-enabled (?)   | boolean     | Whether validate table meta data consistency when application startup or updated.                                                                                                                                                                            | false           |
-| query-with-cipher-column (?)       | boolean     | Whether query with cipher column for data encrypt. User you can use plaintext to query if have.                                                                                                                                                              | true            |
 | proxy-frontend-flush-threshold (?) | int         | Flush threshold for every records from databases for ShardingSphere-Proxy.                                                                                                                                                                                   | 128             |
 | proxy-transaction-type (?)         | String      | Default transaction type of ShardingSphere-Proxy. Include: LOCAL, XA and BASE.                                                                                                                                                                               | LOCAL           |
 | proxy-opentracing-enabled (?)      | boolean     | Whether enable opentracing for ShardingSphere-Proxy.                                                                                                                                                                                                         | false           |
 | proxy-hint-enabled (?)             | boolean     | Whether enable hint for ShardingSphere-Proxy. Using Hint will switch proxy thread mode from IO multiplexing to per connection per thread, which will reduce system throughput.                                                                               | false           |
-| xa-transaction-manager-type (?)    | String      | XA Transaction manager type. Include: Atomikos, Narayana and Bitronix.                                                                                                                                                                                                    | Atomikos        |
+| xa-transaction-manager-type (?)    | String      | XA Transaction manager type. Include: Atomikos, Narayana and Bitronix.                                                                                                                                                                                       | Atomikos        |
