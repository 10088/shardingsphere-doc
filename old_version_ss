commit 092bb7d609df6bb5b44e2784591989d590391ba3
Author: Liang Zhang <zhangliang@apache.org>
Date:   Sat Aug 6 19:00:17 2022 +0800

    Update overview doc (#19928)
    
    * Update license for pg version
    
    * Update overview doc

diff --git a/docs/document/content/overview/design.cn.md b/docs/document/content/overview/design.cn.md
index 5b355d9b1fe..5236ca76548 100644
--- a/docs/document/content/overview/design.cn.md
+++ b/docs/document/content/overview/design.cn.md
@@ -5,7 +5,7 @@ weight = 2
 chapter = true
 +++
 
-ShardingSphere 采用了 Database Plus 设计哲学，该理念致力于构建数据库上层的标准和生态，在生态中补充数据库所缺失的能力。
+ShardingSphere 采用 Database Plus 设计哲学，该理念致力于构建数据库上层的标准和生态，在生态中补充数据库所缺失的能力。
 
 Apache ShardingSphere 的可插拔架构划分为 3 层，它们是：L1 内核层、L2 功能层、L3 生态层。
 
@@ -13,11 +13,15 @@ Apache ShardingSphere 的可插拔架构划分为 3 层，它们是：L1 内核
 
 ## L1 内核层
 
-是数据库基本能力的抽象，其所有组件均必须存在，但具体实现方式可通过可插拔的方式更换。 主要包括查询优化器、分布式事务引擎、分布式执行引擎、权限引擎和调度引擎等。
+是数据库基本能力的抽象，其所有组件均必须存在，但具体实现方式可通过可插拔的方式更换。
+主要包括查询优化器、分布式事务引擎、分布式执行引擎、权限引擎和调度引擎等。
 
 ## L2 功能层
 
-用于提供增量能力，其所有组件均是可选的，可以包含零至多个组件。组件之间完全隔离，互无感知，多组件可通过叠加的方式相互配合使用。 主要包括数据分片、读写分离、数据库高可用、数据加密、影子库等。用户自定义功能可完全面向 Apache ShardingSphere 定义的顶层接口进行定制化扩展，而无需改动内核代码。
+用于提供增量能力，其所有组件均是可选的，可以包含零至多个组件。
+组件之间完全隔离，互无感知，多组件可通过叠加的方式相互配合使用。
+主要包括数据分片、读写分离、数据库高可用、数据加密、影子库等。
+用户自定义功能可完全面向 Apache ShardingSphere 定义的顶层接口进行定制化扩展，而无需改动内核代码。
 
 ## L3 生态层
 
diff --git a/docs/document/content/overview/design.en.md b/docs/document/content/overview/design.en.md
index e92cfd77607..1ed1ea4b8d7 100644
--- a/docs/document/content/overview/design.en.md
+++ b/docs/document/content/overview/design.en.md
@@ -13,13 +13,20 @@ The pluggable architecture of Apache ShardingSphere is composed of three layers
 
 ## L1 Kernel Layer
 
-An abstraction of databases' basic capabilities. All the components are required and the specific implementation method can be replaced thanks to plugins. It includes a query optimizer, distributed transaction engine, distributed execution engine, permission engine and scheduling engine.
+An abstraction of databases' basic capabilities.
+All the components are required and the specific implementation method can be replaced thanks to plugins.
+It includes a query optimizer, distributed transaction engine, distributed execution engine, permission engine and scheduling engine.
 
 ## L2 Feature Layer
 
-Used to provide enhancement capabilities. All components are optional, allowing you to choose whether to include zero or multiple components. Components are isolated from each other, and multiple components can be used together by overlaying. It includes data sharding, read/write splitting, database high availability, data encryption and shadow database and so on. The user-defined feature can be fully customized and extended for the top-level interface defined by Apache ShardingSphere without changing kernel codes.
+Used to provide enhancement capabilities.
+All components are optional, allowing you to choose whether to include zero or multiple components.
+Components are isolated from each other, and multiple components can be used together by overlaying.
+It includes data sharding, read/write splitting, database high availability, data encryption and shadow database and so on.
+The user-defined feature can be fully customized and extended for the top-level interface defined by Apache ShardingSphere without changing kernel codes.
 
 ## L3 Ecosystem Layer
 
-It is used to integrate and merge the current database ecosystems. The ecosystem layer includes database protocol, SQL parser and storage adapter, corresponding to the way in which Apache ShardingSphere provides services by database protocol, the way in which SQL dialect operates data, and the database type that interacts with storage nodes.
+It is used to integrate and merge the current database ecosystems.
+The ecosystem layer includes database protocol, SQL parser and storage adapter, corresponding to the way in which Apache ShardingSphere provides services by database protocol, the way in which SQL dialect operates data, and the database type that interacts with storage nodes.
 
diff --git a/docs/document/content/overview/introduction.cn.md b/docs/document/content/overview/introduction.cn.md
new file mode 100644
index 00000000000..f99c329cfb4
--- /dev/null
+++ b/docs/document/content/overview/introduction.cn.md
@@ -0,0 +1,38 @@
++++
+pre = "<b>1.1 </b>"
+title = "什么是 ShardingSphere"
+weight = 1
+chapter = true
++++
+
+## 定义
+
+Apache ShardingSphere 是一款开源的分布式数据库生态项目，由 JDBC、Proxy 和 Sidecar（规划中） 3 款产品组成。 其核心采用可插拔架构，通过组件扩展功能。
+对上以数据库协议及 SQL 方式提供诸多增强功能，包括数据分片、访问路由、数据安全等；对下原生支持 MySQL、PostgreSQL、SQL Server、Oracle 等多种数据存储引擎。 
+Apache ShardingSphere 项目理念，是提供数据库增强计算服务平台，进而围绕其上构建生态。
+充分利用现有数据库的计算与存储能力，通过插件化方式增强其核心能力，为企业解决在数字化转型中面临的诸多使用难点，为加速数字化应用赋能。
+
+ShardingSphere 已于 2020 年 4 月 16 日成为 [Apache 软件基金会](https://apache.org/index.html#projects-list)的顶级项目。
+欢迎通过[邮件列表](mailto:dev@shardingsphere.apache.org)参与讨论。
+
+## 产品优势
+
+* 构建异构数据库上层生态和标准
+
+Apache ShardingSphere 产品定位为 Database Plus，旨在构建异构数据库上层的标准和生态。
+它关注如何充分合理地利用数据库的计算和存储能力，而并非实现一个全新的数据库。
+ShardingSphere 站在数据库的上层视角，关注他们之间的协作多于数据库自身。
+
+* 在原有关系型数据库基础上提供扩展和增强
+
+Apache ShardingSphere 旨在充分合理地在分布式的场景下利用关系型数据库的计算和存储能力， 并非实现一个全新的关系型数据库。
+关系型数据库当今依然占有巨大市场份额，是企业核心系统的基石，未来也难于撼动，我们更加注重在原有基础上提供增量，而非颠覆。
+
+* 统一管控的多端接入
+
+Apache ShardingSphere 是多接入端共同组成的生态圈。 
+通过混合使用 ShardingSphere-JDBC 和 ShardingSphere-Proxy，并采用同一注册中心统一配置分片策略，能够灵活的搭建适用于各种场景的应用系统，使得架构师更加自由地调整适合于当前业务的最佳系统架构。
+
+## 线路规划
+
+![Roadmap](https://shardingsphere.apache.org/document/current/img/roadmap_v2.png)
diff --git a/docs/document/content/overview/introduction.en.md b/docs/document/content/overview/introduction.en.md
new file mode 100644
index 00000000000..c6c3a9a9c43
--- /dev/null
+++ b/docs/document/content/overview/introduction.en.md
@@ -0,0 +1,44 @@
++++
+pre = "<b>1.1 </b>"
+title = "What is ShardingSphere"
+weight = 1
+chapter = true
++++
+
+## Definition
+
+Apache ShardingSphere is an open source ecosystem of distributed databases, including three independent products: JDBC, Proxy & Sidecar (Planning).
+It adopts a plugin-oriented (or plugabble) architecture and expands the original databases' features list thanks to components. 
+
+ShardingSphere provides many enhanced features in the form of database protocol and SQL, including data sharding, access routing, data security, etc.
+It supports MySQL, PostgreSQL, SQL Server, Oracle, and other data storage engines. 
+
+The idea of the Apache ShardingSphere project is to provide an enhanced database computing service platform and then build an ecosystem around it.
+The project makes full use of the computing and storage capabilities of existing databases and enhances their core capabilities thanks to plugins.
+It can solve many digital transformation challenges faced by enterprises and empower them to accelerate digital applications.
+
+ShardingSphere became an [Apache](https://apache.org/index.html#projects-list) Top-Level Project on April 16, 2020.
+You are welcome to check out the mailing list and discuss via [mail](mailto:dev@shardingsphere.apache.org).
+
+## Advantages
+
+- Build a standard layer & ecosystem above heterogeneous databases
+
+Apache ShardingSphere is positioned as Database Plus and aims at building a standard layer and ecosystem above heterogeneous databases.
+The project focuses on how to maximize the original database computing and storage capabilities - rather than creating a new database.
+Placed above databases, ShardingSphere enhances database inter-compatibility and collaboration.
+
+- Provide relational databases with expansions and enhancements
+
+Apache ShardingSphere is designed to fully unlock relational databases compute and storage capabilities in distributed scenarios, instead of creating an entirely new relational database.
+Relational databases still have a considerable market share today and are the cornerstone of the core system of enterprises.
+It is for such reasons that we believe that we should focus on enhancing it rather than overturning it.
+
+- Support multi access endpoint and unified management
+
+Apache ShardingSphere is an ecosystem composed of multiple access ports.
+By combining ShardingSphere-JDBC and ShardingSphere-Proxy, and using the same registry to configure sharding strategies, it can flexibly build application systems for various scenarios, enabling architects to adjust the system architecture for current businesses freely.
+
+## Roadmap
+
+![Roadmap](https://shardingsphere.apache.org/document/current/img/roadmap_v2.png)
diff --git a/docs/document/content/overview/scenarios.cn.md b/docs/document/content/overview/jdbc_proxy.cn.md
similarity index 74%
rename from docs/document/content/overview/scenarios.cn.md
rename to docs/document/content/overview/jdbc_proxy.cn.md
index 86a3bd0ca22..35f5c464f1e 100644
--- a/docs/document/content/overview/scenarios.cn.md
+++ b/docs/document/content/overview/jdbc_proxy.cn.md
@@ -5,7 +5,8 @@ weight = 3
 chapter = true
 +++
 
-Apache ShardingSphere 由 ShardingSphere-JDBC 和 ShardingSphere-Proxy 这 2 款既能够独立部署，又支持混合部署配合使用的产品组成。 它们均提供标准化的基于数据库作为存储节点的增量功能，可适用于如 Java 同构、异构语言、云原生等各种多样化的应用场景。
+Apache ShardingSphere 由 ShardingSphere-JDBC 和 ShardingSphere-Proxy 这 2 款既能够独立部署，又支持混合部署配合使用的产品组成。
+它们均提供标准化的基于数据库作为存储节点的增量功能，可适用于如 Java 同构、异构语言、云原生等各种多样化的应用场景。
 
 ## ShardingSphere-JDBC 独立部署
 
@@ -20,14 +21,14 @@ ShardingSphere-JDBC 是 Apache ShardingSphere 的第一个产品，也是 Apache
 
 ![ShardingSphere-JDBC Architecture](https://shardingsphere.apache.org/document/current/img/shardingsphere-jdbc_v3.png)
 
-||	ShardingSphere-JDBC	| ShardingSphere-Proxy |
-|---|---|---|
-|数据库|	任意	|MySQL/PostgreSQL|
-|连接消耗数|	高	|低|
-|异构语言|	仅 Java	| 任意 |
-|性能	| 损耗低	| 损耗略高 |
-|无中心化	|是	| 否 |
-|静态入口|	无	|有 |
+|           | ShardingSphere-JDBC | ShardingSphere-Proxy |
+| --------- | ------------------- | -------------------- |
+| 数据库     | `任意`               | MySQL/PostgreSQL     |
+| 连接消耗数  | `高`                | 低                    |
+| 异构语言   | `仅 Java`            | 任意                  |
+| 性能      | `损耗低`              | 损耗略高               |
+| 无中心化   | `是`                 | 否                    |
+| 静态入口   | `无`                 | 有                    |
 
 ShardingSphere-JDBC 的优势在于对 Java 应用的友好度。
 
@@ -47,15 +48,14 @@ ShardingSphere-Proxy 是 Apache ShardingSphere 的第二个产品。它定位为
 
 ![ShardingSphere-Proxy Architecture](https://shardingsphere.apache.org/document/current/img/shardingsphere-proxy_v2.png)
 
-
-||	ShardingSphere-JDBC	|ShardingSphere-Proxy|
-|---|---|---|
-|数据库	|任意	|MySQL/PostgreSQL|
-|连接消耗数	|高|	低|
-|异构语言	|仅 Java	|任意|
-|性能|	损耗低	|损耗略高|
-|无中心化	|是|	否|
-|静态入口|	无|	有|
+|           | ShardingSphere-JDBC | ShardingSphere-Proxy |
+| --------- | ------------------- | -------------------- |
+| 数据库     | 任意                 | `MySQL/PostgreSQL`   |
+| 连接消耗数  | 高                  | `低`                  |
+| 异构语言   | 仅 Java              | `任意`                |
+| 性能      | 损耗低                | `损耗略高`             |
+| 无中心化   | 是                   | `否`                  |
+| 静态入口   | 无                   | `有`                  |
 
 ShardingSphere-Proxy 的优势在于对异构语言的支持，以及为 DBA 提供可操作入口。
 源码：[https://github.com/apache/shardingsphere/tree/master/shardingsphere-proxy](https://github.com/apache/shardingsphere/tree/master/shardingsphere-proxy)
diff --git a/docs/document/content/overview/scenarios.en.md b/docs/document/content/overview/jdbc_proxy.en.md
similarity index 62%
rename from docs/document/content/overview/scenarios.en.md
rename to docs/document/content/overview/jdbc_proxy.en.md
index 8c8c103e2b0..9ddff65d4ce 100644
--- a/docs/document/content/overview/scenarios.en.md
+++ b/docs/document/content/overview/jdbc_proxy.en.md
@@ -18,15 +18,14 @@ As the community's first product and the predecessor of Apache ShardingSphere, S
 
 ![ShardingSphere-JDBC Architecture](https://shardingsphere.apache.org/document/current/img/shardingsphere-jdbc_v3.png)
 
-
-||	ShardingSphere-JDBC|	ShardingSphere-Proxy|
-|---|---|---|
-|Database|	Any|	MySQL/PostgreSQL|
-|Connections Count Cost|	More	|Less|
-|Heterogeneous language	|Java Only	|Any|
-|Performance|	Low loss	|Relatively High loss|
-|Decentralization|	Yes|	No|
-|Static entry|	No	| Yes |
+|                        | ShardingSphere-JDBC | ShardingSphere-Proxy |
+| ---------------------- | ------------------- | -------------------- |
+| Database               | `Any`               | MySQL/PostgreSQL     |
+| Connections Count Cost | `More`              | Less                 |
+| Heterogeneous language | `Java Only`         | Any                  |
+| Performance            | `Low loss`          | Relatively High loss |
+| Decentralization       | `Yes`               | No                   |
+| Static entry           | `No`                | Yes                  |
 
 ShardingSphere-JDBC is suitable for java applications.
 
@@ -38,24 +37,25 @@ Source Codes: [https://github.com/apache/shardingsphere/tree/master/shardingsphe
 [![Download](https://img.shields.io/badge/release-download-orange.svg)](/cn/downloads/)
 [![Docker Pulls](https://img.shields.io/docker/pulls/apache/shardingsphere-proxy.svg)](https://hub.docker.com/r/apache/shardingsphere-proxy)
 
-ShardingSphere-Proxy is Apache ShardingSphere's second product. It is a transparent database proxy, providing a database server that encapsulates database binary protocol to support heterogeneous languages. 
+ShardingSphere-Proxy is Apache ShardingSphere's second product.
+It is a transparent database proxy, providing a database server that encapsulates database binary protocol to support heterogeneous languages. 
 
-Currently, MySQL and PostgreSQL (compatible with PostgreSQL-based databases, such as openGauss) versions are provided. It can use any kind of terminal (such as MySQL Command Client, MySQL Workbench, etc.) that is compatible with MySQL or PostgreSQL protocol to operate data, which is more friendly to DBAs.
+Currently, MySQL and PostgreSQL (compatible with PostgreSQL-based databases, such as openGauss) versions are provided.
+It can use any kind of terminal (such as MySQL Command Client, MySQL Workbench, etc.) that is compatible with MySQL or PostgreSQL protocol to operate data, which is more friendly to DBAs.
 
 - Transparent to applications, it can be used directly as MySQL/PostgreSQL;
 - Applicable to any kind of client that is compatible with MySQL/PostgreSQL protocol.
 
 ![ShardingSphere-Proxy Architecture](https://shardingsphere.apache.org/document/current/img/shardingsphere-proxy_v2.png)
 
-	
-||	ShardingSphere-JDBC	|ShardingSphere-Proxy|
-|---|---|---|
-|Database	|Any	|MySQL/PostgreSQL|
-|Connections Count Cost	|More|	Less|
-|Heterogeneous language	|Java Only|	Any|
-|Performance|	Low loss	|Relatively High loss|
-|Decentralization|	Yes|	No|
-|Static entry|	No	|Yes|
+|                        | ShardingSphere-JDBC | ShardingSphere-Proxy   |
+| ---------------------- | ------------------- | ---------------------- |
+| Database               | Any                 | `MySQL/PostgreSQL`     |
+| Connections Count Cost | More                | `Less`                 |
+| Heterogeneous language | Java Only           | `Any`                  |
+| Performance            | Low loss            | `Relatively High loss` |
+| Decentralization       | Yes                 | `No`                   |
+| Static entry           | No                  | `Yes`                  |
 
 The advantages of ShardingSphere-Proxy lie in supporting heterogeneous languages and providing operational entries for DBA.
 
@@ -63,8 +63,10 @@ Source Codes: [https://github.com/apache/shardingsphere/tree/master/shardingsphe
 
 ## Hybrid Architecture
 
-ShardingSphere-JDBC adopts a decentralized architecture, applicable to high-performance light-weight OLTP applications developed with Java. ShardingSphere-Proxy provides static entry and supports all languages, applicable to OLAP applications and the sharding databases management and operation situation.
+ShardingSphere-JDBC adopts a decentralized architecture, applicable to high-performance light-weight OLTP applications developed with Java.
+ShardingSphere-Proxy provides static entry and supports all languages, applicable to OLAP applications and the sharding databases management and operation situation.
 
-Apache ShardingSphere is an ecosystem composed of multiple access ports. By combining ShardingSphere-JDBC and ShardingSphere-Proxy, and using the same registry to configure sharding strategies, it can flexibly build application systems for various scenarios, allowing architects to freely adjust the system architecture according to the current businesses. 
+Apache ShardingSphere is an ecosystem composed of multiple access ports.
+By combining ShardingSphere-JDBC and ShardingSphere-Proxy, and using the same registry to configure sharding strategies, it can flexibly build application systems for various scenarios, allowing architects to freely adjust the system architecture according to the current businesses. 
 
 ![ShardingSphere Hybrid Architecture](https://shardingsphere.apache.org/document/current/img/shardingsphere-hybrid-architecture_v2.png)
diff --git a/docs/document/content/overview/what-is-ss.cn.md b/docs/document/content/overview/what-is-ss.cn.md
deleted file mode 100644
index fe0ca116a00..00000000000
--- a/docs/document/content/overview/what-is-ss.cn.md
+++ /dev/null
@@ -1,31 +0,0 @@
-+++
-pre = "<b>1.1 </b>"
-title = "什么是 Apache ShardingSphere"
-weight = 1
-chapter = true
-+++
-
-## 定义
-
-Apache ShardingSphere 是一款开源分布式数据库生态项目，由 JDBC、Proxy 和 Sidecar（规划中） 3 款产品组成。其核心采用可插拔架构，通过组件扩展功能。对上以数据库协议及 SQL 方式提供诸多增强功能，包括数据分片、访问路由、数据安全等；对下原生支持 MySQL、PostgreSQL、SQL Server、Oracle 等多种数据存储引擎。 Apache ShardingSphere 项目理念，是提供数据库增强计算服务平台，进而围绕其上构建生态。充分利用现有数据库的计算与存储能力，通过插件化方式增强其核心能力，为企业解决在数字化转型中面临的诸多使用难点，为加速数字化应用赋能。
-
-ShardingSphere 已于 2020 年 4 月 16 日成为 [Apache 软件基金会](https://apache.org/index.html#projects-list)的顶级项目。
-欢迎通过[邮件列表](mailto:dev@shardingsphere.apache.org)参与讨论。
-
-## 产品优势
-
-* 构建异构数据库上层生态和标准
-
-Apache ShardingSphere 产品定位为 Database Plus，旨在构建异构数据库上层的标准和生态。 它关注如何充分合理地利用数据库的计算和存储能力，而并非实现一个全新的数据库。ShardingSphere 站在数据库的上层视角，关注他们之间的协作多于数据库自身。
-
-* 在原有关系型数据库基础上提供扩展和增强
-
-Apache ShardingSphere 旨在充分合理地在分布式的场景下利用关系型数据库的计算和存储能力， 并非实现一个全新的关系型数据库。关系型数据库当今依然占有巨大市场份额，是企业核心系统的基石，未来也难于撼动，我们更加注重在原有基础上提供增量，而非颠覆。
-
-* 支持多态接入
-
-Apache ShardingSphere 是多接入端共同组成的生态圈。 通过混合使用 ShardingSphere-JDBC 和 ShardingSphere-Proxy，并采用同一注册中心统一配置分片策略，能够灵活的搭建适用于各种场景的应用系统，使得架构师更加自由地调整适合于当前业务的最佳系统架构。
-
-## 线路规划
-
-![Roadmap](https://shardingsphere.apache.org/document/current/img/roadmap_v2.png)
diff --git a/docs/document/content/overview/what-is-ss.en.md b/docs/document/content/overview/what-is-ss.en.md
deleted file mode 100644
index c1e69efed2e..00000000000
--- a/docs/document/content/overview/what-is-ss.en.md
+++ /dev/null
@@ -1,34 +0,0 @@
-+++
-pre = "<b>1.1 </b>"
-title = "What is Apache ShardingSphere"
-weight = 1
-chapter = true
-+++
-
-## Definition
-
-Apache ShardingSphere is an open source ecosystem of distributed databases, including three independent products: JDBC, Proxy & Sidecar (Planning). It adopts a plugin-oriented (or plugabble) architecture and expands the original databases' features list thanks to components. 
-
-ShardingSphere provides many enhanced features in the form of database protocol and SQL, including data sharding, access routing, data security, etc. It supports MySQL, PostgreSQL, SQL Server, Oracle, and other data storage engines. 
-
-The idea of the Apache ShardingSphere project is to provide an enhanced database computing service platform and then build an ecosystem around it. The project makes full use of the computing and storage capabilities of existing databases and enhances their core capabilities thanks to plugins. It can solve many digital transformation challenges faced by enterprises and empower them to accelerate digital applications.
-
-ShardingSphere became an [Apache](https://apache.org/index.html#projects-list) Top-Level Project on April 16, 2020. You are welcome to check out the mailing list and discuss via [mail](mailto:dev@shardingsphere.apache.org).
-
-## Advantages
-
-- Build a standard layer & ecosystem above heterogeneous databases.
-
-Apache ShardingSphere is positioned as Database Plus and aims at building a standard layer and ecosystem above heterogeneous databases. The project focuses on how to maximize the original database computing and storage capabilities - rather than creating a new database. Placed above databases, ShardingSphere enhances database inter-compatibility and collaboration.
-
-- Provide relational databases with expansions and enhancements.
-
-Apache ShardingSphere is designed to fully unlock relational databases compute and storage capabilities in distributed scenarios, instead of creating an entirely new relational database. Relational databases still have a considerable market share today and are the cornerstone of the core system of enterprises. It is for such reasons that we believe that we should focus on enhancing it rather than overturning it.
-
-- Support multistate access.
-
-Apache ShardingSphere is an ecosystem composed of multiple access ports. By combining ShardingSphere-JDBC and ShardingSphere-Proxy, and using the same registry to configure sharding strategies, it can flexibly build application systems for various scenarios, enabling architects to adjust the system architecture for current businesses freely.
-
-## Roadmap
-
-![Roadmap](https://shardingsphere.apache.org/document/current/img/roadmap_v2.png)
