commit 13e7d83792631a94e142399af2452b7febb2bf0c
Author: Zhengqiang Duan <duanzhengqiang@apache.org>
Date:   Thu Jun 23 11:26:24 2022 +0800

    Replace schemaName to databaseName in document and add missing document in spring boot starter (#18526)
    
    * Replace schemaName to databaseName in document
    
    * add missing document in spring boot starter
    
    * update document

diff --git a/docs/document/content/reference/test/performance-test/benchmarksql-proxy-sharding-test.cn.md b/docs/document/content/reference/test/performance-test/benchmarksql-proxy-sharding-test.cn.md
index 574a4ba1dfe..bf883315e5f 100644
--- a/docs/document/content/reference/test/performance-test/benchmarksql-proxy-sharding-test.cn.md
+++ b/docs/document/content/reference/test/performance-test/benchmarksql-proxy-sharding-test.cn.md
@@ -115,7 +115,7 @@ props:
 Pool size 请根据实际压测情况适当调整。
 
 ```yaml
-schemaName: bmsql_sharding
+databaseName: bmsql_sharding
 dataSources:
   ds_0:
     url: jdbc:postgresql://db0.ip:5432/bmsql
diff --git a/docs/document/content/reference/test/performance-test/sysbench-proxy-norules-test.cn.md b/docs/document/content/reference/test/performance-test/sysbench-proxy-norules-test.cn.md
index a5421abba2a..00cce952fcf 100644
--- a/docs/document/content/reference/test/performance-test/sysbench-proxy-norules-test.cn.md
+++ b/docs/document/content/reference/test/performance-test/sysbench-proxy-norules-test.cn.md
@@ -60,7 +60,7 @@ transaction_isolation=READ-COMMITTED
 #### config.yaml
 
 ```yaml
-schemaName: sharding_db
+databaseName: sharding_db
 
 dataSources:
   ds_0:
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/_index.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/_index.cn.md
index f383c0453df..d953714dfc2 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/_index.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/_index.cn.md
@@ -24,17 +24,17 @@ Java API 是最繁琐也是最灵活的配置方式，适合需要通过编程
 
 ### 构建数据源
 
-ShardingSphere-JDBC 的 Java API 通过 Schema 名称、运行模式、数据源集合、规则集合以及属性配置组成。
+ShardingSphere-JDBC 的 Java API 由 Database 名称、运行模式、数据源集合、规则集合以及属性配置组成。
 
 通过 ShardingSphereDataSourceFactory 工厂创建的 ShardingSphereDataSource 实现自 JDBC 的标准接口 DataSource。
 
 ```java
-String schemaName = "foo_schema"; // 指定逻辑 Schema 名称
+String databaseName = "foo_schema"; // 指定逻辑 Database 名称
 ModeConfiguration modeConfig = ... // 构建运行模式
 Map<String, DataSource> dataSourceMap = ... // 构建真实数据源
 Collection<RuleConfiguration> ruleConfigs = ... // 构建具体规则
 Properties props = ... // 构建属性配置
-DataSource dataSource = ShardingSphereDataSourceFactory.createDataSource(schemaName, modeConfig, dataSourceMap, ruleConfigs, props);
+DataSource dataSource = ShardingSphereDataSourceFactory.createDataSource(databaseName, modeConfig, dataSourceMap, ruleConfigs, props);
 ```
 
 模式详情请参见[模式配置](/cn/user-manual/shardingsphere-jdbc/java-api/mode)。
@@ -51,7 +51,7 @@ DataSource dataSource = ShardingSphereDataSourceFactory.createDataSource(schemaN
 
 ```java
 // 创建 ShardingSphereDataSource
-DataSource dataSource = ShardingSphereDataSourceFactory.createDataSource(schemaName, modeConfig, dataSourceMap, ruleConfigs, props);
+DataSource dataSource = ShardingSphereDataSourceFactory.createDataSource(databaseName, modeConfig, dataSourceMap, ruleConfigs, props);
 
 String sql = "SELECT i.* FROM t_order o JOIN t_order_item i ON o.order_id=i.order_id WHERE o.user_id=? AND o.order_id=?";
 try (
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/_index.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/_index.en.md
index 5dee8ee34d0..417838e5bef 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/_index.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/_index.en.md
@@ -25,17 +25,17 @@ The Java API is the most complex and flexible configuration method, which is sui
 
 ### Create Data Source
 
-ShardingSphere-JDBC Java API consists of schema name, mode configuration, data source map, rule configurations and properties.
+ShardingSphere-JDBC Java API consists of database name, mode configuration, data source map, rule configurations and properties.
 
 The ShardingSphereDataSource created by ShardingSphereDataSourceFactory implements the standard JDBC DataSource interface.
 
 ```java
-String schemaName = "foo_schema"; // Indicate logic schema name
+String databaseName = "foo_schema"; // Indicate logic database name
 ModeConfiguration modeConfig = ... // Build mode configuration
 Map<String, DataSource> dataSourceMap = ... // Build actual data sources
 Collection<RuleConfiguration> ruleConfigs = ... // Build concentrate rule configurations
 Properties props = ... // Build properties
-DataSource dataSource = ShardingSphereDataSourceFactory.createDataSource(schemaName, modeConfig, dataSourceMap, ruleConfigs, props);
+DataSource dataSource = ShardingSphereDataSourceFactory.createDataSource(databaseName, modeConfig, dataSourceMap, ruleConfigs, props);
 ```
 
 Please refer to [Mode Confiugration](/en/user-manual/shardingsphere-jdbc/java-api/mode) for more mode details.
@@ -52,7 +52,7 @@ Take native JDBC usage as an example:
 
 ```java
 // Create ShardingSphereDataSource
-DataSource dataSource = ShardingSphereDataSourceFactory.createDataSource(schemaName, modeConfig, dataSourceMap, ruleConfigs, props);
+DataSource dataSource = ShardingSphereDataSourceFactory.createDataSource(databaseName, modeConfig, dataSourceMap, ruleConfigs, props);
 
 String sql = "SELECT i.* FROM t_order o JOIN t_order_item i ON o.order_id=i.order_id WHERE o.user_id=? AND o.order_id=?";
 try (
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/_index.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/_index.cn.md
index 29c3b3aaacb..e77f2a63160 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/_index.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/_index.cn.md
@@ -20,7 +20,26 @@ ShardingSphere-JDBC 提供官方的 Spring Boot Starter，使开发者可以非
 </dependency>
 ```
 
-## 在 Spring 中使用 ShardingSphere 数据源
+### 配置 Spring Boot 属性
+
+ShardingSphere-JDBC 的 Spring Boot 属性配置由 Database 名称、运行模式、数据源集合、规则集合以及属性配置组成。
+
+```properties
+# JDBC 逻辑库名称。在集群模式中，使用该参数来联通 ShardingSphere-JDBC 与 ShardingSphere-Proxy。
+spring.shardingsphere.database.name= # 逻辑库名称，默认值：logic_db
+spring.shardingsphere.mode.xxx= # 运行模式
+spring.shardingsphere.dataSource.xxx= # 数据源集合
+spring.shardingsphere.rules.xxx= # 规则集合
+spring.shardingsphere.props= # 属性配置
+```
+
+模式详情请参见[模式配置](/cn/user-manual/shardingsphere-jdbc/spring-boot-starter/mode)。
+
+数据源详情请参见[数据源配置](/cn/user-manual/shardingsphere-jdbc/spring-boot-starter/data-source)。
+
+规则详情请参见[规则配置](/cn/user-manual/shardingsphere-jdbc/spring-boot-starter/rules)。
+
+### 使用数据源
 
 直接通过注入的方式即可使用 ShardingSphereDataSource；
 或者将 ShardingSphereDataSource 配置在 JPA、Hibernate、MyBatis 等 ORM 框架中配合使用。
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/_index.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/_index.en.md
index 1fb7fe086df..59c379a0b7e 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/_index.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-boot-starter/_index.en.md
@@ -20,7 +20,26 @@ ShardingSphere-JDBC provides official Spring Boot Starter to make convenient for
 </dependency>
 ```
 
-## Use ShardingSphere Data Source in Spring
+### Configure Spring Boot Properties
+
+ShardingSphere-JDBC spring boot properties consists of database name, mode configuration, data source map, rule configurations and properties.
+
+```properties
+# JDBC logic database name. Through this parameter to connect ShardingSphere-JDBC and ShardingSphere-Proxy.
+spring.shardingsphere.database.name= # logic database name, default value: logic_db
+spring.shardingsphere.mode.xxx= # mode configuration
+spring.shardingsphere.dataSource.xxx= # data source map
+spring.shardingsphere.rules.xxx= # rule configurations
+spring.shardingsphere.props= # properties
+```
+
+Please refer to [Mode Confiugration](/en/user-manual/shardingsphere-jdbc/spring-boot-starter/mode) for more mode details.
+
+Please refer to [Data Source Confiugration](/en/user-manual/shardingsphere-jdbc/spring-boot-starter/data-source) for more data source details.
+
+Please refer to [Rules Confiugration](/en/user-manual/shardingsphere-jdbc/spring-boot-starter/rules) for more rule details.
+
+### Use Data Source
 
 Developer can inject to use native JDBC or ORM frameworks such as JPA, Hibernate or MyBatis through the DataSource.
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/_index.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/_index.cn.md
index 852b37bc5ce..01c95362719 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/_index.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/_index.cn.md
@@ -20,9 +20,9 @@ ShardingSphere-JDBC 提供官方的 Spring 命名空间，使开发者可以非
 </dependency>
 ```
 
-## 配置 Spring Bean
+### 配置 Spring Bean
 
-### 配置项说明
+#### 配置项说明
 
 命名空间：[http://shardingsphere.apache.org/schema/shardingsphere/datasource/datasource-5.1.2.xsd](http://shardingsphere.apache.org/schema/shardingsphere/datasource/datasource-5.1.2.xsd)
 
@@ -37,7 +37,7 @@ ShardingSphere-JDBC 提供官方的 Spring 命名空间，使开发者可以非
 | mode (?)          | 标签  | 运行模式配置                                                                         |
 | props (?)         | 标签  | 属性配置，详情请参见[属性配置](/cn/user-manual/shardingsphere-jdbc/props) |
 
-### 配置示例
+#### 配置示例
 
 ```xml
 <beans xmlns="http://www.springframework.org/schema/beans"
@@ -57,6 +57,6 @@ ShardingSphere-JDBC 提供官方的 Spring 命名空间，使开发者可以非
 </beans>
 ```
 
-## 在 Spring 中使用 ShardingSphere 数据源
+### 使用数据源
 
 使用方式同 Spring Boot Starter。
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/_index.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/_index.en.md
index 7c4c428be8d..5c168f6cca7 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/_index.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/spring-namespace/_index.en.md
@@ -20,9 +20,9 @@ ShardingSphere-JDBC provides official Spring Namespace to make convenient for de
 </dependency>
 ```
 
-## Configure Spring Bean
+### Configure Spring Bean
 
-### Configuration Item Explanation
+#### Configuration Item Explanation
 
 Namespace: [http://shardingsphere.apache.org/schema/shardingsphere/datasource/datasource-5.1.2.xsd](http://shardingsphere.apache.org/schema/shardingsphere/datasource/datasource-5.1.2.xsd)
 
@@ -37,7 +37,7 @@ Namespace: [http://shardingsphere.apache.org/schema/shardingsphere/datasource/da
 | mode (?)          | Tag       | Mode configuration                                                                                                                             |
 | props (?)         | Tag       | Properties configuration, Please refer to [Properties Configuration](/en/user-manual/shardingsphere-jdbc/props) for more details |
 
-### Example
+#### Example
 
 ```xml
 <beans xmlns="http://www.springframework.org/schema/beans"
@@ -57,6 +57,6 @@ Namespace: [http://shardingsphere.apache.org/schema/shardingsphere/datasource/da
 </beans>
 ```
 
-## Use ShardingSphere Data Source in Spring
+### Use Data Source
 
 Same with Spring Boot Starter.
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/_index.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/_index.cn.md
index ef7cec23ff9..9abd285eb7b 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/_index.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/_index.cn.md
@@ -25,12 +25,12 @@ YAML 配置是最常见的配置方式，可以省略编程的复杂度，简化
 
 ### 配置 YAML
 
-ShardingSphere-JDBC 的 YAML 配置文件通过 Schema 名称、运行模式、数据源集合、规则集合以及属性配置组成。
+ShardingSphere-JDBC 的 YAML 配置文件通过 Database 名称、运行模式、数据源集合、规则集合以及属性配置组成。
 
 ```yaml
-# JDBC 中的数据源的别名。在集群模式，使用该参数联通 ShardingSphere-JDBC 与 ShardingSphere-Proxy 共同使用。
+# JDBC 逻辑库名称。在集群模式中，使用该参数来联通 ShardingSphere-JDBC 与 ShardingSphere-Proxy。
 # 默认值：logic_db
-schemaName (?):
+databaseName (?):
 
 mode:
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/_index.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/_index.en.md
index d863397d530..eccf37fd221 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/_index.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/_index.en.md
@@ -25,15 +25,14 @@ YAML configuration is the most common configuration mode, which can omit the com
 
 ### YAML Format
 
-ShardingSphere-JDBC YAML file consists of schema name, mode configuration, data source map, rule configurations and properties.
+ShardingSphere-JDBC YAML file consists of database name, mode configuration, data source map, rule configurations and properties.
 
 Note: The example connection pool is HikariCP, which can be replaced with other connection pools according to business scenarios.
 
 ```yaml
-# Alias of the datasource in JDBC.
-# Through this parameter to connect, ShardingSphere-JDBC and ShardingSphere-Proxy.
+# JDBC logic database name. Through this parameter to connect ShardingSphere-JDBC and ShardingSphere-Proxy.
 # Default value: logic_db
-schemaName (?):
+databaseName (?):
 
 mode:
 
