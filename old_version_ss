commit 602a1ce179617a84c7c50064dadb4c167a5c5081
Author: yx9o <yangx_soft@163.com>
Date:   Wed Sep 29 23:54:43 2021 +0800

    Improve usage documentation. (#12829)

diff --git a/docs/document/content/features/dist-sql/usage/db-discovery.cn.md b/docs/document/content/features/dist-sql/usage/db-discovery.cn.md
index e8c7a85ee7..a9dcdb3de1 100644
--- a/docs/document/content/features/dist-sql/usage/db-discovery.cn.md
+++ b/docs/document/content/features/dist-sql/usage/db-discovery.cn.md
@@ -7,19 +7,19 @@ weight = 5
 
 ### 前置工作
 
-1. 启动MySQL服务
-2. 创建MySQL数据库(参考ShardingProxy数据源配置规则)
-3. 为ShardingProxy创建一个拥有创建权限的角色或者用户
-4. 启动Zookeeper服务 (为了持久化配置)
+1. 启动 MySQL 服务
+2. 创建 MySQL 数据库(参考 ShardingProxy 数据源配置规则)
+3. 为 ShardingProxy 创建一个拥有创建权限的角色或者用户
+4. 启动 Zookeeper 服务 (为了持久化配置)
 
-### 启动ShardingProxy
+### 启动 ShardingProxy
 
-1. 添加 `mode` 和 `authentication` 配置参数到 `server.yaml` (请参考相关example案例)
+1. 添加 `mode` 和 `authentication` 配置参数到 `server.yaml` (请参考相关 example 案例)
 2. 启动 ShardingProxy ([相关介绍](/cn/quick-start/shardingsphere-proxy-quick-start/))
 
 ### 创建分布式数据库和分片表
 
-1. 连接到ShardingProxy
+1. 连接到 ShardingProxy
 2. 创建分布式数据库
 
 ```SQL
diff --git a/docs/document/content/features/dist-sql/usage/encrypt-rule.cn.md b/docs/document/content/features/dist-sql/usage/encrypt-rule.cn.md
index f129cb7241..eb15c7eda3 100644
--- a/docs/document/content/features/dist-sql/usage/encrypt-rule.cn.md
+++ b/docs/document/content/features/dist-sql/usage/encrypt-rule.cn.md
@@ -7,19 +7,19 @@ weight = 3
 
 ### 前置工作
 
-1. 启动MySQL服务
-2. 创建MySQL数据库(参考ShardingProxy数据源配置规则)
-3. 为ShardingProxy创建一个拥有创建权限的角色或者用户
-4. 启动Zookeeper服务 (为了持久化配置)
+1. 启动 MySQL 服务
+2. 创建 MySQL 数据库(参考 ShardingProxy 数据源配置规则)
+3. 为 ShardingProxy 创建一个拥有创建权限的角色或者用户
+4. 启动 Zookeeper 服务 (为了持久化配置)
 
-### 启动ShardingProxy
+### 启动 ShardingProxy
 
-1. 添加 `mode` 和 `authentication` 配置参数到 `server.yaml` (请参考相关example案例)
+1. 添加 `mode` 和 `authentication` 配置参数到 `server.yaml` (请参考相关 example 案例)
 2. 启动 ShardingProxy ([相关介绍](/cn/quick-start/shardingsphere-proxy-quick-start/))
 
 ### 创建分布式数据库和分片表
 
-1. 连接到ShardingProxy
+1. 连接到 ShardingProxy
 2. 创建分布式数据库
 
 ```SQL
diff --git a/docs/document/content/features/dist-sql/usage/readwirte-splitting-rule.cn.md b/docs/document/content/features/dist-sql/usage/readwirte-splitting-rule.cn.md
index 21e1d70970..828c2660ff 100644
--- a/docs/document/content/features/dist-sql/usage/readwirte-splitting-rule.cn.md
+++ b/docs/document/content/features/dist-sql/usage/readwirte-splitting-rule.cn.md
@@ -7,19 +7,19 @@ weight = 2
 
 ### 前置工作
 
-1. 启动MySQL服务
-2. 创建MySQL数据库(参考ShardingProxy数据源配置规则)
-3. 为ShardingProxy创建一个拥有创建权限的角色或者用户
-4. 启动Zookeeper服务 (为了持久化配置)
+1. 启动 MySQL 服务
+2. 创建 MySQL 数据库(参考 ShardingProxy 数据源配置规则)
+3. 为 ShardingProxy 创建一个拥有创建权限的角色或者用户
+4. 启动 Zookeeper 服务 (为了持久化配置)
 
-### 启动ShardingProxy
+### 启动 ShardingProxy
 
-1. 添加 `mode` 和 `authentication` 配置参数到 `server.yaml` (请参考相关example案例)
+1. 添加 `mode` 和 `authentication` 配置参数到 `server.yaml` (请参考相关 example 案例)
 2. 启动 ShardingProxy ([相关介绍](/cn/quick-start/shardingsphere-proxy-quick-start/))
 
 ### 创建分布式数据库和分片表
 
-1. 连接到ShardingProxy
+1. 连接到 ShardingProxy
 2. 创建分布式数据库
 
 ```SQL
diff --git a/docs/document/content/features/dist-sql/usage/shadow-rule.cn.md b/docs/document/content/features/dist-sql/usage/shadow-rule.cn.md
index 9d61e3cbad..5f749286b2 100644
--- a/docs/document/content/features/dist-sql/usage/shadow-rule.cn.md
+++ b/docs/document/content/features/dist-sql/usage/shadow-rule.cn.md
@@ -7,19 +7,19 @@ weight = 5
 
 ### 前置工作
 
-1. 启动MySQL服务
-2. 创建MySQL数据库(参考ShardingProxy数据源配置规则)
-3. 为ShardingProxy创建一个拥有创建权限的角色或者用户
-4. 启动Zookeeper服务 (为了持久化配置)
+1. 启动 MySQL 服务
+2. 创建 MySQL 数据库(参考 ShardingProxy 数据源配置规则)
+3. 为 ShardingProxy 创建一个拥有创建权限的角色或者用户
+4. 启动 Zookeeper 服务 (为了持久化配置)
 
-### 启动ShardingProxy
+### 启动 ShardingProxy
 
-1. 添加 `mode` 和 `authentication` 配置参数到 `server.yaml` (请参考相关example案例)
+1. 添加 `mode` 和 `authentication` 配置参数到 `server.yaml` (请参考相关 example 案例)
 2. 启动 ShardingProxy ([相关介绍](/cn/quick-start/shardingsphere-proxy-quick-start/))
 
 ### 创建分布式数据库和分片表
 
-1. 连接到ShardingProxy
+1. 连接到 ShardingProxy
 2. 创建分布式数据库
 
 ```SQL
diff --git a/docs/document/content/features/dist-sql/usage/sharding-rule.cn.md b/docs/document/content/features/dist-sql/usage/sharding-rule.cn.md
index c6241c3e92..fd59a77e84 100644
--- a/docs/document/content/features/dist-sql/usage/sharding-rule.cn.md
+++ b/docs/document/content/features/dist-sql/usage/sharding-rule.cn.md
@@ -7,19 +7,19 @@ weight = 1
 
 ### 前置工作
 
-1. 启动MySQL服务
-2. 创建MySQL数据库(参考ShardingProxy数据源配置规则)
-3. 为ShardingProxy创建一个拥有创建权限的角色或者用户
-4. 启动Zookeeper服务 (为了持久化配置)
+1. 启动 MySQL 服务
+2. 创建 MySQL 数据库(参考 ShardingProxy 数据源配置规则)
+3. 为 ShardingProxy 创建一个拥有创建权限的角色或者用户
+4. 启动 Zookeeper 服务 (为了持久化配置)
 
-### 启动ShardingProxy
+### 启动 ShardingProxy
 
-1. 添加 `mode` 和 `authentication` 配置参数到 `server.yaml` (请参考相关example案例)
+1. 添加 `mode` 和 `authentication` 配置参数到 `server.yaml` (请参考相关 example 案例)
 2. 启动 ShardingProxy ([相关介绍](/cn/quick-start/shardingsphere-proxy-quick-start/))
 
 ### 创建分布式数据库和分片表
 
-1. 连接到ShardingProxy
+1. 连接到 ShardingProxy
 2. 创建分布式数据库
 
 ```SQL
