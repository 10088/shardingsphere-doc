commit b56271dcca5b03b6004b971286a00584f7a48214
Author: 孙念君 Nianjun Sun <sunnianjun@sphere-ex.com>
Date:   Tue Jul 26 17:59:57 2022 +0800

    Refactor remote debug doc (#19578)
    
    * Document : refactor the document for IT remote debug
    
    * Document : format the IT document

diff --git a/docs/document/content/test-manual/integration-test/_index.cn.md b/docs/document/content/test-manual/integration-test/_index.cn.md
index bdd916143e6..5ac4f6206f0 100644
--- a/docs/document/content/test-manual/integration-test/_index.cn.md
+++ b/docs/document/content/test-manual/integration-test/_index.cn.md
@@ -167,20 +167,18 @@ it.cluster.databases=H2,MySQL,Oracle,SQLServer,PostgreSQL
 
 #### 远程 debug Docker 容器中的 Proxy 代码
 
-```shell
-docker run -itd -p 3307:3307 -p 3308:3308 -v ${PWD}:/opt/shardingsphere-proxy/conf/ apache/shardingsphere-proxy-test:latest
-```
-运行以上命令可以启动测试镜像并暴露 proxy 与 proxy 远程 debug 的端口，使用 IDEA 等 IDE 工具可以通过如下方式连接并 debug 容器中的 Proxy 代码：
+IT 测试的 Proxy 镜像默认开启了 3308 端口用于远程调试容器中的实例。  
+使用 IDEA 等 IDE 工具可以通过如下方式连接并 debug 容器中的 Proxy 代码：
 
 IDEA -> Run -> Edit Configurations -> Add New Configuration -> Remote JVM Debug
 
 编辑对应的信息：
-Name : 一个描述性的名字，例如 docker-debug
-Host : 可以访问 docker 的 IP，例如本机启动的 Docker 127.0.0.1
-Port : 调试端口 3308
-use module classpath : 项目根目录 shardingsphere
+  - Name：一个描述性的名字，例如 docker-debug。
+  - Host：可以访问 docker 的 IP，例如 127.0.0.1。
+  - Port：调试端口 3308。
+  - use module classpath：项目根目录 shardingsphere。
 
-编辑好上面的信息后，Run -> Run -> docker-debug 即可启动 IDEA 的远程 debug。
+编辑好上面的信息后，在 IDEA 中 Run -> Run -> docker-debug 即可启动 IDEA 的远程 debug。
 
 #### 注意事项
 
diff --git a/docs/document/content/test-manual/integration-test/_index.en.md b/docs/document/content/test-manual/integration-test/_index.en.md
index 944ca917b9a..f78bc34b382 100644
--- a/docs/document/content/test-manual/integration-test/_index.en.md
+++ b/docs/document/content/test-manual/integration-test/_index.en.md
@@ -142,20 +142,19 @@ Use the following command to skip the image building and run the integration tes
 
 #### debug the Proxy inside docker container
 
-```shell
-docker run -itd -p 3307:3307 -p 3308:3308 -v ${PWD}:/opt/shardingsphere-proxy/conf/ apache/shardingsphere-proxy-test:latest
-```
-execute the upon command will expose Proxy port and Proxy debug port, use IDE like IDEA could connect and debug the Proxy in container by following steps:
+The Proxy Image for testing expose the port 3308 for remote debug the instance inside docker container.
+
+Use IDE like IDEA could connect and debug the Proxy in container by following steps:
 
 IDEA -> Run -> Edit Configurations -> Add New Configuration -> Remote JVM Debug
 
 Edit the corresponding info:
-Name : a name for this, like docker-debug
-Host : the IP could access container, like 127.0.0.1
-Port : the debug port 3308
-use module classpath : project root directory shardingsphere
+  - Name: a name for this, like docker-debug
+  - Host: the IP could access container, like 127.0.0.1
+  - Port: the debug port 3308
+  - use module classpath: project root directory shardingsphere
 
-after edit and save the upon info，Run -> Run -> docker-debug will start the remote debug to the Proxy inside docker container.
+After edit and save the upon info, goto Run -> Run -> docker-debug will start the remote debug to the Proxy instance inside docker container.
 
 ## Notice
 
