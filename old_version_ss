commit 0f0c28018fbdb2d7c84089bd9148b4b1921bbbb4
Author: Liang Zhang <terrymanu@163.com>
Date:   Sun Sep 12 23:06:32 2021 +0800

    Update overview of readme (#12380)

diff --git a/docs/document/content/features/pluggable-architecture/_index.cn.md b/docs/document/content/features/pluggable-architecture/_index.cn.md
index bf11e88c65..ac61610013 100644
--- a/docs/document/content/features/pluggable-architecture/_index.cn.md
+++ b/docs/document/content/features/pluggable-architecture/_index.cn.md
@@ -16,7 +16,7 @@ SPI 是一种为了被第三方实现或扩展的 API，它可以用于实现框
 设计一套将功能开发完全隔离的架构体系，既可以最大限度的将开源社区的活力激发出来，也能够保障项目的质量。
 
 Apache ShardingSphere 5.x 版本开始致力于可插拔架构，项目的功能组件能够灵活的以可插拔的方式进行扩展。
-目前，数据分片、读写分离、数据加密、影子库压测等功能，以及对 MySQL、PostgreSQL、SQLServer、Oracle 等 SQL 与协议的支持，均通过插件的方式织入项目。
+目前，数据分片、读写分离、数据库高可用、数据加密、影子库压测等功能，以及对 MySQL、PostgreSQL、SQLServer、Oracle 等 SQL 与协议的支持，均通过插件的方式织入项目。
 Apache ShardingSphere 目前已提供数十个 SPI 作为系统的扩展点，而且仍在不断增加中。
 
 ## 目标
diff --git a/docs/document/content/overview/_index.cn.md b/docs/document/content/overview/_index.cn.md
index 1441b4cefe..b36bce435c 100644
--- a/docs/document/content/overview/_index.cn.md
+++ b/docs/document/content/overview/_index.cn.md
@@ -18,15 +18,16 @@ chapter = true
 
 [![Contributor over time](https://contributor-graph-api.apiseven.com/contributors-svg?chart=contributorOverTime&repo=apache/shardingsphere)](https://www.apiseven.com/en/contributor-graph?chart=contributorOverTime&repo=apache/shardingsphere)
 
-Apache ShardingSphere 是一套开源的分布式数据库解决方案组成的生态圈，它由 JDBC、Proxy 和 Sidecar（规划中）这 3 款既能够独立部署，又支持混合部署配合使用的产品组成。
-它们均提供标准化的数据水平扩展、分布式事务和分布式治理等功能，可适用于如 Java 同构、异构语言、云原生等各种多样化的应用场景。
+Apache ShardingSphere 产品定位为 `Database Plus`，旨在构建多模数据库上层的标准和生态。
+它关注如何充分合理地利用数据库的计算和存储能力，而并非实现一个全新的数据库。ShardingSphere 站在数据库的上层视角，关注他们之间的协作多于数据库自身。
 
-Apache ShardingSphere 旨在充分合理地在分布式的场景下利用关系型数据库的计算和存储能力，而并非实现一个全新的关系型数据库。
 关系型数据库当今依然占有巨大市场份额，是企业核心系统的基石，未来也难于撼动，我们更加注重在原有基础上提供增量，而非颠覆。
 
-Apache ShardingSphere 5.x 版本开始致力于可插拔架构，项目的功能组件能够灵活的以可插拔的方式进行扩展。
-目前，数据分片、读写分离、数据加密、影子库压测等功能，以及对 MySQL、PostgreSQL、SQLServer、Oracle 等 SQL 与协议的支持，均通过插件的方式织入项目。
-开发者能够像使用积木一样定制属于自己的独特系统。Apache ShardingSphere 目前已提供数十个 SPI 作为系统的扩展点，而且仍在不断增加中。
+`连接`、`增量`和`可插拔`是 Apache ShardingSphere 的核心概念。
+
+- `连接`：通过对数据库协议、SQL 方言以及数据库存储的灵活适配，快速的连接应用与多模式的异构数据库；
+- `增量`：获取数据库的访问流量，并提供流量重定向（数据分片、读写分离、影子库）、流量变形（数据加密、数据脱敏）、流量鉴权（安全、审计、权限）、流量治理（熔断、限流）以及流量分析（服务质量分析、可观察性）等透明化增量功能；
+- `可插拔`：项目采用微内核 + 3 层可插拔模型，使内核、功能组件以及生态对接完全能够灵活的方式进行插拔式扩展，开发者能够像使用积木一样定制属于自己的独特系统。
 
 ShardingSphere 已于2020年4月16日成为 [Apache 软件基金会](https://apache.org/index.html#projects-list)的顶级项目。
 欢迎通过[邮件列表](mailto:dev@shardingsphere.apache.org)参与讨论。
@@ -50,6 +51,9 @@ ShardingSphere 已于2020年4月16日成为 [Apache 软件基金会](https://apa
 
 ## 简介
 
+Apache ShardingSphere 由 JDBC、Proxy 和 Sidecar（规划中）这 3 款既能够独立部署，又支持混合部署配合使用的产品组成。
+它们均提供标准化的基于数据库作为存储节点的增量功能，可适用于如 Java 同构、异构语言、云原生等各种多样化的应用场景。
+
 ### ShardingSphere-JDBC
 
 [![Maven Status](https://maven-badges.herokuapp.com/maven-central/org.apache.shardingsphere/shardingsphere-jdbc/badge.svg)](https://mvnrepository.com/artifact/org.apache.shardingsphere/shardingsphere-jdbc)
diff --git a/docs/document/content/overview/_index.en.md b/docs/document/content/overview/_index.en.md
index 2069e44b8b..bb7ee03396 100644
--- a/docs/document/content/overview/_index.en.md
+++ b/docs/document/content/overview/_index.en.md
@@ -18,16 +18,17 @@ chapter = true
 
 [![Contributors Over Time](https://contributor-graph-api.apiseven.com/contributors-svg?chart=contributorOverTime&repo=apache/shardingsphere)](https://www.apiseven.com/en/contributor-graph?chart=contributorOverTime&repo=apache/shardingsphere)
 
-Apache ShardingSphere is an Open Source ecosystem consisting of a set of distributed database solutions, including 3 independent products: JDBC, Proxy & Sidecar (Planning).
-They all provide functions of data scale-out, distributed transaction and distributed governance, applicable in a variety of situations such as Java isomorphism, heterogeneous language and cloud-native.
+Apache ShardingSphere is positioned as `Database Plus', which aims to build criterion and ecosystem above multi-model databases.
+It focuses on how to reuse existing database, rather than creating a new database.
+ShardingSphere focus on the top of databases, pays more attention on cooperation between databases rather than database itself.
 
-Apache ShardingSphere aims at reasonably making full use of the computational and storage capacity of existing databases in a distributed system, rather than establishing a new database.
-As the cornerstone of enterprises, the relational database has a huge market share.
-Therefore, we prefer to focus on its incrementation instead of a total overturn.
+As the cornerstone of enterprises, the relational database has a huge market share. Therefore, we prefer to focus on its incrementation instead of a total overturn.
 
-Apache ShardingSphere began to focus on pluggable architecture from version 5.x, and features can be embedded into project flexibility.
-Currently, features such as data sharding, replica query, data encryption, shadow testing, and SQL dialects/database protocols such as MySQL, PostgreSQL, SQLServer, Oracle supported are all weaved by plugins.
-Developers can customize their ShardingSphere systems just like building with LEGO blocks. There are lots of SPI extensions for Apache ShardingSphere now and they are increasing continuously.
+`Link`, `Enhance` and `Pluggable` is the core concepts of Apache ShardingSphere.
+
+- `Link`：Flexible adaptation of database protocol, SQL dialect and database storage, it can link applications and multi-mode heterogeneous databases quickly;
+- `Enhance`：Capture database access entry to provide additional features transparently, such as: redirect (sharding, readwrite-splitting and shadow), transform (data encrypt and mask), authentication (security, audit and authority), governance（circuit breaker and access limitation and analyse (Qos and observability);
+- `Pluggable`：Use micro kernel and 3 layers pluggable mode, to make features and database ecosystem can be embedded flexibility. Developers can customize their ShardingSphere just like building blocks.
 
 ShardingSphere became an [Apache](https://apache.org/index.html#projects-list) Top-Level Project on April 16, 2020.
 
@@ -52,6 +53,10 @@ Welcome to interact with community via the official [mail list](mailto:dev@shard
 
 ## Introduction
 
+Apache ShardingSphere including 3 independent products: JDBC, Proxy & Sidecar (Planning).
+They all provide functions of data scale-out, distributed transaction and distributed governance,
+applicable in a variety of situations such as Java isomorphism, heterogeneous language and Cloud-Native.
+
 ### ShardingSphere-JDBC
 
 [![Maven Status](https://maven-badges.herokuapp.com/maven-central/org.apache.shardingsphere/shardingsphere-jdbc/badge.svg)](https://mvnrepository.com/artifact/org.apache.shardingsphere/shardingsphere-jdbc)
