commit e542bcf72406febaa79f647e75ce5e0bd0f3dfdf
Author: Zhengqiang Duan <duanzhengqiang@apache.org>
Date:   Tue Jul 12 11:37:01 2022 +0800

    Update sharding, encrypt and data source document in dev manual (#19048)
    
    * Update sharding, encrypt and data source document in dev manual
    
    * update document

diff --git a/docs/document/content/dev-manual/data-source.cn.md b/docs/document/content/dev-manual/data-source.cn.md
index c65d09e3c2c..03aa00a4cb3 100644
--- a/docs/document/content/dev-manual/data-source.cn.md
+++ b/docs/document/content/dev-manual/data-source.cn.md
@@ -5,11 +5,18 @@ weight = 4
 chapter = true
 +++
 
-## DatabaseType
+## SPI 接口
 
-| *SPI 名称*              | *详细说明*               |
-| ---------------------- | ----------------------- |
-| DatabaseType           | 支持的数据库类型           |
+| SPI 名称                     | 详细说明                         |
+| ---------------------------- | -------------------------------- |
+| DatabaseType                 | 支持的数据库类型                 |
+| DialectTableMetaDataLoader   | 用于使用数据库方言快速加载元数据 |
+| DataSourcePoolMetaData       | 数据源连接池元数据               |
+| DataSourcePoolActiveDetector | 数据源连接池活跃探测器           |
+
+## 示例
+
+### DatabaseType 已知实现类
 
 | *已知实现类*             | *详细说明*               |
 | ---------------------- | ----------------------- |
@@ -22,11 +29,7 @@ chapter = true
 | H2DatabaseType         | H2 数据库                |
 | OpenGaussDatabaseType  | OpenGauss 数据库         |
 
-## DialectTableMetaDataLoader
-
-| *SPI 名称*                    | *详细说明*                   |
-| ---------------------------- | --------------------------- |
-| DialectTableMetaDataLoader   | 用于使用数据库方言快速加载元数据  |
+### DialectTableMetaDataLoader 已知实现类
 
 | *已知实现类*                    | *详细说明*                   |
 | ----------------------------- | --------------------------- |
@@ -37,22 +40,14 @@ chapter = true
 | H2TableMetaDataLoader         | 使用 H2 方言加载元数据         |
 | OpenGaussTableMetaDataLoader  | 使用 OpenGauss 方言加载元数据  |
 
-## DataSourcePoolMetaData
-
-| *SPI 名称*                    | *详细说明*        |
-| ---------------------------- |-----------------|
-| DataSourcePoolMetaData       | 数据源连接池元数据 |
+### DataSourcePoolMetaData 已知实现类
 
 | *已知实现类*                   | *详细说明*              |
 |------------------------------|-----------------------|
 | DBCPDataSourcePoolMetaData   | DBCP 数据库连接池元数据   |
 | HikariDataSourcePoolMetaData | Hikari 数据源连接池元数据 |
 
-## DataSourcePoolActiveDetector
-
-| *SPI 名称*                           | *详细说明*                 |
-| ----------------------------------- | ------------------------- |
-| DataSourcePoolActiveDetector        | 数据源连接池活跃探测器        |
+### DataSourcePoolActiveDetector 已知实现类
 
 | *已知实现类*                          | *详细说明*                 |
 | ----------------------------------- | ------------------------- |
diff --git a/docs/document/content/dev-manual/data-source.en.md b/docs/document/content/dev-manual/data-source.en.md
index 61c5a5ec9d5..f88f9734727 100644
--- a/docs/document/content/dev-manual/data-source.en.md
+++ b/docs/document/content/dev-manual/data-source.en.md
@@ -5,11 +5,18 @@ weight = 4
 chapter = true
 +++
 
-## DatabaseType
+## SPI Interface
 
-| *SPI Name*             | *Description*           |
-| ---------------------- | ----------------------- |
-| DatabaseType           | Supported database type |
+| SPI Name                     | Description                                 |
+| ---------------------------- | ------------------------------------------- |
+| DatabaseType                 | Supported database types                    |
+| DialectTableMetaDataLoader   | Use SQL dialect to load meta data rapidly   |
+| DataSourcePoolMetaData       | Data source connection pool metadata        |
+| DataSourcePoolActiveDetector | Data source connection pool active detector |
+
+## Sample
+
+### DatabaseType Known Implementation Class
 
 | *Implementation Class* | *Description*           |
 | ---------------------- | ----------------------- |
@@ -22,11 +29,7 @@ chapter = true
 | H2DatabaseType         | H2 database             |
 | OpenGaussDatabaseType  | OpenGauss database      |
 
-## DialectTableMetaDataLoader
-
-| *SPI Name*                   | *Description*                             |
-| ---------------------------- | ----------------------------------------- |
-| DialectTableMetaDataLoader   | Use SQL dialect to load meta data rapidly |
+### DialectTableMetaDataLoader Known Implementation Class
 
 | *Implementation Class*       | *Description*                             |
 | ---------------------------- | ----------------------------------------- |
@@ -37,22 +40,14 @@ chapter = true
 | H2TableMetaDataLoader        | Use H2 dialect to load meta data          |
 | OpenGaussTableMetaDataLoader | Use OpenGauss dialect to load meta data   |
 
-## DataSourcePoolMetaData
-
-| *SPI Name*                    | *Description*              |
-| ---------------------------- |----------------------------|
-| DataSourcePoolMetaData        | Data source pool meta data |
+### DataSourcePoolMetaData Known Implementation Class
 
 | *Implementation Class*       | *Description*                     |
 |------------------------------|-----------------------------------|
 | DBCPDataSourcePoolMetaData   | DBCP data source pool meta data   |
 | HikariDataSourcePoolMetaData | Hikari data source pool meta data |
 
-## DataSourcePoolActiveDetector
-
-| *SPI Name*                          | *Description*                            |
-| ----------------------------------- | ---------------------------------------- |
-| DataSourcePoolActiveDetector        | Data source pool active detector         |
+### DataSourcePoolActiveDetector Known Implementation Class
 
 | *Implementation Class*              | *Description*                            |
 | ----------------------------------- | ---------------------------------------- |
diff --git a/docs/document/content/dev-manual/encrypt.cn.md b/docs/document/content/dev-manual/encrypt.cn.md
index d88bb19ccf4..a33dbc14285 100644
--- a/docs/document/content/dev-manual/encrypt.cn.md
+++ b/docs/document/content/dev-manual/encrypt.cn.md
@@ -5,11 +5,15 @@ weight = 13
 chapter = true
 +++
 
-## EncryptAlgorithm
+## SPI 接口
 
-| *SPI 名称*           | *详细说明*            |
-| ------------------- | --------------------- |
-| EncryptAlgorithm    | 数据加密算法           |
+| SPI 名称         | 详细说明     |
+| ---------------- | ------------ |
+| EncryptAlgorithm | 数据加密算法 |
+
+## 示例
+
+### EncryptAlgorithm 已知实现类
 
 | *已知实现类*         | *详细说明*             |
 | ------------------- | --------------------- |
diff --git a/docs/document/content/dev-manual/encrypt.en.md b/docs/document/content/dev-manual/encrypt.en.md
index e214c161fab..993efcf3606 100644
--- a/docs/document/content/dev-manual/encrypt.en.md
+++ b/docs/document/content/dev-manual/encrypt.en.md
@@ -5,11 +5,15 @@ weight = 13
 chapter = true
 +++
 
-## EncryptAlgorithm
+## SPI Interface
 
-| *SPI Name*                    | *Description*              |
-| ----------------------------- | -------------------------- |
-| EncryptAlgorithm              | Data encrypt algorithm     |
+| SPI Name         | Description            |
+| ---------------- | ---------------------- |
+| EncryptAlgorithm | Data encrypt algorithm |
+
+## Sample
+
+### EncryptAlgorithm Known Implementation Class
 
 | *Implementation Class*        | *Description*              |
 | ----------------------------- | -------------------------- |
diff --git a/docs/document/content/dev-manual/sharding.cn.md b/docs/document/content/dev-manual/sharding.cn.md
index 9787d07594f..bff669b64d2 100644
--- a/docs/document/content/dev-manual/sharding.cn.md
+++ b/docs/document/content/dev-manual/sharding.cn.md
@@ -5,11 +5,19 @@ weight = 7
 chapter = true
 +++
 
-## ShardingAlgorithm
+## SPI 接口
 
-| *SPI 名称*                           | *详细说明*                |
-| ----------------------------------- | ------------------------ |
-| ShardingAlgorithm                   | 分片算法                   |
+| SPI 名称                  | 详细说明                 |
+|-------------------------| ------------------------ |
+| ShardingAlgorithm       | 分片算法                 |
+| KeyGenerateAlgorithm    | 分布式主键生成算法       |
+| ShardingAuditAlgorithm  | 分片审计算法 |
+| DatetimeService         | 获取当前时间进行路由     |
+| DatabaseSQLEntry        | 获取当前时间的数据库方言 |
+
+## 示例
+
+### ShardingAlgorithm 已知实现类
 
 | *已知实现类*                                 | *详细说明*                    |
 |-----------------------------------------|---------------------------|
@@ -27,11 +35,7 @@ chapter = true
 | CosIdIntervalShardingAlgorithm          | 基于 CosId 的固定时间范围的分片算法     |
 | CosIdSnowflakeIntervalShardingAlgorithm | 基于 CosId 的雪花ID固定时间范围的分片算法 |
 
-## KeyGenerateAlgorithm
-
-| *SPI 名称*                     | *详细说明*                 |
-| ----------------------------- | ------------------------- |
-| KeyGenerateAlgorithm          | 分布式主键生成算法           |
+### KeyGenerateAlgorithm 已知实现类
 
 | *已知实现类*                         | *详细说明*                         |
 |----------------------------------- |---------------------------------- |
@@ -41,32 +45,20 @@ chapter = true
 | CosIdSnowflakeKeyGenerateAlgorithm | 基于 CosId 的雪花算法分布式主键生成算法 |
 | NanoIdKeyGenerateAlgorithm         | 基于 NanoId 的分布式主键生成算法      |
 
-## ShardingAuditAlgorithm
-
-| *SPI 名称*                     | *详细说明*                 |
-| ----------------------------- | ------------------------- |
-| ShardingAuditAlgorithm        | 分片审计算法                |
+### ShardingAuditAlgorithm 已知实现类
 
 | *已知实现类*                                  | *详细说明*                         |
 |-------------------------------------------- |---------------------------------- |
 | DMLShardingConditionsShardingAuditAlgorithm | 禁止不带分片键的DML审计算法           |
 
-## DatetimeService
-
-| *SPI 名称*                       | *详细说明*                     |
-| ------------------------------- | ----------------------------- |
-| DatetimeService                 | 获取当前时间进行路由              |
+### DatetimeService 已知实现类
 
 | *已知实现类*                      | *详细说明*                     |
 | ------------------------------- | ----------------------------- |
 | DatabaseDatetimeServiceDelegate | 从数据库中获取当前时间进行路由      |
 | SystemDatetimeService           | 从应用系统时间中获取当前时间进行路由 |
 
-## DatabaseSQLEntry
-
-| *SPI 名称*                  | *详细说明*                         |
-| -------------------------- | --------------------------------- |
-| DatabaseSQLEntry           | 获取当前时间的数据库方言              |
+### DatabaseSQLEntry 已知实现类
 
 | *已知实现类*                 | *详细说明*                         |
 | -------------------------- | --------------------------------- |
diff --git a/docs/document/content/dev-manual/sharding.en.md b/docs/document/content/dev-manual/sharding.en.md
index d7b25deaa86..1aed24b135d 100644
--- a/docs/document/content/dev-manual/sharding.en.md
+++ b/docs/document/content/dev-manual/sharding.en.md
@@ -5,11 +5,19 @@ weight = 7
 chapter = true
 +++
 
-## ShardingAlgorithm
+## SPI Interface
 
-| *SPI Name*                          | *Description*                                  |
-| ----------------------------------- | ---------------------------------------------- |
-| ShardingAlgorithm                   | Sharding algorithm                             |
+| SPI Name                | Description                              |
+|-------------------------|------------------------------------------|
+| ShardingAlgorithm       | Sharding Algorithm                       |
+| KeyGenerateAlgorithm    | Distributed Key Generating Algorithm     |
+| ShardingAuditAlgorithm  | Sharding audit algorithm                 |
+| DatetimeService         | Obtain the current date for routing      |
+| DatabaseSQLEntry        | Obtain database dialects of current date |
+
+## Sample
+
+### ShardingAlgorithm Known Implementation Class
 
 | *Implementation Class*                  | *Description*                                                           |
 |-----------------------------------------|-------------------------------------------------------------------------|
@@ -27,11 +35,7 @@ chapter = true
 | CosIdIntervalShardingAlgorithm          | Fixed interval sharding algorithm provided by CosId                     |
 | CosIdSnowflakeIntervalShardingAlgorithm | Snowflake key-based fixed interval sharding algorithm provided by CosId |
 
-## KeyGenerateAlgorithm
-
-| *SPI Name*                    | *Description*                    |
-| ----------------------------- | -------------------------------- |
-| KeyGenerateAlgorithm          | Key generate algorithm           |
+### KeyGenerateAlgorithm Known Implementation Class
 
 | *Implementation Class*             | *Description*                                      |
 |----------------------------------- |--------------------------------------------------- |
@@ -41,32 +45,20 @@ chapter = true
 | CosIdSnowflakeKeyGenerateAlgorithm | Snowflake key generate algorithm provided by CosId |
 | NanoIdKeyGenerateAlgorithm         | NanoId key generate algorithm                      |
 
-## ShardingAuditAlgorithm
-
-| *SPI Name*                    | *Description*                    |
-| ----------------------------- | -------------------------------- |
-| ShardingAuditAlgorithm        | Sharding audit algorithm         |
+### ShardingAuditAlgorithm Known Implementation Class
 
 | *Implementation Class*                           | *Description*                                                 |
 |------------------------------------------------- |-------------------------------------------------------------- |
 | DMLShardingConditionsShardingAuditAlgorithm      | Prohibit DML auditing algorithm without sharding conditions   |
 
-## DatetimeService
-
-| *SPI Name*                      | *Description*                                                |
-| ------------------------------- | ------------------------------------------------------------ |
-| DatetimeService                 | Use current time for routing                                 |
+### DatetimeService Known Implementation Class
 
 | *Implementation Class*          | *Description*                                                |
 | ------------------------------- | ------------------------------------------------------------ |
 | DatabaseDatetimeServiceDelegate | Get the current time from the database for routing           |
 | SystemDatetimeService           | Get the current time from the application system for routing |
 
-## DatabaseSQLEntry
-
-| *SPI Name*                 | *Description*                           |
-| -------------------------- | --------------------------------------- |
-| DatabaseSQLEntry           | Database dialect for get current time   |
+### DatabaseSQLEntry Known Implementation Class
 
 | *Implementation Class*     | *Description*                           |
 | -------------------------- | --------------------------------------- |
