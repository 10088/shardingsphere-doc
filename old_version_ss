commit 93fc5cb18f68ce3d894b750e44644a1e0193908f
Author: Mike0601 <40025573+Mike0601@users.noreply.github.com>
Date:   Wed Aug 10 10:08:04 2022 +0800

    Update data migration doc (#20043)

diff --git a/docs/document/content/features/scaling/_index.cn.md b/docs/document/content/features/scaling/_index.cn.md
index 58988fc7fc6..df346aa24d0 100644
--- a/docs/document/content/features/scaling/_index.cn.md
+++ b/docs/document/content/features/scaling/_index.cn.md
@@ -5,9 +5,29 @@ weight = 7
 chapter = true
 +++
 
-## 定义
+## 背景
 
-数据迁移是指准备从一个存储集群提取数据，然后将数据写入到新的存储集群，并校验数据一致性。
+当业务持续发展，数据量和并发量达到一定程度，传统单体数据库可能面临性能、可扩展性、可用性等问题；
+
+业界曾提出 NoSQL 解决方案，通过数据分片和水平扩容解决以上问题，但是 NoSQL 数据库通常不支持事务和 SQL；
+
+ShardingSphere 也支持数据分片和水平扩容，可以解决以上问题，同时还支持分布式事务和 SQL；
+
+ShardingSphere 提供的数据迁移方案可以助力传统单体数据库平滑切换到 ShardingSphere。
+
+## 挑战
+
+在迁移过程中，不应该对正在运行的业务造成影响。尽可能减少迁移时数据不可用的时间窗口，是数据迁移的第一个挑战；
+
+其次，数据迁移不应该对现有的数据造成影响，如何保证数据的正确性，是数据迁移的第二个挑战。
+
+## 目标
+
+减少数据迁移时的业务影响，提供一站式的通用数据迁移解决方案，是 Apache ShardingSphere 数据迁移的主要设计目标。
+
+## 应用场景
+
+假如一个应用系统在使用传统单体数据库，单表数据量达到了1亿并且还在快速增长，单体数据库负载持续在高位，成为系统瓶颈。一旦数据库成为瓶颈，对应用服务器扩容是无效的，需要对数据库进行扩容。
 
 ## 相关参考
 
diff --git a/docs/document/content/features/scaling/_index.en.md b/docs/document/content/features/scaling/_index.en.md
index 748525bd447..76dbe876871 100644
--- a/docs/document/content/features/scaling/_index.en.md
+++ b/docs/document/content/features/scaling/_index.en.md
@@ -5,9 +5,31 @@ weight = 7
 chapter = true
 +++
 
-## Definition
+## Background
 
-Data migration refers to the preparation of data extraction from one storage cluster, the writing of that data to a new storage cluster and the verification of data consistency.
+In a scenario where the business continues to develop and the amount of data and concurrency reaches a certain extent, the traditional single database may face problems in terms of performance, scalability and availability.
+
+Although NoSQL solutions can solve the above problems through data sharding and horizontal scale-out, NoSQL databases generally do not support transactions and SQL.
+
+ShardingSphere can also solve the above problems and supports data sharding and horizontal scale-out, while at the same time, also supporting distributed transactions and SQL.
+
+The data migration scheme provided by ShardingSphere can help the traditional single database smoothly switch to ShardingSphere.
+
+## Challenges
+
+The data migration process should not affect the running services. So the first challenge is to minimize the time window during which data is not available.
+
+Next, data migration should not affect existing data. So the second challenge is to ensure the data correctness.
+
+## Goal
+
+The major goal of Apache ShardingSphere in performing data migration is to reduce the impact of data migration on services and provide a one-stop universal data migration solution.
+
+## Application Scenarios
+
+Application scenario one: when an application system is using a traditional single database, and the amount of data in a single table reaches 100 million and is still growing rapidly, a single database that continues to run with a high load will become the bottleneck of the system. 
+
+Once the database becomes the bottleneck, it is useless to scale out the application server. Instead, it is the database that needs to be scaled out. 
 
 ## Related References
 
