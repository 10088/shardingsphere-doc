commit 2e033af5993d7ad2a5205ca56724fd6197e6ce5e
Author: yx9o <yangx_soft@163.com>
Date:   Mon Aug 15 14:28:41 2022 +0800

    Updated documentation for Sharding. (#20182)

diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.cn.md
index 6f7d1e15ba3..a3ae7d5b432 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.cn.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.cn.md
@@ -71,16 +71,16 @@ algorithmName ::=
 ```sql
 -- 修改分片算法
 ALTER SHARDING ALGORITHM database_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 4}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${user_id % 4}"))
 ), table_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${order_id % 4}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${order_id % 4}"))
 ); 
 
 -- 修改分片规则为指定分片算法
 ALTER SHARDING TABLE RULE t_order (
     DATANODES("resource_${0..3}.t_order_item${0..3}"),
-    DATABASE_STRATEGY(TYPE=standard, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM=database_inline),
-    TABLE_STRATEGY(TYPE=standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline)
+    DATABASE_STRATEGY(TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM=database_inline),
+    TABLE_STRATEGY(TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline)
 );
 ```
 
@@ -89,20 +89,20 @@ ALTER SHARDING TABLE RULE t_order (
 ```sql
 -- 修改分片算法
 ALTER SHARDING ALGORITHM database_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 4}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${user_id % 4}"))
 ), table_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${order_id % 4}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${order_id % 4}"))
 ); 
 
 -- 修改默认分库策略
 ALTER DEFAULT SHARDING DATABASE STRATEGY (
-    TYPE = standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=database_inline
+    TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=database_inline
 );
 
 -- 修改分片规则为指定分片算法
 ALTER SHARDING TABLE RULE t_order (
     DATANODES("resource_${0..3}.t_order_item${0..3}"),
-    TABLE_STRATEGY(TYPE=standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline)
+    TABLE_STRATEGY(TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline)
 );
 ```
 
@@ -111,19 +111,19 @@ ALTER SHARDING TABLE RULE t_order (
 ```sql
 -- 修改分片算法
 ALTER SHARDING ALGORITHM database_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 4}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${user_id % 4}"))
 ), table_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${order_id % 4}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${order_id % 4}"))
 ); 
 
 -- 修改默认分库策略
 ALTER DEFAULT SHARDING DATABASE STRATEGY (
-    TYPE = standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=database_inline
+    TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=database_inline
 );
 
 -- 修改默认分表策略
 ALTER DEFAULT SHARDING TABLE STRATEGY (
-    TYPE = standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline
+    TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline
 );
 
 -- 修改分片规则
@@ -137,8 +137,8 @@ ALTER SHARDING TABLE RULE t_order (
 ```sql
 ALTER SHARDING TABLE RULE t_order (
     DATANODES("resource_${0..3}.t_order_item${0..3}"),
-    DATABASE_STRATEGY(TYPE=standard, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME=inline, PROPERTIES("algorithm-expression"="ds_${user_id % 2}")))),
-    TABLE_STRATEGY(TYPE=standard, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME=inline, PROPERTIES("algorithm-expression"="ds_${order_id % 2}"))))
+    DATABASE_STRATEGY(TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME="inline", PROPERTIES("algorithm-expression"="ds_${user_id % 2}")))),
+    TABLE_STRATEGY(TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME="inline", PROPERTIES("algorithm-expression"="ds_${order_id % 2}"))))
 );
 ```
 
@@ -149,7 +149,7 @@ ALTER SHARDING TABLE RULE t_order (
 ```sql
 ALTER SHARDING TABLE RULE t_order (
     RESOURCES(ds_0, ds_1),
-    SHARDING_COLUMN=order_id, TYPE(NAME=MOD, PROPERTIES("sharding-count"=4))
+    SHARDING_COLUMN=order_id, TYPE(NAME="MOD", PROPERTIES("sharding-count"="4"))
 );
 ```
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.en.md
index bee5e68fa72..bed423c32bf 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.en.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule.en.md
@@ -80,16 +80,16 @@ algorithmName ::=
 ```SQL
 -- alter sharding algorithms
 ALTER SHARDING ALGORITHM database_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 4}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${user_id % 4}"))
 ), table_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${order_id % 4}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${order_id % 4}"))
 ); 
 
 -- alter a sharding rule to the specified sharding algorithms being altered
 ALTER SHARDING TABLE RULE t_order (
     DATANODES("resource_${0..3}.t_order_item${0..3}"),
-    DATABASE_STRATEGY(TYPE=standard, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM=database_inline),
-    TABLE_STRATEGY(TYPE=standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline)
+    DATABASE_STRATEGY(TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM=database_inline),
+    TABLE_STRATEGY(TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline)
 );
 ```
 
@@ -98,20 +98,20 @@ ALTER SHARDING TABLE RULE t_order (
 ```sql
 -- alter sharding algorithms
 ALTER SHARDING ALGORITHM database_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 4}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${user_id % 4}"))
 ), table_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${order_id % 4}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${order_id % 4}"))
 ); 
 
 -- alter a default sharding database strategy
 ALTER DEFAULT SHARDING DATABASE STRATEGY (
-    TYPE = standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=database_inline
+    TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=database_inline
 );
 
 -- alter a sharding table rule to the specified sharding algorithm being altered
 ALTER SHARDING TABLE RULE t_order (
     DATANODES("resource_${0..3}.t_order_item${0..3}"),
-    TABLE_STRATEGY(TYPE=standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline)
+    TABLE_STRATEGY(TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline)
 );
 ```
 
@@ -120,19 +120,19 @@ ALTER SHARDING TABLE RULE t_order (
 ```SQL
 -- alter sharding algorithms
 ALTER SHARDING ALGORITHM database_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 4}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${user_id % 4}"))
 ), table_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${order_id % 4}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${order_id % 4}"))
 ); 
 
 -- alter a default sharding database strategy
 ALTER DEFAULT SHARDING DATABASE STRATEGY (
-    TYPE = standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=database_inline
+    TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=database_inline
 );
 
 -- alter a default sharding table strategy
 ALTER DEFAULT SHARDING TABLE STRATEGY (
-    TYPE = standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline
+    TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline
 );
 
 -- alter a sharding table rule
@@ -146,8 +146,8 @@ ALTER SHARDING TABLE RULE t_order (
 ```sql
 ALTER SHARDING TABLE RULE t_order (
     DATANODES("ds_${0..1}.t_order_${0..1}"),
-    DATABASE_STRATEGY(TYPE=standard, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME=inline, PROPERTIES("algorithm-expression"="ds_${user_id % 2}")))),
-    TABLE_STRATEGY(TYPE=standard, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME=inline, PROPERTIES("algorithm-expression"="ds_${order_id % 2}"))))
+    DATABASE_STRATEGY(TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME="inline", PROPERTIES("algorithm-expression"="ds_${user_id % 2}")))),
+    TABLE_STRATEGY(TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME="inline", PROPERTIES("algorithm-expression"="ds_${order_id % 2}"))))
 );
 ```
 
@@ -158,7 +158,7 @@ ALTER SHARDING TABLE RULE t_order (
 ```sql
 ALTER SHARDING TABLE RULE t_order (
     RESOURCES(ds_0, ds_1),
-    SHARDING_COLUMN=order_id, TYPE(NAME=MOD, PROPERTIES("sharding-count"=4))
+    SHARDING_COLUMN=order_id, TYPE(NAME="MOD", PROPERTIES("sharding-count"="4"))
 );
 ```
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.cn.md
index 2cea20077ce..933120352b2 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.cn.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.cn.md
@@ -44,12 +44,12 @@ algorithmType ::=
 ```sql
 -- 创建分片算法
 CREATE SHARDING ALGORITHM database_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
 );
 
 -- 创建默认分库策略
 CREATE DEFAULT SHARDING DATABASE STRATEGY (
-    TYPE=standard, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM=database_inline
+    TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM=database_inline
 );
 ```
 
@@ -58,7 +58,7 @@ CREATE DEFAULT SHARDING DATABASE STRATEGY (
 ```sql
 -- 创建默认分表策略
 CREATE DEFAULT SHARDING TABLE STRATEGY (
-    TYPE=standard, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 2}")))
+    TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 2}")))
 );
 ```
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.en.md
index e7fd8333e4e..6917e5c4e0a 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.en.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy.en.md
@@ -45,12 +45,12 @@ algorithmType ::=
 ```sql
 -- create a sharding algorithm
 CREATE SHARDING ALGORITHM database_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
 );
 
 -- create a default sharding database strategy
 CREATE DEFAULT SHARDING DATABASE STRATEGY (
-    TYPE=standard, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM=database_inline
+    TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM=database_inline
 );
 ```
 
@@ -59,7 +59,7 @@ CREATE DEFAULT SHARDING DATABASE STRATEGY (
 ```sql
 -- create a default sharding table strategy
 CREATE DEFAULT SHARDING TABLE STRATEGY (
-    TYPE=standard, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 2}")))
+    TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${user_id % 2}")))
 );
 ```
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-algorithm.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-algorithm.cn.md
index 40fc90ce014..95f4db5c2cd 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-algorithm.cn.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-algorithm.cn.md
@@ -37,12 +37,12 @@ algorithmType ::=
 ```SQL
 -- 创建类型为 INLINE 的分片算法
 CREATE SHARDING ALGORITHM inline_algorithm (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 2}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${user_id % 2}"))
 );
 
 -- 创建类型为 AUTO_INTERVAL 的分片算法
 CREATE SHARDING ALGORITHM interval_algorithm (
-    TYPE(NAME=auto_interval, PROPERTIES("datetime-lower"="2022-01-01 00:00:00", "datetime-upper"="2022-01-03 00:00:00", "sharding-seconds"="86400"))
+    TYPE(NAME="auto_interval", PROPERTIES("datetime-lower"="2022-01-01 00:00:00", "datetime-upper"="2022-01-03 00:00:00", "sharding-seconds"="86400"))
 );
 ```
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-algorithm.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-algorithm.en.md
index 5b494021f7e..29a2caa2abb 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-algorithm.en.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-algorithm.en.md
@@ -37,12 +37,12 @@ algorithmType ::=
 ```SQL
 -- create a sharding algorithm of type INLINE
 CREATE SHARDING ALGORITHM inline_algorithm (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 2}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${user_id % 2}"))
 );
 
 -- create a sharding algorithm of type AUTO_INTERVAL
 CREATE SHARDING ALGORITHM interval_algorithm (
-    TYPE(NAME=auto_interval, PROPERTIES("datetime-lower"="2022-01-01 00:00:00", "datetime-upper"="2022-01-03 00:00:00", "sharding-seconds"="86400"))
+    TYPE(NAME="auto_interval", PROPERTIES("datetime-lower"="2022-01-01 00:00:00", "datetime-upper"="2022-01-03 00:00:00", "sharding-seconds"="86400"))
 );
 ```
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-key-generator.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-key-generator.cn.md
index c7c2a6fd1d1..b4687a6edda 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-key-generator.cn.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-key-generator.cn.md
@@ -37,7 +37,7 @@ algorithmType ::=
 
 ```sql
 CREATE SHARDING KEY GENERATOR snowflake_key_generator (
-    TYPE(NAME=SNOWFLAKE, PROPERTIES("max-vibration-offset"=3))
+    TYPE(NAME="SNOWFLAKE", PROPERTIES("max-vibration-offset"="3"))
 );
 ```
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-key-generator.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-key-generator.en.md
index c211b5719db..ae966655a5e 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-key-generator.en.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-key-generator.en.md
@@ -38,7 +38,7 @@ algorithmType ::=
 
 ```sql
 CREATE SHARDING KEY GENERATOR snowflake_key_generator (
-    TYPE(NAME=SNOWFLAKE, PROPERTIES("max-vibration-offset"=3))
+    TYPE(NAME="SNOWFLAKE", PROPERTIES("max-vibration-offset"="3"))
 );
 ```
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.cn.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.cn.md
index 7526ad70904..3b37cc6e8d0 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.cn.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.cn.md
@@ -71,16 +71,16 @@ algorithmName ::=
 ```sql
 -- 创建分片算法
 CREATE SHARDING ALGORITHM database_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 2}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${user_id % 2}"))
 ), table_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
 ); 
 
 -- 指定分片算法创建分片规则
 CREATE SHARDING TABLE RULE t_order (
     DATANODES("ds_${0..1}.t_order_${0..1}"),
-    DATABASE_STRATEGY(TYPE=standard, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM=database_inline),
-    TABLE_STRATEGY(TYPE=standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline)
+    DATABASE_STRATEGY(TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM=database_inline),
+    TABLE_STRATEGY(TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline)
 );
 ```
 
@@ -89,20 +89,20 @@ CREATE SHARDING TABLE RULE t_order (
 ```sql
 -- 创建分片算法
 CREATE SHARDING ALGORITHM database_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 2}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${user_id % 2}"))
 ), table_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
 ); 
 
 -- 创建默认分库策略
 CREATE DEFAULT SHARDING DATABASE STRATEGY (
-    TYPE = standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=database_inline
+    TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=database_inline
 );
 
 -- 指定分片算法创建分片规则
 CREATE SHARDING TABLE RULE t_order (
     DATANODES("ds_${0..1}.t_order_${0..1}"),
-    TABLE_STRATEGY(TYPE=standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline)
+    TABLE_STRATEGY(TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline)
 );
 ```
 
@@ -111,19 +111,19 @@ CREATE SHARDING TABLE RULE t_order (
 ```sql
 -- 创建分片算法
 CREATE SHARDING ALGORITHM database_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 2}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${user_id % 2}"))
 ), table_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
 ); 
 
 -- 创建默认分库策略
 CREATE DEFAULT SHARDING DATABASE STRATEGY (
-    TYPE = standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=database_inline
+    TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=database_inline
 );
 
 -- 创建默认分表策略
 CREATE DEFAULT SHARDING TABLE STRATEGY (
-    TYPE = standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline
+    TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline
 );
 
 -- 创建分片规则
@@ -137,8 +137,8 @@ CREATE SHARDING TABLE RULE t_order (
 ```sql
 CREATE SHARDING TABLE RULE t_order (
     DATANODES("ds_${0..1}.t_order_${0..1}"),
-    DATABASE_STRATEGY(TYPE=standard, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME=inline, PROPERTIES("algorithm-expression"="ds_${user_id % 2}")))),
-    TABLE_STRATEGY(TYPE=standard, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME=inline, PROPERTIES("algorithm-expression"="ds_${order_id % 2}"))))
+    DATABASE_STRATEGY(TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME="inline", PROPERTIES("algorithm-expression"="ds_${user_id % 2}")))),
+    TABLE_STRATEGY(TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME="inline", PROPERTIES("algorithm-expression"="ds_${order_id % 2}"))))
 );
 ```
 
@@ -149,7 +149,7 @@ CREATE SHARDING TABLE RULE t_order (
 ```sql
 CREATE SHARDING TABLE RULE t_order (
     RESOURCES(ds_0, ds_1),
-    SHARDING_COLUMN=order_id, TYPE(NAME=MOD, PROPERTIES("sharding-count"=4))
+    SHARDING_COLUMN=order_id, TYPE(NAME="MOD", PROPERTIES("sharding-count"="4"))
 );
 ```
 
diff --git a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.en.md b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.en.md
index 9c8a44a9797..db8dbbed400 100644
--- a/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.en.md
+++ b/docs/document/content/reference/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule.en.md
@@ -80,16 +80,16 @@ algorithmName ::=
 ```SQL
 -- create sharding algorithms
 CREATE SHARDING ALGORITHM database_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 2}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${user_id % 2}"))
 ), table_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
 ); 
 
 -- create a sharding rule by specifying sharding algorithms
 CREATE SHARDING TABLE RULE t_order (
     DATANODES("ds_${0..1}.t_order_${0..1}"),
-    DATABASE_STRATEGY(TYPE=standard, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM=database_inline),
-    TABLE_STRATEGY(TYPE=standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline)
+    DATABASE_STRATEGY(TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM=database_inline),
+    TABLE_STRATEGY(TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline)
 );
 ```
 
@@ -98,20 +98,20 @@ CREATE SHARDING TABLE RULE t_order (
 ```sql
 -- create sharding algorithms
 CREATE SHARDING ALGORITHM database_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 2}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${user_id % 2}"))
 ), table_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
 ); 
 
 -- create a default sharding database strategy
 CREATE DEFAULT SHARDING DATABASE STRATEGY (
-    TYPE = standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=database_inline
+    TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=database_inline
 );
 
 -- create a sharding table rule by specifying a sharding algorithm
 CREATE SHARDING TABLE RULE t_order (
     DATANODES("ds_${0..1}.t_order_${0..1}"),
-    TABLE_STRATEGY(TYPE=standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline)
+    TABLE_STRATEGY(TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline)
 );
 ```
 
@@ -120,19 +120,19 @@ CREATE SHARDING TABLE RULE t_order (
 ```SQL
 -- create sharding algorithms
 CREATE SHARDING ALGORITHM database_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${user_id % 2}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${user_id % 2}"))
 ), table_inline (
-    TYPE(NAME=inline, PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
+    TYPE(NAME="inline", PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
 ); 
 
 -- create a default sharding database strategy
 CREATE DEFAULT SHARDING DATABASE STRATEGY (
-    TYPE = standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=database_inline
+    TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=database_inline
 );
 
 -- create a default sharding table strategy
 CREATE DEFAULT SHARDING TABLE STRATEGY (
-    TYPE = standard, SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline
+    TYPE="standard", SHARDING_COLUMN=order_id, SHARDING_ALGORITHM=table_inline
 );
 
 -- create a sharding table rule 
@@ -146,8 +146,8 @@ CREATE SHARDING TABLE RULE t_order (
 ```sql
 CREATE SHARDING TABLE RULE t_order (
     DATANODES("ds_${0..1}.t_order_${0..1}"),
-    DATABASE_STRATEGY(TYPE=standard, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME=inline, PROPERTIES("algorithm-expression"="ds_${user_id % 2}")))),
-    TABLE_STRATEGY(TYPE=standard, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME=inline, PROPERTIES("algorithm-expression"="ds_${order_id % 2}"))))
+    DATABASE_STRATEGY(TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME="inline", PROPERTIES("algorithm-expression"="ds_${user_id % 2}")))),
+    TABLE_STRATEGY(TYPE="standard", SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME="inline", PROPERTIES("algorithm-expression"="ds_${order_id % 2}"))))
 );
 ```
 
@@ -158,7 +158,7 @@ CREATE SHARDING TABLE RULE t_order (
 ```sql
 CREATE SHARDING TABLE RULE t_order (
     RESOURCES(ds_0, ds_1),
-    SHARDING_COLUMN=order_id, TYPE(NAME=MOD, PROPERTIES("sharding-count"=4))
+    SHARDING_COLUMN=order_id, TYPE(NAME="MOD", PROPERTIES("sharding-count"="4"))
 );
 ```
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.cn.md
index dd81e4f2c0b..983d42da275 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.cn.md
@@ -206,14 +206,14 @@ DROP SHARDING KEY GENERATOR snowflake_key_generator;
 ```sql
 CREATE SHARDING TABLE RULE t_order (
 RESOURCES(resource_0,resource_1),
-SHARDING_COLUMN=order_id,TYPE(NAME=hash_mod,PROPERTIES("sharding-count"=4)),
-KEY_GENERATE_STRATEGY(COLUMN=another_id,TYPE(NAME=snowflake))
+SHARDING_COLUMN=order_id,TYPE(NAME="hash_mod",PROPERTIES("sharding-count"="4")),
+KEY_GENERATE_STRATEGY(COLUMN=another_id,TYPE(NAME="snowflake"))
 );
 
 ALTER SHARDING TABLE RULE t_order (
 RESOURCES(resource_0,resource_1,resource_2,resource_3),
-SHARDING_COLUMN=order_id,TYPE(NAME=hash_mod,PROPERTIES("sharding-count"=16)),
-KEY_GENERATE_STRATEGY(COLUMN=another_id,TYPE(NAME=snowflake))
+SHARDING_COLUMN=order_id,TYPE(NAME="hash_mod",PROPERTIES("sharding-count"="16")),
+KEY_GENERATE_STRATEGY(COLUMN=another_id,TYPE(NAME="snowflake"))
 );
 
 DROP SHARDING TABLE RULE t_order;
@@ -225,26 +225,26 @@ DROP SHARDING ALGORITHM t_order_hash_mod;
 
 ```sql
 CREATE SHARDING ALGORITHM table_inline (
-TYPE(NAME=inline,PROPERTIES("algorithm-expression"="t_order_item_${order_id % 2}"))
+TYPE(NAME="inline",PROPERTIES("algorithm-expression"="t_order_item_${order_id % 2}"))
 );
 
 CREATE SHARDING TABLE RULE t_order_item (
 DATANODES("resource_${0..1}.t_order_item_${0..1}"),
-DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM(TYPE(NAME=inline,PROPERTIES("algorithm-expression"="resource_${user_id % 2}")))),
-TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=table_inline),
+DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM(TYPE(NAME="inline",PROPERTIES("algorithm-expression"="resource_${user_id % 2}")))),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=table_inline),
 KEY_GENERATE_STRATEGY(COLUMN=another_id,KEY_GENERATOR=snowflake_key_generator)
 );
 
 ALTER SHARDING ALGORITHM database_inline (
-TYPE(NAME=inline,PROPERTIES("algorithm-expression"="resource_${user_id % 4}"))
+TYPE(NAME="inline",PROPERTIES("algorithm-expression"="resource_${user_id % 4}"))
 ),table_inline (
-TYPE(NAME=inline,PROPERTIES("algorithm-expression"="t_order_item_${order_id % 4}"))
+TYPE(NAME="inline",PROPERTIES("algorithm-expression"="t_order_item_${order_id % 4}"))
 );
 
 ALTER SHARDING TABLE RULE t_order_item (
 DATANODES("resource_${0..3}.t_order_item${0..3}"),
-DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
-TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=table_inline),
+DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=table_inline),
 KEY_GENERATE_STRATEGY(COLUMN=another_id,KEY_GENERATOR=snowflake_key_generator)
 );
 
@@ -253,11 +253,11 @@ DROP SHARDING TABLE RULE t_order_item;
 DROP SHARDING ALGORITHM database_inline;
 
 CREATE DEFAULT SHARDING DATABASE STRATEGY (
-TYPE = standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=database_inline
+TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=database_inline
 );
 
 ALTER DEFAULT SHARDING DATABASE STRATEGY (
-TYPE = standard,SHARDING_COLUMN=another_id,SHARDING_ALGORITHM=database_inline
+TYPE="standard",SHARDING_COLUMN=another_id,SHARDING_ALGORITHM=database_inline
 );
 
 DROP DEFAULT SHARDING DATABASE STRATEGY;
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.en.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.en.md
index c73a7dd0afa..12cb100bcff 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding.en.md
@@ -206,14 +206,14 @@ DROP SHARDING KEY GENERATOR snowflake_key_generator;
 ```sql
 CREATE SHARDING TABLE RULE t_order (
 RESOURCES(resource_0,resource_1),
-SHARDING_COLUMN=order_id,TYPE(NAME=hash_mod,PROPERTIES("sharding-count"=4)),
-KEY_GENERATE_STRATEGY(COLUMN=another_id,TYPE(NAME=snowflake))
+SHARDING_COLUMN=order_id,TYPE(NAME="hash_mod",PROPERTIES("sharding-count"="4")),
+KEY_GENERATE_STRATEGY(COLUMN=another_id,TYPE(NAME="snowflake"))
 );
 
 ALTER SHARDING TABLE RULE t_order (
 RESOURCES(resource_0,resource_1,resource_2,resource_3),
-SHARDING_COLUMN=order_id,TYPE(NAME=hash_mod,PROPERTIES("sharding-count"=16)),
-KEY_GENERATE_STRATEGY(COLUMN=another_id,TYPE(NAME=snowflake))
+SHARDING_COLUMN=order_id,TYPE(NAME="hash_mod",PROPERTIES("sharding-count"="16")),
+KEY_GENERATE_STRATEGY(COLUMN=another_id,TYPE(NAME="snowflake"))
 );
 
 DROP SHARDING TABLE RULE t_order;
@@ -225,26 +225,26 @@ DROP SHARDING ALGORITHM t_order_hash_mod;
 
 ```sql
 CREATE SHARDING ALGORITHM table_inline (
-TYPE(NAME=inline,PROPERTIES("algorithm-expression"="t_order_item_${order_id % 2}"))
+TYPE(NAME="inline",PROPERTIES("algorithm-expression"="t_order_item_${order_id % 2}"))
 );
 
 CREATE SHARDING TABLE RULE t_order_item (
 DATANODES("resource_${0..1}.t_order_item_${0..1}"),
-DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM(TYPE(NAME=inline,PROPERTIES("algorithm-expression"="resource_${user_id % 2}")))),
-TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=table_inline),
+DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM(TYPE(NAME="inline",PROPERTIES("algorithm-expression"="resource_${user_id % 2}")))),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=table_inline),
 KEY_GENERATE_STRATEGY(COLUMN=another_id,KEY_GENERATOR=snowflake_key_generator)
 );
 
 ALTER SHARDING ALGORITHM database_inline (
-TYPE(NAME=inline,PROPERTIES("algorithm-expression"="resource_${user_id % 4}"))
+TYPE(NAME="inline",PROPERTIES("algorithm-expression"="resource_${user_id % 4}"))
 ),table_inline (
-TYPE(NAME=inline,PROPERTIES("algorithm-expression"="t_order_item_${order_id % 4}"))
+TYPE(NAME="inline",PROPERTIES("algorithm-expression"="t_order_item_${order_id % 4}"))
 );
 
 ALTER SHARDING TABLE RULE t_order_item (
 DATANODES("resource_${0..3}.t_order_item${0..3}"),
-DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
-TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=table_inline),
+DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=table_inline),
 KEY_GENERATE_STRATEGY(COLUMN=another_id,KEY_GENERATOR=snowflake_key_generator)
 );
 
@@ -253,11 +253,11 @@ DROP SHARDING TABLE RULE t_order_item;
 DROP SHARDING ALGORITHM database_inline;
 
 CREATE DEFAULT SHARDING DATABASE STRATEGY (
-TYPE = standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=database_inline
+TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=database_inline
 );
 
 ALTER DEFAULT SHARDING DATABASE STRATEGY (
-TYPE = standard,SHARDING_COLUMN=another_id,SHARDING_ALGORITHM=database_inline
+TYPE="standard",SHARDING_COLUMN=another_id,SHARDING_ALGORITHM=database_inline
 );
 
 DROP DEFAULT SHARDING DATABASE STRATEGY;
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rql/rule-query/sharding.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rql/rule-query/sharding.cn.md
index ef90de35bf7..76fbfe4fcfd 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rql/rule-query/sharding.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rql/rule-query/sharding.cn.md
@@ -16,7 +16,7 @@ SHOW UNUSED SHARDING ALGORITHMS [FROM databaseName]
     
 SHOW SHARDING AUDITORS [FROM databaseName]
 
-SHOW SHARDING TABLE RULES USED ALGORITHM algorithmName [FROM databaseName]
+SHOW SHARDING TABLE RULES USED ALGORITHM shardingAlgorithmName [FROM databaseName]
 
 SHOW SHARDING KEY GENERATORS [FROM databaseName]
 
@@ -216,7 +216,7 @@ mysql> SHOW SHARDING AUDITORS;
 2 row in set (0.01 sec)
 ```
 
-*SHOW SHARDING TABLE RULES USED ALGORITHM algorithmName*
+*SHOW SHARDING TABLE RULES USED ALGORITHM shardingAlgorithmName*
 ```sql
 mysql> SHOW SHARDING TABLE RULES USED ALGORITHM t_order_inline;
 +-------+---------+
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rql/rule-query/sharding.en.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rql/rule-query/sharding.en.md
index e319bbc37e6..338446f7b93 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rql/rule-query/sharding.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/syntax/rql/rule-query/sharding.en.md
@@ -16,7 +16,7 @@ SHOW UNUSED SHARDING ALGORITHMS [FROM databaseName]
     
 SHOW SHARDING AUDITORS [FROM databaseName]
 
-SHOW SHARDING TABLE RULES USED ALGORITHM algorithmName [FROM databaseName]
+SHOW SHARDING TABLE RULES USED ALGORITHM shardingAlgorithmName [FROM databaseName]
 
 SHOW SHARDING KEY GENERATORS [FROM databaseName]
 
@@ -216,7 +216,7 @@ mysql> SHOW SHARDING AUDITORS;
 2 row in set (0.01 sec)
 ```
 
-*SHOW SHARDING TABLE RULES USED ALGORITHM algorithmName*
+*SHOW SHARDING TABLE RULES USED ALGORITHM shardingAlgorithmName*
 ```sql
 mysql> SHOW SHARDING TABLE RULES USED ALGORITHM t_order_inline;
 +-------+---------+
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/usage/sharding-rule.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/usage/sharding-rule.cn.md
index 24a0f911a30..4eabf043ce8 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/usage/sharding-rule.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/usage/sharding-rule.cn.md
@@ -29,8 +29,8 @@ ADD RESOURCE ds_0 (
 CREATE SHARDING TABLE RULE t_order(
 RESOURCES(ds_0,ds_1),
 SHARDING_COLUMN=order_id,
-TYPE(NAME=hash_mod,PROPERTIES("sharding-count"=4)),
-KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME=snowflake))
+TYPE(NAME="hash_mod",PROPERTIES("sharding-count"="4")),
+KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME="snowflake"))
 );
 ```
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/distsql/usage/sharding-rule.en.md b/docs/document/content/user-manual/shardingsphere-proxy/distsql/usage/sharding-rule.en.md
index 416237483c8..c3c8752b328 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/distsql/usage/sharding-rule.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/distsql/usage/sharding-rule.en.md
@@ -31,8 +31,8 @@ ADD RESOURCE ds_0 (
 CREATE SHARDING TABLE RULE t_order(
 RESOURCES(ds_0,ds_1),
 SHARDING_COLUMN=order_id,
-TYPE(NAME=hash_mod,PROPERTIES("sharding-count"=4)),
-KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME=snowflake))
+TYPE(NAME="hash_mod",PROPERTIES("sharding-count"="4")),
+KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME="snowflake"))
 );
 ```
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/scaling/usage.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/scaling/usage.cn.md
index 8268b8deabc..aea061a6a6b 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/scaling/usage.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/scaling/usage.cn.md
@@ -164,8 +164,8 @@ DistSQL 字段含义和 YAML 配置保持一致，详情请参见 [YAML 配置#
 ALTER SHARDING TABLE RULE t_order (
 RESOURCES(ds_2, ds_3, ds_4),
 SHARDING_COLUMN=order_id,
-TYPE(NAME=hash_mod,PROPERTIES("sharding-count"=6)),
-KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME=snowflake))
+TYPE(NAME="hash_mod",PROPERTIES("sharding-count"="6")),
+KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME="snowflake"))
 );
 ```
 
@@ -174,19 +174,19 @@ KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME=snowflake))
 `TableRule` 修改示例：
 ```sql
 ALTER SHARDING ALGORITHM database_inline (
-TYPE(NAME=INLINE,PROPERTIES("algorithm-expression"="ds_${user_id % 3 + 2}"))
+TYPE(NAME="INLINE",PROPERTIES("algorithm-expression"="ds_${user_id % 3 + 2}"))
 );
 
 ALTER SHARDING TABLE RULE t_order (
 DATANODES("ds_${2..4}.t_order_${0..1}"),
-DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
-TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_inline),
-KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME=snowflake))
+DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_inline),
+KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME="snowflake"))
 ), t_order_item (
 DATANODES("ds_${2..4}.t_order_item_${0..1}"),
-DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
-TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_item_inline),
-KEY_GENERATE_STRATEGY(COLUMN=order_item_id,TYPE(NAME=snowflake))
+DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_item_inline),
+KEY_GENERATE_STRATEGY(COLUMN=order_item_id,TYPE(NAME="snowflake"))
 );
 ```
 
@@ -328,25 +328,25 @@ ADD RESOURCE ds_0 (
 把现有系统中的表配置到规则里，使用 tables 规则 INLINE 算法，方便适配已有的表名。
 ```sql
 CREATE SHARDING ALGORITHM database_inline (
-TYPE(NAME=INLINE,PROPERTIES("algorithm-expression"="ds_${user_id % 2}"))
+TYPE(NAME="INLINE",PROPERTIES("algorithm-expression"="ds_${user_id % 2}"))
 );
 CREATE SHARDING ALGORITHM t_order_inline (
-TYPE(NAME=INLINE,PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
+TYPE(NAME="INLINE",PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
 );
 CREATE SHARDING ALGORITHM t_order_item_inline (
-TYPE(NAME=INLINE,PROPERTIES("algorithm-expression"="t_order_item_${order_id % 2}"))
+TYPE(NAME="INLINE",PROPERTIES("algorithm-expression"="t_order_item_${order_id % 2}"))
 );
 
 CREATE SHARDING TABLE RULE t_order (
 DATANODES("ds_${0..1}.t_order_${0..1}"),
-DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
-TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_inline),
-KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME=snowflake))
+DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_inline),
+KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME="snowflake"))
 ), t_order_item (
 DATANODES("ds_${0..1}.t_order_item_${0..1}"),
-DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
-TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_item_inline),
-KEY_GENERATE_STRATEGY(COLUMN=order_item_id,TYPE(NAME=snowflake))
+DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_item_inline),
+KEY_GENERATE_STRATEGY(COLUMN=order_item_id,TYPE(NAME="snowflake"))
 );
 
 CREATE SHARDING SCALING RULE scaling_manual2 (
@@ -415,19 +415,19 @@ ADD RESOURCE ds_2 (
 修改分片规则触发迁移：
 ```sql
 ALTER SHARDING ALGORITHM database_inline (
-TYPE(NAME=INLINE,PROPERTIES("algorithm-expression"="ds_${user_id % 3 + 2}"))
+TYPE(NAME="INLINE",PROPERTIES("algorithm-expression"="ds_${user_id % 3 + 2}"))
 );
 
 ALTER SHARDING TABLE RULE t_order (
 DATANODES("ds_${2..4}.t_order_${0..1}"),
-DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
-TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_inline),
-KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME=snowflake))
+DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_inline),
+KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME="snowflake"))
 ), t_order_item (
 DATANODES("ds_${2..4}.t_order_item_${0..1}"),
-DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
-TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_item_inline),
-KEY_GENERATE_STRATEGY(COLUMN=order_item_id,TYPE(NAME=snowflake))
+DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_item_inline),
+KEY_GENERATE_STRATEGY(COLUMN=order_item_id,TYPE(NAME="snowflake"))
 );
 ```
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/scaling/usage.en.md b/docs/document/content/user-manual/shardingsphere-proxy/scaling/usage.en.md
index 2f7ca8f28cc..1ae59e49309 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/scaling/usage.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/scaling/usage.en.md
@@ -166,8 +166,8 @@ Example of alter `AutoTableRule`:
 ALTER SHARDING TABLE RULE t_order (
 RESOURCES(ds_2, ds_3, ds_4),
 SHARDING_COLUMN=order_id,
-TYPE(NAME=hash_mod,PROPERTIES("sharding-count"=6)),
-KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME=snowflake))
+TYPE(NAME="hash_mod",PROPERTIES("sharding-count"="6")),
+KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME="snowflake"))
 );
 ```
 
@@ -176,19 +176,19 @@ KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME=snowflake))
 Uncompleted example of alter `TableRule`:
 ```sql
 ALTER SHARDING ALGORITHM database_inline (
-TYPE(NAME=INLINE,PROPERTIES("algorithm-expression"="ds_${user_id % 3 + 2}"))
+TYPE(NAME="INLINE",PROPERTIES("algorithm-expression"="ds_${user_id % 3 + 2}"))
 );
 
 ALTER SHARDING TABLE RULE t_order (
 DATANODES("ds_${2..4}.t_order_${0..1}"),
-DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
-TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_inline),
-KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME=snowflake))
+DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_inline),
+KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME="snowflake"))
 ), t_order_item (
 DATANODES("ds_${2..4}.t_order_item_${0..1}"),
-DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
-TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_item_inline),
-KEY_GENERATE_STRATEGY(COLUMN=order_item_id,TYPE(NAME=snowflake))
+DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_item_inline),
+KEY_GENERATE_STRATEGY(COLUMN=order_item_id,TYPE(NAME="snowflake"))
 );
 ```
 
@@ -330,25 +330,25 @@ Configure rules:
 Configure tables of existing system in sharding rule, sharding table rules and INLINE algorithm will be used to fit existing tables name.
 ```sql
 CREATE SHARDING ALGORITHM database_inline (
-TYPE(NAME=INLINE,PROPERTIES("algorithm-expression"="ds_${user_id % 2}"))
+TYPE(NAME="INLINE",PROPERTIES("algorithm-expression"="ds_${user_id % 2}"))
 );
 CREATE SHARDING ALGORITHM t_order_inline (
-TYPE(NAME=INLINE,PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
+TYPE(NAME="INLINE",PROPERTIES("algorithm-expression"="t_order_${order_id % 2}"))
 );
 CREATE SHARDING ALGORITHM t_order_item_inline (
-TYPE(NAME=INLINE,PROPERTIES("algorithm-expression"="t_order_item_${order_id % 2}"))
+TYPE(NAME="INLINE",PROPERTIES("algorithm-expression"="t_order_item_${order_id % 2}"))
 );
 
 CREATE SHARDING TABLE RULE t_order (
 DATANODES("ds_${0..1}.t_order_${0..1}"),
-DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
-TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_inline),
-KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME=snowflake))
+DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_inline),
+KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME="snowflake"))
 ), t_order_item (
 DATANODES("ds_${0..1}.t_order_item_${0..1}"),
-DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
-TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_item_inline),
-KEY_GENERATE_STRATEGY(COLUMN=order_item_id,TYPE(NAME=snowflake))
+DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_item_inline),
+KEY_GENERATE_STRATEGY(COLUMN=order_item_id,TYPE(NAME="snowflake"))
 );
 
 CREATE SHARDING SCALING RULE scaling_manual2 (
@@ -417,19 +417,19 @@ ADD RESOURCE ds_2 (
 Alter sharding rule to emit scaling job:
 ```sql
 ALTER SHARDING ALGORITHM database_inline (
-TYPE(NAME=INLINE,PROPERTIES("algorithm-expression"="ds_${user_id % 3 + 2}"))
+TYPE(NAME="INLINE",PROPERTIES("algorithm-expression"="ds_${user_id % 3 + 2}"))
 );
 
 ALTER SHARDING TABLE RULE t_order (
 DATANODES("ds_${2..4}.t_order_${0..1}"),
-DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
-TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_inline),
-KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME=snowflake))
+DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_inline),
+KEY_GENERATE_STRATEGY(COLUMN=order_id,TYPE(NAME="snowflake"))
 ), t_order_item (
 DATANODES("ds_${2..4}.t_order_item_${0..1}"),
-DATABASE_STRATEGY(TYPE=standard,SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
-TABLE_STRATEGY(TYPE=standard,SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_item_inline),
-KEY_GENERATE_STRATEGY(COLUMN=order_item_id,TYPE(NAME=snowflake))
+DATABASE_STRATEGY(TYPE="standard",SHARDING_COLUMN=user_id,SHARDING_ALGORITHM=database_inline),
+TABLE_STRATEGY(TYPE="standard",SHARDING_COLUMN=order_id,SHARDING_ALGORITHM=t_order_item_inline),
+KEY_GENERATE_STRATEGY(COLUMN=order_item_id,TYPE(NAME="snowflake"))
 );
 ```
 
